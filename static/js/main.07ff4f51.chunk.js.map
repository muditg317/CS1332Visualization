{"version":3,"sources":["res/images/logo.svg","components/app/nav-bar/nav-bar.jsx","components/app/app-header/app-header.jsx","components/app/app-footer/app-footer.jsx","components/home/home.jsx","components/about/about.jsx","components/visualizer/controlBar/controlBar.jsx","utils/ControlBuilder.js","utils/Colors.js","utils/Utils.js","animation/AnimatedObject.js","animation/AttractedDraggableObject.js","animation/AttractedHighlightableObject.js","animation/Animator.js","animation/Visualization.js","animation/ArrayList/ArrayList.js","animation/SinglyLinkedList/SinglyLinkedList.js","animation/DoublyLinkedList/DoublyLinkedList.js","animation/CircularSinglyLinkedList/CircularSinglyLinkedList.js","animation/StackArray/StackArray.js","animation/QueueArray/QueueArray.js","animation/DequeArray/DequeArray.js","animation/StackLinkedList/StackLinkedList.js","animation/QueueLinkedList/QueueLinkedList.js","animation/DequeLinkedList/DequeLinkedList.js","components/visualizer/visualizer.jsx","components/lists/list-ADT.jsx","components/lists/arraylist/arraylist.jsx","components/lists/singly-linked-list/singly-linked-list.jsx","components/lists/doubly-linked-list/doubly-linked-list.jsx","components/lists/circular-singly-linked-list/circular-singly-linked-list.jsx","components/lists/lists.jsx","components/stacks-queues-deques/stack-ADT.jsx","components/stacks-queues-deques/queue-ADT.jsx","components/stacks-queues-deques/deque-ADT.jsx","components/stacks-queues-deques/stack-array/stack-array.jsx","components/stacks-queues-deques/queue-array/queue-array.jsx","components/stacks-queues-deques/deque-array/deque-array.jsx","components/stacks-queues-deques/stack-linked-list/stack-linked-list.jsx","components/stacks-queues-deques/queue-linked-list/queue-linked-list.jsx","components/stacks-queues-deques/deque-linked-list/deque-linked-list.jsx","components/stacks-queues-deques/stacks-queues-deques.jsx","components/datastructures/datastructures.jsx","serviceWorker.js","index.js","components/app/app.jsx"],"names":["module","exports","NavBar","props","state","responsive","selfRef","React","createRef","handleDocumentClick","bind","clear","document","body","scrollTop","documentElement","this","setState","addEventListener","removeEventListener","event","current","contains","target","scrollToTop","id","className","ref","to","window","location","href","substring","indexOf","length","src","logo","alt","nav_items","map","nav_item","key","link","content","container","onClick","toggleResponsiveNav","Component","NavBarItem","icon","title_text","drop_down_items","showDropDown","show","setShowDropDown","parentRef","parent","items","parentRoute","NavBarItemTitle","parentNavItem","onMouseDown","containingNavItemRef","e","nativeEvent","which","hash","NavBarDropDown","drop_down_item","NavBarDropDownItem","side_pane_items","showSidePane","toggleShowSidePane","setShowSidePane","NavBarDropDownItemTitle","parentDropDownItem","containingDropDownItemRef","NavBarSidePane","side_pane_item","NavBarSideItem","AppHeader","AppFooter","Home","About","ControlBar","defaultContainer","defaults","mainContainer","controlBar","label","defaultsLabel","forceUpdate","mainLabel","controlGroup","appendChild","transformed","getBoundingClientRect","width","parseFloat","getComputedStyle","getPropertyValue","classList","add","remove","testSize","PureComponent","newEmptyControl","emptyControl","createElement","applyStyle","createControl","type","value","newControl","setAttribute","createButton","createField","prompt","field","validators","forEach","validator","createLabel","text","control","newLabel","innerHTML","validatorIntOnly","match","reduce","sum","char","validatorMaxLength","maxLength","Math","min","addSubmit","callback","undefined","console","log","createSlider","max","defaultValue","step","slider","createControlGroup","controls","setTabControl","nextControl","shifted","preventDefault","blur","focus","styleType","style","RED","GREEN","BLUE","BLACK","WHITE","addArray","array","newArr","arrays","item","i","isDev","process","AnimatedObject","xProgress","yProgress","direction","animationSpeed","inPosition","sign","AttractedDraggableObject","x","y","currentX","currentY","desiredX","desiredY","vx","vy","frozen","onStop","pinnedToMouse","mouseOffsetX","mouseOffsetY","sqrt","pow","push","shift","mouseX","mouseY","constructor","CAN_DRAG","p5","deltaX","deltaY","isNaN","stop","angle","atan","PI","magnitude","ATTRACTION","prevAngle","cos","sin","abs","MIN_DISTANCE","AttractedHighlightableObject","options","highlighted","highlightColor","Colors","highlightShape","HIGHLIGHT_CIRCLE","Object","entries","option","color","shape","floor","Visualizer","maxAnimationSpeed","stroke","noFill","strokeWeight","HIGHTLIGHT_WIDTH","diameter","highlightInnerRadius","highlightOuterRadius","circle","HIGHLIGHT_SQUARE","square","pop","textAlign","CENTER","fill","radius","toString","drawHighlight","drawValue","Animator","events","objects","connectingEdges","filter","Visualization","animator","SUPPORTS_TEXT","displayText","displayTextColor","showText","updateText","SUPPORTS_NO_LOOP","drawing","beginDrawLoop","endDrawLoop","SUPPORTS_ANIMATION_CONTROL","paused","undo","Proxy","get","propertyName","receiver","redo","playPause","play","pause","animationHistory","runningAnimation","animationQueue","animating","stopDrawing","disable","canStepBack","enable","canStepForward","method","explanation","j","params","textAnimation","getLastTextAnimation","previousAnimation","scope","undoMethod","name","undoData","apply","undoText","customUndoEnd","unshift","isAnimationStep","undoAnimation","unAnimate","emit","noAnim","previousAnimationSequence","stepBack","nextAnimation","customRedoEnd","redoData","retVal","returnValue","isAnimStart","isAnimEnd","isEndDrawLoopTrigger","explanationUsesReturn","replace","redoAnimation","reAnimate","animation","time","setTimeout","callForward","SET_BOUNDS","height","popAnimation","SUPPORTS_CUSTOM_END","noAnimation","customEnd","doneAnimating","MAX_ANIM_TIME","loop","noLoop","textSize","LEFT","TOP","numScrollbars","maxY","windowWidth","querySelector","resizeCanvas","ArrayList","reset","backingArray","INITIAL_CAPACITY","ArrayElement","size","index","data","doubleSize","shiftForIndex","setIndex","sizeIncr","addAnimation","addAtIndex","element","shiftIntoIndex","sizeDecr","removeFromIndex","resetElement","incrLength","shiftElement","shiftElementMovement","shiftElementIndex","ELEMENT_SIZE","update","foundAnimElement","maxPerRow","rows","ceil","translate","row","numElements","noStroke","rect","block","line","nextX","nextY","draw","USE_CANVAS","toX","toY","posX","posY","SinglyLinkedList","head","nodes","tempNode","pinnedNode","node","nextNode","moveHighlight","next","makeNode","setTempNodeBefore","setTempNodePrev","shiftForNode","insertTempNode","prev","toDelete","markNodeForDeletion","unmakeNode","shiftIntoNode","skipTempNode","SinglyLinkedListNode","splice","getNodePosition","fromNode","toNode","unHighlight","highlight","nodeToDelete","markForDeletion","addOnStop","shiftNode","ELEMENT_HEIGHT","containsPos","pin","unpin","markBroken","highlightForDeletion","updateNode","ELEMENT_WIDTH","pressedNode","getNodeAtPos","POINTER_WIDTH","ITEM_WIDTH","SPACING","MAX_DIST_REMOVE","handBroken","displacement","dist","Utils","DoublyLinkedList","tail","skipTempNodePrev","skipTempNodeNext","DoublyLinkedListNode","ELEMENT_PADDED_WIDTH","CircularSinglyLinkedList","changeHeadData","customNodeShift","resetHead","CircularSinglyLinkedListNode","unfreeze","pointsToHead","curveTightness","beginShape","curveVertex","endShape","StackArray","made","Array","copyArray","tempElement","topPointerValue","topPointerHighlighter","TOP_LOCATION_X","TOP_LOCATION_Y","resizing","createCopyArray","makeElement","useTopPointer","highlightTemp","insertElement","updateTopPointer","extractElement","unmakeElement","initCopyArray","addItemToCopy","useCopyArr","pos","getElementPosition","StackArrayElement","customEndingElementShift","assignCopyArray","shiftElementToBackingArray","immediateHighlight","highlightForMovement","moveTopTracker","unhighlight","goTo","copy","changeTopPointerValue","moving","updateElement","allInPosition","QueueArray","DequeArray","StackLinkedList","setTempNodeBeforeHead","shiftHeadForNode","shiftHead","stepForward","markHeadForDeletion","unmakeHead","StackLinkedListNode","oldData","QueueLinkedList","DequeLinkedList","setup","mousePressed","touchMoved","mouseReleased","windowResized","controlBarRef","controlGroups","defaultControlGroups","onAnimStart","onAnimEnd","focusedElement","param","on","addDefaultControls","MAX_SPEED","SPEED_SLIDER_DEGREE","speedSlider","ControlBuilder","INITIAL_SPEED","sliderLabel","speedSliderGroup","extraGroups","VISUALIZATION_CLASS","skipBackButton","visualization","skipBack","disabled","stepBackButton","playPauseButton","stepForwardButton","skipForwardButton","skipForward","animationControls","tagName","registerControlGroup","childNodes","child","disableUI","enableUI","activeElement","class","setMainLabel","setDefaultsLabel","defaultGroup","addDefaultGroup","addControlGroup","mounted","prevProps","prevState","canvasParentRef","mobile","ontouchstart","createCanvas","background","touchStarted","touchEnded","ListVisualizer","addAtIndexButtonCallback","addToFrontButtonCallback","addToBackButtonCallback","removeFromIndexButtonCallback","removeFromFrontButtonCallback","removeFromBackButtonCallback","resetButtonCallback","elementFieldCallback","indexFieldCallback","list","addControls","valueField","indexField","addAtIndexButton","addToFrontButton","addToBackButton","removeFromIndexButton","removeFromFrontButton","removeFromBackButton","resetButton","addFrontBackGroup","removeFrontBackGroup","valueFrontBackGroup","indexGroup","resetGroup","parseInt","addToBack","addToFront","removeFromFront","removeFromBack","ArrayListVisualizer","SinglyLinkedListVisualizer","DoublyLinkedListVisualizer","CircularSinglyLinkedListVisualizer","Lists","useRouteMatch","path","url","exact","component","ListView","StackVisualizer","pushButtonCallback","popButtonCallback","stack","pushButton","popButton","interactionButtonGroup","mainControlGroup","peek","QueueVisualizer","enqueueButtonCallback","dequeueButtonCallback","queue","enqueueButton","dequeueButton","enqueue","dequeue","DequeVisualizer","addLastButtonCallback","addFirstButtonCallback","removeFirstButtonCallback","removeLastButtonCallback","deque","addLastButton","addFirstButton","removeFirstButton","removeLastButton","addButtonGroup","removeButtonGroup","interactionGroup","addLast","addFirst","removeFirst","removeLast","StackArrayVisualizer","QueueArrayVisualizer","DequeArrayVisualizer","StackLinkedListVisualizer","QueueLinkedListVisualizer","DequeLinkedListVisualizer","StacksQueuesDeques","StackQueueDequeView","DataStructures","DataStructureView","Boolean","hostname","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07ff4f51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d46fc74.svg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav-bar.scss';\r\n\r\nimport logo from 'res/images/logo.svg';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            responsive: false,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    scrollToTop() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        // console.log(\"scrolltotop\");\r\n    }\r\n\r\n    toggleResponsiveNav() {\r\n        this.setState((state) => {\r\n                return {\r\n                    responsive: !state.responsive,\r\n                };\r\n            });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.selfRef.current && !this.selfRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({responsive: false});\r\n        this.scrollToTop();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"top-nav\" className={`nav-bar ${this.state.responsive ? \"responsive\" : \"\"} nav-container`} ref={this.selfRef}>\r\n                    <Link className=\"not-a-button\" id=\"nav-logo\" to={window.location.href.substring(window.location.href.indexOf(\"/#/\")).length > 0 ? \"/\" : \"\" }><img src={logo} className=\"app-logo\" alt=\"logo\" /></Link>\r\n                    {this.props.nav_items.map( (nav_item) => {\r\n                        return (\r\n                                <NavBarItem key={`nav-${nav_item.link}`} content={nav_item} container={this}/>\r\n                            );\r\n                    })}\r\n                    <button className=\"not-a-button nav-bar-item nav-item nav-item-title\" id=\"top-nav-menu\" onClick={() => this.toggleResponsiveNav()}><i className=\"fa fa-bars\"></i></button>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            icon: this.props.content.icon,\r\n            title_text: this.props.content.title_text,\r\n            drop_down_items: this.props.content.drop_down_items,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.drop_down_items) {\r\n            this.state.showDropDown = false;\r\n        }\r\n\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    setShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: show,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: !state.showDropDown,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setShowDropDown(false);\r\n        this.props.container.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-item nav-item ${this.state.drop_down_items && this.state.showDropDown ? \"active\" : \"\"}`} ref={this.selfRef}>\r\n                    <NavBarItemTitle link={this.state.link} icon={this.state.icon} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.drop_down_items && this.state.showDropDown ?\r\n                        <NavBarDropDown items={this.state.drop_down_items} parentRoute={`/${this.state.link}`} parent={this} />\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            icon: this.props.icon,\r\n            title_text: this.props.title_text,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingNavItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingNavItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.state.containingNavItemRef.current && !this.state.containingNavItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentNavItem.setShowDropDown(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentNavItem.state.showDropDown || !this.state.parentNavItem.state.drop_down_items) {\r\n                window.location.hash = `#/${this.state.parentNavItem.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentNavItem.setShowDropDown(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentNavItem.state.drop_down_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`/${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drop_down_items: this.props.items,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-drop-down nav-container\"> {\r\n                    this.state.drop_down_items.map( (drop_down_item) => {\r\n                    return (\r\n                            <NavBarDropDownItem key={`nav-${drop_down_item.link}`} content={drop_down_item} parent={this} parentRoute={this.props.parentRoute} />\r\n                        );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            side_pane_items: this.props.content.side_pane_items,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.side_pane_items) {\r\n            this.state.showSidePane = false;\r\n        }\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    setShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: show,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: !state.showSidePane,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown() {\r\n        this.toggleShowSidePane();\r\n    }\r\n\r\n    clear() {\r\n        this.setShowSidePane(false);\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-drop-down-item nav-item ${this.state.side_pane_items && this.state.showSidePane ? \"active\": \"\"}`} ref={this.selfRef}>\r\n                    <NavBarDropDownItemTitle link={this.state.link} parentRoute={this.state.parentRoute} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.side_pane_items && this.state.showSidePane ?\r\n                        <NavBarSidePane items={this.state.side_pane_items} parentRoute={`${this.props.parentRoute}/${this.state.link}`} parent={this}></NavBarSidePane>\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarDropDownItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            parentRoute: this.props.parentRoute,\r\n            title_text: this.props.title_text,\r\n            // containingDropDownItemRef: this.props.parentRef,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingDropDownItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingDropDownItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentDropDownItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingDropDownItemRef);\r\n        // console.log(this.state.containingDropDownItemRef.current);\r\n        if (this.state.containingDropDownItemRef.current && !this.state.containingDropDownItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentDropDownItem.setShowSidePane(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentDropDownItem.state.showSidePane) {\r\n                window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentDropDownItem.toggleShowSidePane();\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentDropDownItem.state.side_pane_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`}>{this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarSidePane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            side_pane_items: this.props.items,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-pane nav-container\"> {\r\n                    this.state.side_pane_items.map( (side_pane_item) => {\r\n                        return (\r\n                                <NavBarSideItem key={`nav-${side_pane_item.link}`} content={side_pane_item} parentRoute={this.props.parentRoute} parent={this} />\r\n                            );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nclass NavBarSideItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-item nav-item\">\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-side-pane-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './app-header.scss';\r\nimport NavBar from '../nav-bar';\r\n\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n            <header className=\"app-header\">\r\n                <NavBar nav_items={[\r\n                    {\r\n                        link: \"datastructures\",\r\n                        icon: \"sitemap\",\r\n                        title_text: \"Data Structures\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"lists\",\r\n                                title_text: \"Lists\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"arraylist\",\r\n                                        title_text: \"ArrayList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"sll\",\r\n                                        title_text: \"Singly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"dll\",\r\n                                        title_text: \"Doubly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"c-sll\",\r\n                                        title_text: \"Circular Singly LinkedList\",\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"stacks-queues-deques\",\r\n                                title_text: \"Stacks/Queues/Deques\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"stack-array\",\r\n                                        title_text: \"Stack (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"stack-linkedlist\",\r\n                                        title_text: \"Stack (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-array\",\r\n                                        title_text: \"Queue (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-linkedlist\",\r\n                                        title_text: \"Queue (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-array\",\r\n                                        title_text: \"Deque (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-linkedlist\",\r\n                                        title_text: \"Deque (LinkedList)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"trees-skiplist\",\r\n                                title_text: \"Trees and SkipList\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bst\",\r\n                                        title_text: \"Binary Search Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"heap-pq\",\r\n                                        title_text: \"Heap / Priority Queue\"\r\n                                    },\r\n                                    {\r\n                                        link: \"avl\",\r\n                                        title_text: \"AVL\"\r\n                                    },\r\n                                    {\r\n                                        link: \"24-tree\",\r\n                                        title_text: \"2-4 Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"splaytree\",\r\n                                        title_text: \"SplayTree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"skiplist\",\r\n                                        title_text: \"SkipList\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"hashmaps\",\r\n                                title_text: \"HashMaps\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"hashmap-probing\",\r\n                                        title_text: \"HashMap (Probing)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"hashmap-chaining\",\r\n                                        title_text: \"HashMap (Chaining)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"algorithms\",\r\n                        icon: \"stack-overflow\",\r\n                        title_text: \"Algorithms\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"sorting\",\r\n                                title_text: \"Sorting\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bubble\",\r\n                                        title_text: \"Bubble Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"cocktail\",\r\n                                        title_text: \"Cocktail Shaker Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"insertion\",\r\n                                        title_text: \"Insertion Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"selection\",\r\n                                        title_text: \"Selection Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quicksort\",\r\n                                        title_text: \"Quick Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quickselect\",\r\n                                        title_text: \"Quick Select\"\r\n                                    },\r\n                                    {\r\n                                        link: \"merge\",\r\n                                        title_text: \"Merge Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"lsd-radix\",\r\n                                        title_text: \"LSD Radix Sort\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"string-searching\",\r\n                                title_text: \"String Searching\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"brute-force\",\r\n                                        title_text: \"Brute Force\"\r\n                                    },\r\n                                    {\r\n                                        link: \"boyer-moore\",\r\n                                        title_text: \"Boyer Moore\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kmp\",\r\n                                        title_text: \"KMP\"\r\n                                    },\r\n                                    {\r\n                                        link: \"rabin-karp\",\r\n                                        title_text: \"Rabin Karp\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"graphs\",\r\n                                title_text: \"Graph Algorithms\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"breadth\",\r\n                                        title_text: \"Breadth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"depth\",\r\n                                        title_text: \"Depth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"dijkstra\",\r\n                                        title_text: \"Dijkstra's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"prim\",\r\n                                        title_text: \"Prim's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kruskal\",\r\n                                        title_text: \"Kruskal's\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"dynamic\",\r\n                                title_text: \"Dynamic Programming\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"lcs\",\r\n                                        title_text: \"LCS\"\r\n                                    },\r\n                                    {\r\n                                        link: \"floyd-warshall\",\r\n                                        title_text: \"Floyd-Warshall\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"about\",\r\n                        icon: \"user\",\r\n                        title_text: \"About\",\r\n                    },\r\n                ]} />\r\n            </header>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './app-footer.scss';\r\n\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n            <footer className=\"app-footer\">\r\n                <div className=\"footer-message\">\r\n                    <p>Created using ReactJS by Mudit Gupta for The Georgia Institute of Technology. Updated Feb. 16, 2020.</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './home.scss';\r\n\r\nexport default function Home() {\r\n    return (\r\n            <div className=\"home\">\r\n\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './about.scss';\r\n\r\nexport default function About() {\r\n    return (\r\n            <div className=\"about\">\r\n                <h1>About CS Vis</h1>\r\n                <p>I created this tool to visualize some of the alogirthms I've been learning in my classes.\r\n                Most of these visualizations are inspired by those found at <a href='https://csvistool.com'>csvistool.com</a>.\r\n                I tried to make the UX here as convenient as possible, but I'd love to hear your design input;\r\n                I'm not a front-end person, so I'm doing my best :).</p>\r\n            <p>Check out the <a href='https://github.com/muditg317/cs-vis'>Source Code here</a>!</p>\r\n                <h2>Me!</h2>\r\n                <p>This is something I wanted to make to learn more about these datastructures and algorithms while also learning how to use the ReactJS framework.\r\n                Check out some of my other projects at <a href='https://muditgupta.appspot.com'>muditgupta.appspot.com</a></p>\r\n            </div>\r\n        );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './controlBar.scss';\r\n\r\nexport default class ControlBar extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.defaultContainer = React.createRef();\r\n        this.defaults = React.createRef();\r\n        this.mainContainer = React.createRef();\r\n        this.controlBar = React.createRef();\r\n    }\r\n\r\n    setDefaultsLabel(label) {\r\n        this.defaultsLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    setMainLabel(label) {\r\n        this.mainLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    addDefaultGroup(controlGroup) {\r\n        this.defaults.current.appendChild(controlGroup);\r\n    }\r\n\r\n    addControlGroup(controlGroup) {\r\n        this.controlBar.current.appendChild(controlGroup);\r\n    }\r\n\r\n    testSize() {\r\n        let transformed = 0;\r\n        if (this.controlBar.current.getBoundingClientRect().width\r\n                > (this.mainContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.mainContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.mainContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.mainContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        if (this.defaults.current.getBoundingClientRect().width\r\n                > (this.defaultContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.defaultContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.defaultContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.defaultContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        return transformed;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.testSize();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.testSize();\r\n    }\r\n\r\n    windowResized() {\r\n        return this.testSize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"control-bar\">\r\n                    <div className=\"control-container\" id=\"main-control\" ref={this.mainContainer}>\r\n                        <div className=\"control-wrapper\">\r\n                            {this.mainLabel && <p className=\"control-label\" id=\"main-control-label\">{this.mainLabel}</p>}\r\n                            <div className=\"controls control-group\"  ref={this.controlBar}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"control-container\" id=\"default-control\" ref={this.defaultContainer}>\r\n                        <div className=\"control-wrapper\">\r\n                            {// {this.defaultsLabel && <p className=\"control-label\" id=\"default-control-label\">{this.defaultsLabel}</p>}\r\n                            }\r\n                            <div className=\"controls default control-group\" ref={this.defaults}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","export function newEmptyControl() {\r\n    let emptyControl = document.createElement(\"input\");\r\n    applyStyle(emptyControl, \"visibility\", \"hidden\");\r\n    return emptyControl;\r\n}\r\n\r\nexport function createControl(type, value) {\r\n    let newControl = document.createElement(\"input\");\r\n    newControl.classList.add(\"visual-control\", type);\r\n\r\n    newControl.setAttribute(\"type\", type);\r\n    if (value) {\r\n        newControl.setAttribute(\"value\", value);\r\n    }\r\n\r\n    return newControl;\r\n};\r\n\r\nexport function createButton(label) {\r\n    let button = createControl(\"button\", label);\r\n\r\n    return button;\r\n};\r\n\r\nexport function createField(prompt, ...validators) {\r\n    let field = createControl(\"text\");\r\n    field.setAttribute(\"placeHolder\", prompt);\r\n\r\n    validators.forEach((validator) => {\r\n        field.addEventListener(\"input\", () => { validator(field); });\r\n    });\r\n\r\n    return field;\r\n};\r\n\r\nexport function createLabel(text, control) {\r\n    let newLabel = document.createElement(\"label\");\r\n    newLabel.classList.add(\"visual-control\",\"label\");\r\n\r\n    newLabel.setAttribute(\"for\", control.id);\r\n    newLabel.innerHTML = text;\r\n\r\n    return newLabel;\r\n}\r\n\r\nexport function validatorIntOnly() {\r\n    return (field) => {\r\n        let regex = /^(-[0-9])?[0-9]*/g;\r\n        field.value = field.value.match(regex).reduce((sum, char) => sum + char);\r\n    }\r\n};\r\n\r\nexport function validatorMaxLength(maxLength) {\r\n    return (field) => {\r\n        if (field.value.length > maxLength) {\r\n            field.value = field.value.substring(0, Math.min(field.value.length, maxLength));\r\n        }\r\n    };\r\n};\r\n\r\nexport function addSubmit(field, callback) {\r\n    if (field.type !== \"text\") {\r\n        console.log(\"cannot add callback to nontextfield\");\r\n        return;\r\n    }\r\n    if (callback === undefined) {\r\n        console.log(\"cannot set field submit to undefined callback\");\r\n        return;\r\n    }\r\n    field.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            // disableControls();\r\n            callback();\r\n        }\r\n    });\r\n};\r\n\r\nexport function createSlider(min, max, defaultValue, step) {\r\n    let slider = createControl(\"range\");\r\n\r\n    slider.setAttribute(\"min\", min);\r\n    slider.setAttribute(\"max\", max);\r\n    slider.setAttribute(\"step\", step === 0 ? \"1e-18\" : step);\r\n    slider.setAttribute(\"defaultValue\", defaultValue);\r\n    slider.value = defaultValue;\r\n\r\n    return slider;\r\n};\r\n\r\n\r\nexport function createControlGroup(id, ...controls) {\r\n    let controlGroup = document.createElement(\"div\");\r\n    controlGroup.setAttribute(\"class\", \"control-group\");\r\n    controlGroup.id = id;\r\n\r\n    controls.forEach((control) => {\r\n        controlGroup.appendChild(control);\r\n    });\r\n\r\n    return controlGroup;\r\n};\r\n\r\nexport function setTabControl(control, nextControl) {\r\n    if (control === undefined || nextControl === undefined) {\r\n        console.log(\"cannot link undefined controls\");\r\n        return;\r\n    }\r\n    enableShift();\r\n    control.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && (window.shifted !== undefined && !window.shifted)) {\r\n            event.preventDefault();\r\n            control.blur();\r\n            nextControl.focus();\r\n        }\r\n    });\r\n    nextControl.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && window.shifted) {\r\n            event.preventDefault();\r\n            nextControl.blur();\r\n            control.focus();\r\n        }\r\n    });\r\n};\r\n\r\nfunction enableShift() {\r\n    if (window.shifted === undefined) {\r\n        window.shifted = false;\r\n        window.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = true;\r\n            }\r\n        });\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = false;\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport function applyStyle(control, styleType, value) {\r\n    control.style[styleType] = value;\r\n}\r\n","export const RED = [255,0,0];\r\nexport const GREEN = [60, 181, 60];\r\nexport const BLUE = [0,0,255];\r\nexport const BLACK = [0,0,0];\r\nexport const WHITE = [255,255,255];\r\n","export function addArray(array, ...arrays) {\r\n    let newArr = [...array];\r\n    arrays.forEach(array => {\r\n        array.forEach((item, i) => {\r\n            newArr[i] += item;\r\n        });\r\n    });\r\n    return newArr;\r\n}\r\n\r\nexport function isDev() {\r\n    return !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n}\r\n","export default class AnimatedObject {\r\n    constructor() {\r\n        this.xProgress = 1;\r\n        this.yProgress = 1;\r\n        // this.translationFrames = 0;\r\n\r\n        // this.animating = false;\r\n        this.direction = 0;\r\n    }\r\n\r\n    travel(direction) {\r\n        this.xProgress = 0;\r\n        this.yProgress = 0;\r\n        this.direction = direction;\r\n    }\r\n\r\n    inPosition() {\r\n        return this.direction >= 0\r\n                ? this.xProgress >= 1 && this.yProgress >= 1\r\n                : this.xProgress <= -1 && this.yProgress <= -1;\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        if (!this.inPosition()) {\r\n            // this.animating = true;\r\n            this.xProgress += Math.sign(this.direction) * animationSpeed/200;\r\n            this.yProgress += Math.sign(this.direction) * animationSpeed/200;\r\n        } else {\r\n            // this.animating = false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","export default class AttractedDraggableObject {\r\n\r\n    static ATTRACTION = 0.3;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    constructor(x,y) {\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.frozen = false;\r\n        this.onStop = [];\r\n\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()();\r\n        }\r\n    }\r\n\r\n    pin(mouseX, mouseY) {\r\n        if (this.constructor.CAN_DRAG) {\r\n            if (!this.frozen) {\r\n                this.pinnedToMouse = true;\r\n                this.mouseOffsetX = mouseX - this.currentX;\r\n                this.mouseOffsetY = mouseY - this.currentY;\r\n            }\r\n        }\r\n    }\r\n\r\n    unpin() {\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if (this.pinnedToMouse) {\r\n            this.currentX = p5.mouseX - this.mouseOffsetX;\r\n            this.currentY = p5.mouseY - this.mouseOffsetY;\r\n        } else if (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy)) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedDraggableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx += magnitude * Math.cos(angle);\r\n                this.vy += magnitude * Math.sin(angle);\r\n\r\n                this.vx *= 0.75;\r\n                this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer'\r\nimport { Colors } from 'utils';\r\n\r\nexport default class AttractedHighlightableObject {\r\n    static ATTRACTION = 0.2;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    static HIGHTLIGHT_WIDTH = 5;\r\n    static HIGHLIGHT_CIRCLE = 0;\r\n    static HIGHLIGHT_SQUARE = 1;\r\n\r\n    constructor(x,y, options = {}) {\r\n        this.value = options.value || null;\r\n\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.frozen = false;\r\n        this.onStop = [];\r\n\r\n        this.highlighted = false;\r\n        this.highlightColor = Colors.BLACK;\r\n        this.highlightShape = AttractedHighlightableObject.HIGHLIGHT_CIRCLE;\r\n\r\n        Object.entries(options).forEach((option) => {\r\n            this[option[0]] = option[1];\r\n        });\r\n\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    goTo(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.stop();\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()(this);\r\n        }\r\n    }\r\n\r\n    highlight(color = Colors.BLUE, shape = AttractedHighlightableObject.HIGHLIGHT_CIRCLE) {\r\n        this.highlightColor = color;\r\n        this.highlightShape = shape;\r\n        this.highlighted = true;\r\n    }\r\n\r\n    unhighlight() {\r\n        this.highlighted = false;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if ((animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed()))\r\n                || (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy))) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedHighlightableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx = magnitude * Math.cos(angle);\r\n                this.vy = magnitude * Math.sin(angle);\r\n\r\n                // this.vx *= 0.75;\r\n                // this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n\r\n    drawHighlight(p5) {\r\n        p5.push();\r\n        p5.stroke(...this.highlightColor);\r\n        p5.noFill();\r\n        p5.strokeWeight(AttractedHighlightableObject.HIGHTLIGHT_WIDTH);\r\n        let diameter = 2 * (this.highlightInnerRadius || this.highlightOuterRadius) + (this.highlightInnerRadius ? 1 : -1) * AttractedHighlightableObject.HIGHTLIGHT_WIDTH;\r\n        if (this.highlightShape === AttractedHighlightableObject.HIGHLIGHT_CIRCLE) {\r\n            p5.circle(this.currentX, this.currentY, diameter);\r\n        } else if (this.highlightShape === AttractedHighlightableObject.HIGHLIGHT_SQUARE) {\r\n            p5.square(this.currentX - diameter/2, this.currentY - diameter/2, diameter);\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    drawValue(p5) {\r\n        if (this.value) {\r\n            p5.textAlign(p5.CENTER, p5.CENTER);\r\n            p5.fill(0);\r\n            p5.stroke(0);\r\n            let radius = 2 * (this.highlightInnerRadius || this.highlightOuterRadius) + (this.highlightInnerRadius ? 1 : -1) * AttractedHighlightableObject.HIGHTLIGHT_WIDTH;\r\n            p5.text(this.value.toString(), this.currentX - radius,this.currentY - radius, 2*radius, 2*radius);\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        if (this.highlighted) {\r\n            this.drawHighlight(p5);\r\n        }\r\n        this.drawValue(p5);\r\n        p5.pop();\r\n    }\r\n}\r\n","export default class Animator {\r\n    constructor() {\r\n        this.events = [];\r\n\r\n        this.objects = [];\r\n        this.connectingEdges = [];\r\n\r\n\r\n    }\r\n\r\n    on(type, callback) {\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push(callback);\r\n    }\r\n\r\n    off(type, callback) {\r\n        if (this.events[type]) {\r\n            this.events[type] = this.events[type].filter( event => {\r\n                return event !== callback;\r\n            });\r\n        }\r\n    }\r\n\r\n    emit(type) {\r\n        if (this.events[type]) {\r\n            this.events[type].forEach( event => {\r\n                event();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { Colors } from 'utils';\r\n\r\nexport default class Visualization {\r\n    constructor(animator) {\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            this.displayText = \"Animation Ready\";\r\n            this.displayTextColor = [0,0,0];\r\n        } else {\r\n            delete this.showText;\r\n            delete this.updateText;\r\n        }\r\n\r\n        this.animator = animator;\r\n\r\n        if (this.constructor.SUPPORTS_NO_LOOP) {\r\n            this.drawing = false;\r\n        } else {\r\n            delete this.beginDrawLoop;\r\n            delete this.endDrawLoop;\r\n        }\r\n\r\n        if (this.constructor.SUPPORTS_ANIMATION_CONTROL) {\r\n            this.paused = false;\r\n            this.undo = new Proxy(this, {\r\n                get: function (target, propertyName, receiver) {\r\n                    return target[\"undo_\"+propertyName];\r\n                }\r\n            });\r\n            this.redo = new Proxy(this, {\r\n                get: function (target, propertyName, receiver) {\r\n                    return target[\"redo_\"+propertyName];\r\n                }\r\n            });\r\n        } else {\r\n            delete this.playPause;\r\n            delete this.play;\r\n            delete this.pause;\r\n        }\r\n\r\n    }\r\n\r\n    reset() {\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            this.displayText = \"Animation Ready\";\r\n            this.displayTextColor = [0,0,0];\r\n        }\r\n\r\n        this.animationHistory = [];\r\n        this.runningAnimation = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n        if (this.constructor.SUPPORTS_NO_LOOP) {\r\n            this.stopDrawing();\r\n        }\r\n        if (this.constructor.SUPPORTS_ANIMATION_CONTROL) {\r\n            // this.paused = false;\r\n        }\r\n    }\r\n\r\n    playPause() {\r\n        if (this.paused) {\r\n            this.play();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    }\r\n\r\n    play() {\r\n        this.paused = false;\r\n        this.beginDrawLoop();\r\n        this.animator.disable(\"stepBack\");\r\n        this.animator.disable(\"stepForward\");\r\n    }\r\n\r\n    pause() {\r\n        this.paused = true;\r\n        this.endDrawLoop();\r\n        if (this.canStepBack()) {\r\n            this.animator.enable(\"stepBack\");\r\n        }\r\n        if (this.canStepForward()) {\r\n            this.animator.enable(\"stepForward\");\r\n        }\r\n    }\r\n\r\n    getLastTextAnimation() {\r\n        if (this.runningAnimation) {\r\n            for (let i = this.runningAnimation.length-1; i >= 0; i--) {\r\n                if (this.runningAnimation[i].method === this.showText || this.runningAnimation[i].explanation) {\r\n                    return this.runningAnimation[i];\r\n                }\r\n            }\r\n        }\r\n        for (let i = this.animationHistory.length - 1; i >= 0; i--) {\r\n            for (let j = this.animationHistory[i].length - 1; j >= 0; j++) {\r\n                if (this.animationHistory[i][j].method === this.showText || this.animationHistory[i][j].explanation) {\r\n                    return this.animationHistory[i][j];\r\n                }\r\n            }\r\n        }\r\n        return {method:this.showText,params:[\"Animation Ready\"]};\r\n    }\r\n    undoText() {\r\n        let textAnimation = this.getLastTextAnimation();\r\n        if (textAnimation) {\r\n            if (textAnimation.method === this.showText) {\r\n                this.showText(...textAnimation.params);\r\n            } else {\r\n                this.showText(textAnimation.explanation);\r\n            }\r\n        }\r\n    }\r\n\r\n    undoAnimation(previousAnimation) {\r\n        let scope = previousAnimation.scope || this;\r\n        let undo = scope.undo;\r\n        let undoMethod = undo[previousAnimation.method.name];\r\n        let params = previousAnimation.params || [];\r\n        // console.log(require('util').inspect(previousAnimation, { depth: null }));\r\n        if (undoMethod) {\r\n            // console.log(\"undo\",undoMethod);\r\n            if (previousAnimation.undoData) {\r\n                params.push(...previousAnimation.undoData);\r\n            }\r\n            this.beginDrawLoop();\r\n            undoMethod.apply(scope, params);\r\n            this.undoText();\r\n            if (!previousAnimation.customUndoEnd) {\r\n                this.stopDrawing();\r\n            }\r\n        } else {\r\n            // console.log(\"failed\",previousAnimation);\r\n        }\r\n        this.animationQueue.unshift(previousAnimation);\r\n    }\r\n\r\n    unAnimate() {\r\n        let previousAnimation = this.runningAnimation.pop();\r\n        while (!previousAnimation.isAnimationStep) {\r\n            this.undoAnimation(previousAnimation);\r\n            previousAnimation = this.runningAnimation.pop();\r\n            if (!previousAnimation) {\r\n                return;\r\n            }\r\n        }\r\n        this.undoAnimation(previousAnimation);\r\n    }\r\n\r\n    canStepBack() {\r\n        return this.animationHistory.length > 0 || this.runningAnimation.length > 0;\r\n    }\r\n    stepBack() {\r\n        if (this.paused) {\r\n            if (this.runningAnimation && this.runningAnimation.length > 0) {\r\n                this.unAnimate();\r\n                this.animator.enable(\"stepForward\");\r\n                if (this.runningAnimation.length === 0) {\r\n                    this.animationQueue.unshift({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],noAnim:true});\r\n                    if (this.animationHistory.length === 0) {\r\n                        this.animator.disable(\"stepBack\");\r\n                    }\r\n                }\r\n            } else if (this.animationHistory.length > 0) {\r\n                let previousAnimationSequence = this.animationHistory.pop();\r\n                this.animator.emit(\"anim-start\");\r\n                this.animationQueue.unshift({method:this.stopDrawing,noAnim:true});\r\n                this.animationQueue.unshift({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],noAnim:true});\r\n                this.runningAnimation = previousAnimationSequence;\r\n                this.stepBack();\r\n            }\r\n        }\r\n    }\r\n\r\n    redoAnimation(nextAnimation) {\r\n        let scope = nextAnimation.scope || this;\r\n        let method = nextAnimation.method;\r\n        if (nextAnimation.customRedoEnd) {\r\n            let redo = scope.redo;\r\n            method = redo[method.name];\r\n        }\r\n        let params = nextAnimation.params || [];\r\n        // console.log(require('util').inspect(nextAnimation, { depth: null }));\r\n        // console.log(\"redo\",method);\r\n        if (nextAnimation.redoData) {\r\n            params.push(...nextAnimation.redoData);\r\n        }\r\n        this.beginDrawLoop();\r\n        let retVal = method.apply(scope, params);\r\n        nextAnimation.returnValue = retVal;\r\n        if (this.isAnimStart(nextAnimation)) {\r\n            this.runningAnimation = [];\r\n        } else if (this.isAnimEnd(nextAnimation)) {\r\n            this.animationHistory.push(this.runningAnimation);\r\n            this.runningAnimation = null;\r\n        } else if (this.isEndDrawLoopTrigger(nextAnimation)) {\r\n\r\n        } else {\r\n            if (this.runningAnimation) {\r\n                this.runningAnimation.push(nextAnimation);\r\n            } else {\r\n                if (!this.constructor.SUPPORTS_ANIMATION_CONTROL) {\r\n                    this.animationHistory.push(nextAnimation);\r\n                }\r\n            }\r\n        }\r\n        if (nextAnimation.explanation) {\r\n            if (nextAnimation.explanationUsesReturn) {\r\n                nextAnimation.explanation = nextAnimation.explanation.replace(\"|RETURN|\", retVal);\r\n            }\r\n            this.showText(nextAnimation.explanation);\r\n        }\r\n        if (!nextAnimation.customRedoEnd) {\r\n            this.stopDrawing();\r\n        }\r\n    }\r\n\r\n    reAnimate() {\r\n        let nextAnimation = this.animationQueue.shift();\r\n        while (!nextAnimation.isAnimationStep && !this.isEndDrawLoopTrigger(nextAnimation)) {\r\n            this.redoAnimation(nextAnimation);\r\n            nextAnimation = this.animationQueue.shift();\r\n            if (!nextAnimation) {\r\n                return;\r\n            }\r\n        }\r\n        this.redoAnimation(nextAnimation);\r\n        if (!nextAnimation.customRedoEnd && !this.isEndDrawLoopTrigger(nextAnimation)) {\r\n            if (!this.animationQueue[0].isAnimationStep) {\r\n                nextAnimation = this.animationQueue.shift();\r\n                while (!nextAnimation.isAnimationStep && !this.isEndDrawLoopTrigger(nextAnimation)) {\r\n                    this.redoAnimation(nextAnimation);\r\n                    nextAnimation = this.animationQueue.shift();\r\n                    if (!nextAnimation) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    canStepForward() {\r\n        return this.animationQueue.length > 0;\r\n    }\r\n    stepForward() {\r\n        if (this.paused) {\r\n            if (this.animationQueue.length > 0) {\r\n                this.reAnimate();\r\n                this.animator.enable(\"stepBack\");\r\n                if (this.animationQueue.length === 0) {\r\n                    this.animator.disable(\"stepForward\");\r\n                } else {\r\n                    this.animator.enable(\"stepForward\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    updateText(text, color = Colors.BLACK) {\r\n        this.animationQueue.push({method:this.showText,params:[text,color],});\r\n    }\r\n\r\n    showText(text, color = Colors.BLACK) {\r\n        this.displayText = text;\r\n        this.displayTextColor = color;\r\n    }\r\n    undo_showText(text, color) {\r\n        return this.showText(text, color);\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],noAnim:true});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],noAnim:true});\r\n    }\r\n\r\n    doneAnimating(time = 250) {\r\n        if (time === 0) {\r\n            this.animating = false;\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this.animating = false;\r\n        }, time);\r\n    }\r\n\r\n    update(callForward, animationSpeed, p5) {\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n        callForward();\r\n        if (!this.constructor.SUPPORTS_ANIMATION_CONTROL || !this.paused) {\r\n            this.popAnimation(animationSpeed);\r\n        }\r\n    }\r\n\r\n    isAnimStart(animation) {\r\n        return animation.method === this.animator.emit && animation.params[0] === \"anim-start\";\r\n    }\r\n\r\n    isAnimEnd(animation) {\r\n        return animation.method === this.animator.emit && animation.params[0] === \"anim-end\";\r\n    }\r\n\r\n    isEndDrawLoopTrigger(animation) {\r\n        return animation.method === this.stopDrawing;\r\n    }\r\n\r\n    noAnimation(animation) {\r\n        return animation.noAnim\r\n                || (animation.method === this.animator.emit && (animation.params[0] === \"anim-start\" || animation.params[0] === \"anim-end\"))\r\n                || (animation.method === this.showText);\r\n    }\r\n\r\n    popAnimation(animationSpeed) {\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                // console.log(animation.method);\r\n                let retVal = animation.method.apply(animation.scope || this, animation.params);\r\n                animation.returnValue = retVal;\r\n                if (this.isAnimStart(animation)) {\r\n                    this.runningAnimation = [];\r\n                } else if (this.isAnimEnd(animation)) {\r\n                    this.animationHistory.push(this.runningAnimation);\r\n                    this.runningAnimation = null;\r\n                } else if (this.isEndDrawLoopTrigger(animation)) {\r\n                    if (this.animationQueue.length > 0) {\r\n                        this.beginDrawLoop();\r\n                    }\r\n                } else {\r\n                    if (this.runningAnimation) {\r\n                        this.runningAnimation.push(animation);\r\n                    } else {\r\n                        if (!this.constructor.SUPPORTS_ANIMATION_CONTROL) {\r\n                            this.animationHistory.push(animation);\r\n                        }\r\n                    }\r\n                }\r\n                if (animation.explanation) {\r\n                    if (animation.explanationUsesReturn) {\r\n                        animation.explanation = animation.explanation.replace(\"|RETURN|\", retVal);\r\n                    }\r\n                    this.showText(animation.explanation);\r\n                }\r\n                if (this.constructor.SUPPORTS_CUSTOM_END) {\r\n                    if (this.noAnimation(animation)) {\r\n                        this.animating = false;\r\n                    } else if (!animation.customEnd) {\r\n                        if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                            this.animating = false;\r\n                        } else {\r\n                            this.doneAnimating(this.constructor.MAX_ANIM_TIME / animationSpeed);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    beginDrawLoop() {\r\n        this.animator.loop();\r\n        this.drawing = true;\r\n    }\r\n\r\n    endDrawLoop() {\r\n        if (this.drawing) {\r\n            this.animationQueue.push({method:this.stopDrawing,noAnim:true});\r\n        }\r\n    }\r\n\r\n    stopDrawing() {\r\n        this.animator.noLoop();\r\n        this.drawing = false;\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            p5.fill(...this.displayTextColor);\r\n            p5.textSize(15);\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            p5.text(this.displayText, 2.5,2.5, this.width,60);\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        return true;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        return true;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars, maxY) {\r\n        height -= numScrollbars * 16;\r\n        let width = p5.windowWidth;\r\n        if (maxY > (height - (2*this.y))) {\r\n            height = (maxY + (3*this.y))\r\n            if (!document.querySelector(\".canvas-container\").classList.contains(\"mobile\")) {\r\n                width -= 16;\r\n            }\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AnimatedObject from 'animation/AnimatedObject';\r\n\r\nexport default class ArrayList extends Visualization {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.backingArray = {};\r\n        this.backingArray.length = ArrayList.INITIAL_CAPACITY;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            this.backingArray[i] = new ArrayElement(\"\");\r\n        }\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            animation.push(...this.doubleSize());\r\n        }\r\n        if (index < this.size) {\r\n            animation.push(...this.shiftForIndex(index));\r\n        }\r\n        animation.push({method:this.setIndex,params:[index,data,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        let element = this.backingArray[index];\r\n        let data = element.data;\r\n        element.data = \"\";\r\n        if (index < this.size - 1) {\r\n            animation.push(...this.shiftIntoIndex(index));\r\n        }\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    setIndex(index,data) {\r\n        this.backingArray[index].data = data;\r\n    }\r\n\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    doubleSize() {\r\n        let animation = []\r\n        let prevCapacity = this.backingArray.length;\r\n        for (let i = prevCapacity; i < this.backingArray.length * 2; i++) {\r\n            animation.push({method:this.resetElement,params:[i,],});\r\n        }\r\n        animation.push({method:this.incrLength,params:[],});\r\n        return animation;\r\n    }\r\n\r\n    incrLength() {\r\n        this.backingArray.length = 2 * this.backingArray.length;\r\n    }\r\n\r\n    shiftForIndex(index) {\r\n        let animation = []\r\n        for (let i = this.size - 1; i >= index; i--) {\r\n            animation.push(...this.shiftElement(i,1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[index,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftIntoIndex(index) {\r\n        let animation = [];\r\n        for (let i = index + 1; i < this.size; i++) {\r\n            animation.push(...this.shiftElement(i,-1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[this.size-1,],});\r\n    }\r\n\r\n    shiftElement(index, direction) {\r\n        let animation = [];\r\n        animation.push({method:this.shiftElementMovement,params:[index,direction,],});\r\n        animation.push({method:this.shiftElementIndex,params:[index,direction,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftElementMovement(index, direction) {\r\n        this.backingArray[index].shift(direction);\r\n        // console.log(\"move\",index,JSON.stringify(this.backingArray));\r\n    }\r\n\r\n    shiftElementIndex(index, direction) {\r\n        // console.log(\"index\",index,JSON.stringify(this.backingArray));\r\n        // console.log(index+direction, this.backingArray[index].data);\r\n        this.backingArray[index+direction].data = this.backingArray[index].data;\r\n        this.backingArray[index].data = \"\";\r\n    }\r\n\r\n\r\n    resetElement(index) {\r\n        if (this.backingArray[index]) {\r\n            this.backingArray[index].data = \"\";\r\n        } else {\r\n            this.backingArray[index] = new ArrayElement(\"\", ArrayList.ELEMENT_SIZE);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                if (this.backingArray[i]) {\r\n                    this.backingArray[i].update(animationSpeed);\r\n                }\r\n            }\r\n            let foundAnimElement = false;\r\n            for (let i = 0; i < this.size; i++) {\r\n                if (!this.backingArray[i].inPosition()) {\r\n                    foundAnimElement = true;\r\n                    break;\r\n                }\r\n            }\r\n            this.animating = foundAnimElement;\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        let maxPerRow = Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE);\r\n        let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        p5.push();\r\n        p5.translate(this.x,this.y);\r\n\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            p5.noStroke();\r\n            p5.fill(200);\r\n            p5.rect(ArrayList.ELEMENT_SIZE/10,ArrayList.ELEMENT_SIZE/10 + (2 * ArrayList.ELEMENT_SIZE * row),ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE/20);\r\n\r\n            p5.stroke(0);\r\n            p5.fill(255);\r\n            p5.rect(0,(2 * ArrayList.ELEMENT_SIZE * row), ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE);\r\n        }\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(ArrayList.ELEMENT_SIZE/3 - 2);\r\n\r\n        let i = 0;\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            let x = 0;\r\n            let y = 2 * row * ArrayList.ELEMENT_SIZE;\r\n            for (let block = 0; block < numElements; block++) {\r\n                p5.stroke(0);\r\n                p5.line(x,y, x, y+ArrayList.ELEMENT_SIZE);\r\n\r\n                p5.noStroke();\r\n                p5.fill(0,0,255);\r\n                p5.text(i.toString(), x,y+ArrayList.ELEMENT_SIZE, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n\r\n                let element = this.backingArray[i++];\r\n                let nextX = block < (numElements - 1) ? x + ArrayList.ELEMENT_SIZE : 0;\r\n                let nextY = block < (numElements - 1) ? y : (y + (ArrayList.ELEMENT_SIZE*2));\r\n                if (element.data) {\r\n                    element.draw(p5, x,y,nextX,nextY);\r\n                }\r\n                x = nextX;\r\n                y = nextY;\r\n                if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - ArrayList.ELEMENT_SIZE) {\r\n                    // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (Math.ceil(this.backingArray.length / (Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE))))*2*ArrayList.ELEMENT_SIZE);\r\n    }\r\n}\r\n\r\n\r\nclass ArrayElement extends AnimatedObject {\r\n    constructor(data) {\r\n        super();\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    shift(direction) {\r\n        super.travel(direction);\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        super.update(animationSpeed);\r\n    }\r\n\r\n\r\n    draw(p5, x,y, toX,toY) {\r\n        p5.push();\r\n        p5.fill(0);\r\n        p5.stroke(50);\r\n        if (!this.inPosition()) {\r\n            let posX = (toX-x)*this.xProgress + x;\r\n            let posY = (toY-y)*this.yProgress + y;\r\n            p5.text(this.data.toString(), posX,posY, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n        } else {\r\n            p5.text(this.data.toString(), x,y, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE)\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class SinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = SinglyLinkedList.ITEM_WIDTH + SinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node = null;\r\n        let nextNode = this.head;\r\n        for (let i = 0; i < index; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n            node = nextNode;\r\n            nextNode = nextNode.next;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[node,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else {\r\n            let node = this.head;\r\n            animation.push({method:this.moveHighlight,params:[null,node,],});\r\n            for (let i = 0; i < index - 1; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                node = node.next;\r\n            }\r\n            prev = node;\r\n            toDelete = prev.next;\r\n            next = toDelete.next;\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new SinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE));\r\n        let x = SinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * SinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * SinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + SinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass SinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + SinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + SinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, SinglyLinkedList.ITEM_WIDTH, SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, SinglyLinkedList.ELEMENT_WIDTH,SinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ITEM_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DoublyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DoublyLinkedList.ELEMENT_WIDTH + 2 * DoublyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_PADDED_WIDTH = DoublyLinkedList.ITEM_WIDTH + DoublyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node;\r\n        let nextNode;\r\n        let highlighted;\r\n        if (index < this.size / 2) {\r\n            node = null;\r\n            nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            highlighted = node;\r\n        } else {\r\n            node = this.tail;\r\n            nextNode = null;\r\n            for (let i = this.size - 1; i > index-1; i--) {\r\n                animation.push({method:this.moveHighlight,params:[nextNode,node,],});\r\n                nextNode = node;\r\n                node = node.prev;\r\n            }\r\n            highlighted = nextNode;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[highlighted,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else if (index === this.size - 1) {\r\n            next = null;\r\n            toDelete = this.tail;\r\n            prev = toDelete.prev;\r\n        } else {\r\n            if (index < this.size / 2) {\r\n                let node = this.head;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = 0; i < index; i++) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                    node = node.next;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            } else {\r\n                let node = this.tail;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = this.size - 1; i > index; i--) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.prev,],});\r\n                    node = node.prev;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            }\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[toDelete,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNodePrev,params:[prev,],});\r\n        animation.push({method:this.skipTempNodeNext,params:[next,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new DoublyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n        if (next) {\r\n            next.prev = this.tempNode;\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        }\r\n        this.tempNode.prev = prev;\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        if (index === this.size) {\r\n            this.tail = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n    }\r\n\r\n    skipTempNodeNext(next) {\r\n        if (next) {\r\n            next.prev = this.tempNode.prev;\r\n        } else {\r\n            this.tail = this.tail.prev;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH));\r\n        let x = DoublyLinkedList.ELEMENT_PADDED_WIDTH * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DoublyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DoublyLinkedList.ELEMENT_PADDED_WIDTH;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + DoublyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass DoublyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n        this.prev = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DoublyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DoublyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DoublyLinkedList.ITEM_WIDTH, DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX + DoublyLinkedList.POINTER_WIDTH,this.currentY, DoublyLinkedList.ELEMENT_WIDTH,DoublyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.prev) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, this.prev.currentX + DoublyLinkedList.ITEM_WIDTH, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3)\r\n            p5.rect(this.prev.currentX + DoublyLinkedList.ITEM_WIDTH - 3, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, this.next.currentX, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3 - 3, 6,6);\r\n        } else {\r\n            p5.stroke(...this.color);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.ITEM_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class CircularSinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = CircularSinglyLinkedList.ITEM_WIDTH + CircularSinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            if (this.size > 1) {\r\n                index = 1;\r\n            }\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        if (index === 0) {\r\n            animation.push({method:this.reset,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction = 0) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE));\r\n        let x = CircularSinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * CircularSinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * CircularSinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.pinnedNode.markBroken();\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            if (this.pinnedNode.index === 0 && this.size > 1) {\r\n                this.animationQueue.push({method:this.pinnedNode.unfreeze,scope:this.pinnedNode,params:[],});\r\n                this.animationQueue.push({method:this.shiftNode,params:[this.pinnedNode,],});\r\n            }\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    touchMoved(p5) {\r\n        return this.pinnedNode === null;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + CircularSinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.handBroken = false;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, CircularSinglyLinkedList.ITEM_WIDTH, CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, CircularSinglyLinkedList.ELEMENT_WIDTH,CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ITEM_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport { AttractedHighlightableObject } from 'animation';\r\nimport { Colors } from 'utils';\r\n\r\nexport default class StackArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_NO_LOOP = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n    static SUPPORTS_TEXT = true;\r\n\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static TOP_LOCATION_X = 125;\r\n    static TOP_LOCATION_Y = 45;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n        this.made = true;\r\n    }\r\n\r\n    reset() {\r\n        if (this.made) {\r\n            this.beginDrawLoop();\r\n        }\r\n        super.reset();\r\n        this.backingArray = new Array(StackArray.INITIAL_CAPACITY);\r\n        this.size = 0;\r\n        this.copyArray = null;\r\n        this.tempElement = null;\r\n        this.topPointerValue = 0;\r\n        this.topPointerHighlighter = new AttractedHighlightableObject(StackArray.TOP_LOCATION_X, StackArray.TOP_LOCATION_Y, {\r\n            highlightOuterRadius: 15//StackArray.ELEMENT_SIZE/2,\r\n        });\r\n\r\n        this.resizing = false;\r\n        if (this.made) {\r\n            this.updateText(\"Animation Ready\");\r\n            this.endDrawLoop();\r\n        }\r\n    }\r\n\r\n    push(data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (data === null) {\r\n            this.updateText(\"Cannot add null to Stack.\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            this.updateText(`Stack full, resizing to length ${this.backingArray.length*2}`);\r\n            animation.push(...this.createCopyArray());\r\n        }\r\n        animation.push({method:this.makeElement,params:[this.size,data],explanation:`Create value: ${data}`,});\r\n        animation.push(...this.useTopPointer());\r\n        animation.push({method:this.highlightTemp,params:[],noAnim:true});\r\n        animation.push({method:this.insertElement,params:[this.size],customEnd:true,explanation:`Added ${data} to backingArray`});\r\n        animation.push({method:this.sizeIncr,params:[],noAnim:true});\r\n        animation.push(...this.updateTopPointer());\r\n        this.animationQueue.push({method:this.showText,params:[`Successfully pushed ${data} to stack.`,Colors.GREEN,],});\r\n        this.addAnimation(animation);\r\n        this.endDrawLoop();\r\n        return true;\r\n    }\r\n\r\n    pop() {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (this.size === 0) {\r\n            this.updateText(\"Cannot pop empty Stack\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data = this.backingArray[this.size - 1].value;\r\n        animation.push({method:this.sizeDecr,params:[],noAnim:true});\r\n        animation.push(...this.updateTopPointer());\r\n        animation.push(...this.useTopPointer());\r\n        animation.push({method:this.extractElement,params:[],explanation:`Pop value: ${data} from stack`,customEnd:true});\r\n        animation.push({method:this.unmakeElement,params:[],noAnim:true});\r\n        // animation.push({method:this.highlightTemp,params:[],noAnim:true});\r\n        // animation.push({method:this.insertElement,params:[this.size],customEnd:true,explanation:`Added ${data} to backingArray`});\r\n        // animation.push({method:this.makeElement,params:[this.size,data],explanation:`Create value: ${data}`});\r\n\r\n        // if (index === 0) {\r\n        //     data = this.head.data;\r\n        //     animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n        //     animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n        //     index = 1;\r\n        // }\r\n        // let prev;\r\n        // let toDelete;\r\n        // let next;\r\n        // let node = this.head;\r\n        // animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        // for (let i = 0; i < index - 1; i++) {\r\n        //     animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n        //     node = node.next;\r\n        // }\r\n        // prev = node;\r\n        // toDelete = prev.next;\r\n        // next = toDelete.next;\r\n        // if (!data) {\r\n        //     data = toDelete.data;\r\n        // }\r\n        // animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        // animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        // if (index < this.size - 1) {\r\n        //     animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        // }\r\n        // animation.push({method:this.skipTempNode,params:[prev,],});\r\n        // animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.updateText(`Successfully popped ${data} from stack.`, Colors.GREEN);\r\n        this.endDrawLoop();\r\n        // this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    createCopyArray() {\r\n        let animation = [];\r\n        animation.push({method:this.initCopyArray,params:[],noAnim:true});\r\n        for (let i = 0; i < this.size; i++) {\r\n            animation.push(...this.addItemToCopy(i));\r\n        }\r\n        animation.push(...this.useCopyArr());\r\n        return animation;\r\n    }\r\n\r\n    initCopyArray() {\r\n        this.copyArray = new Array(this.backingArray.length * 2);\r\n        for (let i = 0; i < this.size; i++) {\r\n            let pos = this.getElementPosition(i);\r\n            this.copyArray[i] = new StackArrayElement({data: this.backingArray[i].value, index: i, x:pos[0],y:pos[1],},);\r\n        }\r\n    }\r\n\r\n    addItemToCopy(index) {\r\n        let animation = [];\r\n        animation.push({method:this.customEndingElementShift,params:[index,...this.getElementPosition(index,true),true],customEnd:true});\r\n        return animation;\r\n    }\r\n\r\n    useCopyArr() {\r\n        let animation = [];\r\n        animation.push({method:this.assignCopyArray,params:[],noAnim:true});\r\n        for (let i = 0; i < this.size; i++) {\r\n            animation.push({method:this.shiftElementToBackingArray,params:[i,],noAnim:true});\r\n        }\r\n        return animation;\r\n    }\r\n\r\n    assignCopyArray() {\r\n        this.backingArray = this.copyArray;\r\n        this.copyArray = null;\r\n    }\r\n\r\n    shiftElementToBackingArray(index) {\r\n        let element = this.backingArray[index];\r\n        element.shift(...this.getElementPosition(element.index));\r\n    }\r\n\r\n    makeElement(index, data, immediateHighlight = false) {\r\n        this.tempElement = new StackArrayElement({data: data, index: index, x:45,y:45,},);\r\n        if (immediateHighlight) {\r\n            this.tempElement.highlightForMovement();\r\n        }\r\n    }\r\n\r\n    useTopPointer() {\r\n        let animation = [];\r\n        animation.push({method:this.topPointerHighlighter.highlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        animation.push({method:this.moveTopTracker,params:[],customEnd:true,explanation:`Top points to index |RETURN|`,explanationUsesReturn:true});\r\n        animation.push({method:this.topPointerHighlighter.unhighlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        animation.push({method:this.topPointerHighlighter.goTo,scope:this.topPointerHighlighter,params:[StackArray.TOP_LOCATION_X,StackArray.TOP_LOCATION_Y,],noAnim:true});\r\n        return animation;\r\n    }\r\n\r\n    moveTopTracker() {\r\n        let pos = this.getElementPosition(this.topPointerValue);\r\n        this.topPointerHighlighter.shift(pos[0], pos[1] + StackArray.ELEMENT_SIZE);\r\n        this.topPointerHighlighter.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n        return this.topPointerValue;\r\n    }\r\n\r\n    highlightTemp(color = Colors.BLUE) {\r\n        this.tempElement.highlight(color);\r\n    }\r\n\r\n    insertElement(index) {\r\n        this.backingArray[index] = this.tempElement;\r\n        this.tempElement.shift(...this.getElementPosition(index));\r\n        this.tempElement.addOnStop((element) => {\r\n            element.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n        this.tempElement = null;\r\n    }\r\n\r\n    extractElement() {\r\n        this.tempElement = this.backingArray[this.topPointerValue];\r\n        this.backingArray[this.topPointerValue] = null;\r\n        this.tempElement.highlightForMovement();\r\n        this.tempElement.shift(45,45);\r\n        this.tempElement.addOnStop(() => {\r\n            this.tempElement.unhighlight();\r\n            this.doneAnimating();\r\n        });\r\n    }\r\n\r\n    unmakeElement(index) {\r\n        this.tempElement = null;\r\n    }\r\n\r\n    shiftElement(element, direction = 0) {\r\n        element.shift(...this.getElementPosition(element.index + direction), direction);\r\n    }\r\n\r\n    customEndingElementShift(index, x, y, copy = false) {\r\n        let element = (copy ? this.copyArray : this.backingArray)[index];\r\n        element.highlightForMovement();\r\n        element.shift(x,y);\r\n        element.addOnStop(() => {\r\n            element.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    updateTopPointer() {\r\n        let animation = [];\r\n        animation.push({method:this.topPointerHighlighter.highlight,scope:this.topPointerHighlighter,params:[Colors.RED, AttractedHighlightableObject.HIGHLIGHT_SQUARE]});\r\n        animation.push({method:this.changeTopPointerValue,params:[],explanation:`Update top pointer to |RETURN|`,explanationUsesReturn:true});\r\n        animation.push({method:this.topPointerHighlighter.unhighlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        return animation;\r\n    }\r\n\r\n    changeTopPointerValue() {\r\n        this.topPointerValue = this.size;\r\n        return this.size;\r\n    }\r\n\r\n    getElementPosition(index, copy = false) {\r\n        let maxPerRow = Math.floor(this.width / StackArray.ELEMENT_SIZE);\r\n        let x = StackArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * StackArray.ELEMENT_SIZE;\r\n        x = (index % maxPerRow) * StackArray.ELEMENT_SIZE;\r\n        return [x + StackArray.ELEMENT_SIZE/2 + this.x,y + StackArray.ELEMENT_SIZE/2 + this.y + (copy ? (Math.ceil(this.backingArray.length / maxPerRow)*StackArray.ELEMENT_SIZE*2) : 0)];\r\n    }\r\n\r\n    allInPosition() {\r\n        let moving = false;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i] && this.backingArray[i].displacement() > 0) {\r\n                moving = true;\r\n            }\r\n        }\r\n        if (this.copyArray) {\r\n            for (let i = 0; i < this.copyArray.length; i++) {\r\n                if (this.copyArray[i] && this.copyArray[i].displacement() > 0) {\r\n                    moving = true;\r\n                }\r\n            }\r\n        }\r\n        return !moving;\r\n    }\r\n\r\n    updateElement(element, animationSpeed, p5) {\r\n        if (element) {\r\n            element.update(animationSpeed, p5);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                this.updateElement(this.backingArray[i], animationSpeed, p5);\r\n            }\r\n            if (this.copyArray) {\r\n                for (let i = 0; i < this.copyArray.length; i++) {\r\n                    this.updateElement(this.copyArray[i], animationSpeed, p5);\r\n                }\r\n            }\r\n            if (this.tempElement) {\r\n                this.updateElement(this.tempElement, animationSpeed, p5);\r\n            }\r\n            this.topPointerHighlighter.update(animationSpeed, p5);\r\n            if (this.resizing && this.allInPosition()) {\r\n                if (!this.animating && this.animationQueue.length === 0) {\r\n                    this.animator.noLoop();\r\n                }\r\n                this.resizing = false;\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        super.draw(p5);\r\n        // console.log(\"draw\");\r\n        p5.push();\r\n        // let maxPerRow = Math.max(1, Math.floor((p5.width - 2 * this.x) / StackArray.ELEMENT_SIZE));\r\n        // let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        // p5.translate(this.x,this.y+50);\r\n        //\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_SIZE/3 - 2);\r\n        //\r\n        // for (let row = 0; row < rows; row++) {\r\n        //     let numElements = row !== rows-1 ? maxPerRow\r\n        //             : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n        //     p5.noStroke();\r\n        //     p5.fill(200);\r\n        //     p5.rect(StackArray.ELEMENT_SIZE/10,StackArray.ELEMENT_SIZE/10 + (2 * StackArray.ELEMENT_SIZE * row),StackArray.ELEMENT_SIZE*numElements,StackArray.ELEMENT_SIZE,StackArray.ELEMENT_SIZE/20);\r\n        //\r\n        //     p5.stroke(0);\r\n        //     p5.fill(255);\r\n        //     p5.rect(0,(2 * StackArray.ELEMENT_SIZE * row), StackArray.ELEMENT_SIZE*numElements,StackArray.ELEMENT_SIZE);\r\n        // }\r\n        //\r\n        // let i = 0;\r\n        // for (let row = 0; row < rows; row++) {\r\n        //     let numElements = row !== rows-1 ? maxPerRow\r\n        //             : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n        //     let x = 0;\r\n        //     let y = 2 * row * StackArray.ELEMENT_SIZE;\r\n        //     for (let block = 0; block < numElements; block++) {\r\n        //         p5.stroke(0);\r\n        //         p5.line(x,y, x, y+StackArray.ELEMENT_SIZE);\r\n        //\r\n        //         p5.noStroke();\r\n        //         p5.fill(0,0,255);\r\n        //         p5.text(i.toString(), x,y+StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE,StackArray.ELEMENT_SIZE);\r\n        //         //\r\n        //         // let element = this.backingArray[i++];\r\n        //         i++;\r\n        //         let nextX = block < (numElements - 1) ? x + StackArray.ELEMENT_SIZE : 0;\r\n        //         let nextY = block < (numElements - 1) ? y : (y + (StackArray.ELEMENT_SIZE*2));\r\n        //         // if (element.data) {\r\n        //         //     element.draw(p5, x,y,nextX,nextY);\r\n        //         // }\r\n        //         x = nextX;\r\n        //         y = nextY;\r\n        //         // if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - StackArray.ELEMENT_SIZE) {\r\n        //         //     // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n        //         // }\r\n        //     }\r\n        // }\r\n        //\r\n        // p5.translate(-this.x, -this.y - 50);\r\n\r\n        p5.fill(0);\r\n        p5.text(\"Top: \", StackArray.TOP_LOCATION_X - 50, StackArray.TOP_LOCATION_Y, StackArray.ELEMENT_SIZE);\r\n\r\n        p5.text(this.topPointerValue.toString(), StackArray.TOP_LOCATION_X-25, StackArray.TOP_LOCATION_Y, StackArray.ELEMENT_SIZE);\r\n\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].draw(p5);\r\n            }\r\n            let pos = this.getElementPosition(i);\r\n            p5.noFill();\r\n            p5.stroke(0);\r\n            p5.square(pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE);\r\n            p5.fill(...Colors.BLUE);\r\n            p5.stroke(...Colors.BLUE);\r\n            p5.text(i.toString(), pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] + StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n        }\r\n\r\n        if (this.copyArray) {\r\n            for (let i = 0; i < this.copyArray.length; i++) {\r\n                if (this.copyArray[i]) {\r\n                    this.copyArray[i].draw(p5);\r\n                }\r\n                let pos = this.getElementPosition(i, true);\r\n                p5.noFill();\r\n                p5.stroke(0);\r\n                p5.square(pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE);\r\n                p5.fill(...Colors.BLUE);\r\n                p5.stroke(...Colors.BLUE);\r\n                p5.text(i.toString(), pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] + StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n            }\r\n        }\r\n        if (this.tempElement) {\r\n            this.tempElement.draw(p5);\r\n        }\r\n        this.topPointerHighlighter.draw(p5);\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (this.copyArray ? this.getElementPosition(this.copyArray.length-1, true)[1] : this.getElementPosition(this.backingArray.length-1)[1]) + StackArray.ELEMENT_SIZE);\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].shift(...this.getElementPosition(i));\r\n            }\r\n        }\r\n        this.resizing = true;\r\n        this.animator.loop();\r\n    }\r\n}\r\n\r\n\r\nclass StackArrayElement extends AttractedHighlightableObject {\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        // this.highlightInnerRadius = StackArray.ELEMENT_SIZE/2 - 5;\r\n        this.highlightOuterRadius = StackArray.ELEMENT_SIZE/2;\r\n\r\n        this.value = data;\r\n        this.index = index;\r\n\r\n        this.toDelete = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    highlightForMovement() {\r\n        super.highlight(Colors.BLUE);\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        super.highlight(Colors.RED);\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(animationSpeed, p5);\r\n    }\r\n\r\n    drawValue(p5) {\r\n        p5.push();\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.stroke(...this.color);\r\n        p5.text(this.value.toString(), this.currentX - StackArray.ELEMENT_SIZE/2,this.currentY - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueArray.ITEM_WIDTH + QueueArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueArray.ELEMENT_SIZE);\r\n        let x = QueueArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueArray.ITEM_WIDTH, QueueArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueArray.ELEMENT_WIDTH,QueueArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ITEM_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeArray.ITEM_WIDTH + DequeArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeArray.ELEMENT_SIZE);\r\n        let x = DequeArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeArray.ITEM_WIDTH, DequeArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeArray.ELEMENT_WIDTH,DequeArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ITEM_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils, Colors } from 'utils';\r\n\r\nexport default class StackLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static CAN_DRAG = true;\r\n    static SUPPORTS_NO_LOOP = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n    static SUPPORTS_TEXT = true;\r\n    static SUPPORTS_ANIMATION_CONTROL = true;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = StackLinkedList.ITEM_WIDTH + StackLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n        this.made = true;\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        if (this.made) {\r\n            this.beginDrawLoop();\r\n        }\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n\r\n        this.resizing = false;\r\n        if (this.made) {\r\n            this.endDrawLoop();\r\n        }\r\n    }\r\n\r\n\r\n    push(data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (data === null) {\r\n            this.updateText(\"Cannot add null to Stack.\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        animation.push({method:this.makeNode,params:[data,],explanation:`Create value: ${data}`,isAnimationStep:true,});\r\n        if (this.size > 0) {\r\n            animation.push({method:this.setTempNodeBeforeHead,params:[],explanation:`Assign next pointer`,isAnimationStep:true,});\r\n            animation.push({method:this.shiftHeadForNode,params:[],isAnimationStep:true,customUndoEnd:true,customRedoEnd:true,});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[],explanation:`Reset top pointer to new head`,isAnimationStep:true,});\r\n        animation.push({method:this.shiftHead,params:[],isAnimationStep:true,customUndoEnd:true,customRedoEnd:true,});\r\n        animation.push({method:this.sizeIncr,params:[],noAnim:true,});\r\n        animation.push({method:this.showText,params:[`Successfully pushed ${data} to stack.`, Colors.GREEN],noAnim:true,});\r\n        this.addAnimation(animation);\r\n        this.endDrawLoop();\r\n        this.stepForward();\r\n        return true;\r\n    }\r\n\r\n\r\n    pop() {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (this.size === 0) {\r\n            this.updateText(\"Cannot pop empty Stack\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data = this.head.data;\r\n        animation.push({method:this.markHeadForDeletion,params:[],});\r\n        animation.push({method:this.unmakeHead,params:[],customEnd:true,isAnimationStep:true,customUndoEnd:true,customRedoEnd:true,});\r\n        if (this.size > 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[],isAnimationStep:true,customUndoEnd:true,customRedoEnd:true,});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[],isAnimationStep:true,undoData:[this.head.data,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        animation.push({method:this.showText,params:[`Successfully popped ${data} from stack.`, Colors.GREEN],noAnim:true,});\r\n        this.addAnimation(animation);\r\n        this.endDrawLoop();\r\n        this.stepForward();\r\n        return data;\r\n    }\r\n\r\n\r\n    makeNode(data) {\r\n        this.tempNode = new StackLinkedListNode({data: data, index: 0, x:20,y:20,});\r\n    }\r\n    undo_makeNode(data) {\r\n        this.tempNode = null;\r\n    }\r\n\r\n    setTempNodeBeforeHead() {\r\n        this.tempNode.next = this.head;\r\n    }\r\n    undo_setTempNodeBeforeHead() {\r\n        this.tempNode.next = null;\r\n    }\r\n\r\n    insertTempNode() {\r\n        this.nodes.splice(0, 0, this.tempNode);\r\n        this.head = this.tempNode;\r\n    }\r\n    undo_insertTempNode() {\r\n        this.head = this.tempNode.next;\r\n        this.nodes.splice(0, 1);\r\n    }\r\n\r\n    shiftHead() {\r\n        this.tempNode.shift(...this.getNodePosition(0));\r\n        this.tempNode = null;\r\n    }\r\n    undo_shiftHead() {\r\n        this.tempNode = this.nodes[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.stopDrawing();\r\n        });\r\n    }\r\n    redo_shiftHead() {\r\n        this.tempNode.shift(...this.getNodePosition(0));\r\n        let temp = this.tempNode;\r\n        temp.addOnStop(() => {\r\n            this.stopDrawing();\r\n        });\r\n        this.tempNode = null;\r\n    }\r\n\r\n    markHeadForDeletion() {\r\n        this.head.markForDeletion();\r\n    }\r\n    undo_markHeadForDeletion() {\r\n        this.head.unhighlight();\r\n    }\r\n\r\n    unmakeHead() {\r\n        this.tempNode = this.nodes.splice(0, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n    undo_unmakeHead() {\r\n        this.tempNode.shift(...this.getNodePosition(0));\r\n        this.nodes.splice(0, 0, this.tempNode);\r\n        this.tempNode.addOnStop(() => {\r\n            this.stopDrawing();\r\n        });\r\n        this.tempNode = null;\r\n    }\r\n    redo_unmakeHead() {\r\n        this.tempNode = this.nodes.splice(0, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.stopDrawing();\r\n        });\r\n    }\r\n\r\n    skipTempNode() {\r\n        this.head = this.head.next;\r\n        this.tempNode = null;\r\n    }\r\n    undo_skipTempNode(oldData) {\r\n        this.tempNode = new StackLinkedListNode({data: oldData, index: 0, x:20,y:20,});\r\n        this.tempNode.next = this.head;\r\n        this.tempNode.markForDeletion();\r\n        this.head = this.tempNode;\r\n    }\r\n\r\n    shiftHeadForNode() {\r\n        let node = this.head;\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n    undo_shiftHeadForNode() {\r\n        let node = this.head;\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            if (!node.next) {\r\n                node.addOnStop(() => {\r\n                    this.stopDrawing();\r\n                });\r\n            }\r\n            node = node.next;\r\n        }\r\n    }\r\n    redo_shiftHeadForNode() {\r\n        let node = this.head;\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            if (!node.next) {\r\n                node.addOnStop(() => {\r\n                    this.stopDrawing();\r\n                });\r\n            }\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode() {\r\n        let node = this.head.next;\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n    undo_shiftIntoNode() {\r\n        let node = this.head.next;\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            if (!node.next) {\r\n                node.addOnStop(() => {\r\n                    this.stopDrawing();\r\n                });\r\n            }\r\n            node = node.next;\r\n        }\r\n    }\r\n    redo_shiftIntoNode() {\r\n        let node = this.head.next;\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            if (!node.next) {\r\n                node.addOnStop(() => {\r\n                    this.stopDrawing();\r\n                });\r\n            }\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n    undo_shiftNode(node, direction) {\r\n        // console.log(\"undo_shiftNode\");\r\n        this.shiftNode(node, -direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n    undo_sizeIncr() {\r\n        this.size--;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n    undo_sizeDecr() {\r\n        this.size++;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / StackLinkedList.ELEMENT_SIZE));\r\n        let x = StackLinkedList.ELEMENT_SIZE * index;\r\n        let y = 75 + Math.floor(index / maxPerRow) * 2 * StackLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * StackLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        this.pinnedNode.unpin();\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        node.update(animationSpeed, p5);\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        super.draw(p5);\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        // p5.noFill();\r\n        p5.stroke(0);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.text(\"Top:\",95,20,35,35);\r\n        p5.square(130,20,35);\r\n        if (this.head) {\r\n            p5.stroke(Colors.BLUE);\r\n            p5.fill(Colors.BLUE);\r\n            p5.circle(130 + 35 / 2, 20 + 35 / 2, 5);\r\n            p5.line(130 + 35 / 2, 20 + 35 / 2, this.head.currentX + StackLinkedList.ITEM_WIDTH / 2, this.head.currentY);\r\n            p5.rect(this.head.currentX + StackLinkedList.ITEM_WIDTH / 2 - 3, this.head.currentY - 3, 6,6);\r\n        } else {\r\n            p5.line(130,20,165,55);\r\n        }\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        // this.drawingBeforeMouseDown = this.drawing;\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.animator.loop();\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.pinnedNode.addOnStop(() => {\r\n                if (!this.drawing) {\r\n                    this.stopDrawing();\r\n                }\r\n            });\r\n            this.unpin();\r\n        } else {\r\n            // if (!this.drawing) {\r\n            //     this.stopDrawing();\r\n            // }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + StackLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass StackLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + StackLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + StackLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unhighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, StackLinkedList.ITEM_WIDTH, StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, StackLinkedList.ELEMENT_WIDTH,StackLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ITEM_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueLinkedList.ITEM_WIDTH + QueueLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueLinkedList.ELEMENT_SIZE);\r\n        let x = QueueLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueLinkedList.ITEM_WIDTH, QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueLinkedList.ELEMENT_WIDTH,QueueLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ITEM_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeLinkedList.ITEM_WIDTH + DequeLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeLinkedList.ELEMENT_SIZE);\r\n        let x = DequeLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeLinkedList.ITEM_WIDTH, DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeLinkedList.ELEMENT_WIDTH,DequeLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ITEM_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport Sketch from 'react-p5';\r\nimport './visualizer.scss';\r\n\r\nimport ControlBar from './controlBar';\r\n\r\nimport { ControlBuilder, Utils } from 'utils';\r\nimport { Animator } from 'animation';\r\n\r\nexport default class Visualizer extends PureComponent {\r\n\r\n    static INITIAL_SPEED = 50;\r\n    static MAX_SPEED = 20;\r\n    static SPEED_SLIDER_DEGREE = 1.5;\r\n\r\n    static maxAnimationSpeed() {\r\n        return Math.pow(Visualizer.MAX_SPEED, Visualizer.SPEED_SLIDER_DEGREE);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.setup = this.setup.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.mousePressed = this.mousePressed.bind(this);\r\n        this.touchMoved = this.touchMoved.bind(this);\r\n        this.mouseReleased = this.mouseReleased.bind(this);\r\n        this.windowResized = this.windowResized.bind(this);\r\n\r\n\r\n        this.controlBarRef = React.createRef();\r\n\r\n        this.controlGroups = [];\r\n        this.defaultControlGroups = [];\r\n        this.controls = [];\r\n\r\n        // this.animationSpeed = Visualizer.INITIAL_SPEED;\r\n\r\n        this.onAnimStart = this.onAnimStart.bind(this);\r\n        this.onAnimEnd = this.onAnimEnd.bind(this);\r\n        this.animating = false;\r\n\r\n        this.focusedElement = null;\r\n\r\n        this.animator = new Proxy(new Animator(), {\r\n            get: function (target, propertyName, receiver) {\r\n                if (target[propertyName]) {\r\n                    return target[propertyName];\r\n                } else {\r\n                    return (param) => target.emit(propertyName + (param ? (\"-\" + param) : \"\"));\r\n                }\r\n            }\r\n        });\r\n        this.animator.on(\"anim-start\", this.onAnimStart);\r\n        this.animator.on(\"anim-end\", this.onAnimEnd);\r\n\r\n        this.addDefaultControls();\r\n    }\r\n\r\n    addDefaultControls() {\r\n        this.speedSlider = ControlBuilder.createSlider(1, Visualizer.MAX_SPEED, Math.pow(Visualizer.INITIAL_SPEED,1/Visualizer.SPEED_SLIDER_DEGREE), 0);\r\n        let sliderLabel = ControlBuilder.createLabel(\"Animation Speed\", this.speedSlider);\r\n        let speedSliderGroup = ControlBuilder.createControlGroup(\"speedSliderGroup\", this.speedSlider, sliderLabel);\r\n        let extraGroups = []\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_ANIMATION_CONTROL) {\r\n            let skipBackButton = ControlBuilder.createButton(\"Skip Back\");\r\n            skipBackButton.addEventListener(\"click\", () => {\r\n                this.visualization.skipBack();\r\n            });\r\n            skipBackButton.disabled = true;\r\n            this.animator.on(\"disable-skipBack\", () => {\r\n                skipBackButton.disabled = true;\r\n            });\r\n            this.animator.on(\"enable-skipBack\", () => {\r\n                skipBackButton.disabled = false;\r\n            });\r\n            let stepBackButton = ControlBuilder.createButton(\"Step Back\");\r\n            stepBackButton.addEventListener(\"click\", () => {\r\n                this.visualization.stepBack();\r\n            });\r\n            stepBackButton.disabled = true;\r\n            this.animator.on(\"disable-stepBack\", () => {\r\n                stepBackButton.disabled = true;\r\n            });\r\n            this.animator.on(\"enable-stepBack\", () => {\r\n                stepBackButton.disabled = false;\r\n            });\r\n            let playPauseButton = ControlBuilder.createButton(\"Pause\");\r\n            playPauseButton.addEventListener(\"click\", () => {\r\n                this.visualization.playPause();\r\n                playPauseButton.setAttribute(\"value\", this.visualization.paused ? \"Play\" : \"Pause\");\r\n            });\r\n            let stepForwardButton = ControlBuilder.createButton(\"Step Forward\");\r\n            stepForwardButton.addEventListener(\"click\", () => {\r\n                this.visualization.stepForward();\r\n            });\r\n            stepForwardButton.disabled = true;\r\n            this.animator.on(\"disable-stepForward\", () => {\r\n                stepForwardButton.disabled = true;\r\n            });\r\n            this.animator.on(\"enable-stepForward\", () => {\r\n                stepForwardButton.disabled = false;\r\n            });\r\n            let skipForwardButton = ControlBuilder.createButton(\"Skip Forward\");\r\n            skipForwardButton.addEventListener(\"click\", () => {\r\n                this.visualization.skipForward();\r\n            });\r\n            skipForwardButton.disabled = true;\r\n            this.animator.on(\"disable-skipForward\", () => {\r\n                skipForwardButton.disabled = true;\r\n            });\r\n            this.animator.on(\"enable-skipForward\", () => {\r\n                skipForwardButton.disabled = false;\r\n            });\r\n\r\n            extraGroups.push(ControlBuilder.createControlGroup(\"stepButtonGroup\",skipBackButton,stepBackButton,playPauseButton,stepForwardButton,skipForwardButton));\r\n            let animationControls = ControlBuilder.createControlGroup(\"animationControls\",...extraGroups);\r\n            ControlBuilder.applyStyle(animationControls,\"width\",\"441px\");\r\n            this.defaultControlGroups.push(animationControls);\r\n        }\r\n        this.defaultControlGroups.push(speedSliderGroup);\r\n        this.defaultsLabel = \"Animation controls\";\r\n    }\r\n\r\n    addControlLabel(label) {\r\n        this.mainLabel = label;\r\n    }\r\n\r\n    addControlGroups(...controlGroups) {\r\n        // console.log(\"control added\");\r\n        this.controlGroups.push(...controlGroups);\r\n        controlGroups.forEach((controlGroup) => {\r\n            if (controlGroup.tagName === \"INPUT\") {\r\n                this.controls.push(controlGroup);\r\n            } else {\r\n                this.registerControlGroup(controlGroup);\r\n            }\r\n        });\r\n    }\r\n\r\n    registerControlGroup(controlGroup) {\r\n        controlGroup.childNodes.forEach((child) => {\r\n            if (child.tagName === \"INPUT\") {\r\n                this.controls.push(child);\r\n            } else {\r\n                this.registerControlGroup(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    onAnimStart() {\r\n        this.disableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            // this.animator.loop();\r\n        }\r\n        this.animating = true;\r\n    }\r\n\r\n    onAnimEnd() {\r\n        this.enableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            // this.animator.noLoop();\r\n        }\r\n        this.animating = false;\r\n    }\r\n\r\n    disableUI() {\r\n        // console.log(\"disable\");\r\n        this.controls.forEach((control) => {\r\n            if (control === document.activeElement) {\r\n                this.focusedElement = control;\r\n            }\r\n            control.disabled = true;\r\n        });\r\n    }\r\n\r\n    enableUI() {\r\n        // console.log(\"enable\");\r\n        this.controls.forEach((control) => {\r\n            control.disabled = false;\r\n            if (control === this.focusedElement) {\r\n                control.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        callForward();\r\n        if (Utils.isDev()) {\r\n            window[this.class] = this.visualization;\r\n        }\r\n        this.controlBar = this.controlBarRef.current;\r\n        this.controlBar.setMainLabel(this.mainLabel);\r\n        this.controlBar.setDefaultsLabel(this.defaultsLabel);\r\n        this.defaultControlGroups.forEach((defaultGroup) => {\r\n            this.controlBar.addDefaultGroup(defaultGroup);\r\n        });\r\n        this.controlGroups.forEach((controlGroup) => {\r\n            this.controlBar.addControlGroup(controlGroup);\r\n        });\r\n        this.mounted = true;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"update\");\r\n    }\r\n\r\n    setup(p5, canvasParentRef) {\r\n        // let width = this.controlBar.controlBar.current.getBoundingClientRect().width;\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n\r\n        this.mobile = window.ontouchstart !== undefined;\r\n        if (this.mobile) {\r\n            height = 1000;\r\n            // document.querySelector(\".canvas-container\").style.height = height + \"px\";\r\n            document.querySelector(\".canvas-container\").classList.add(\"mobile\");\r\n        }\r\n\r\n        //config\r\n        let canvas = p5.createCanvas(p5.windowWidth\r\n            ,height);\r\n        canvas.parent(canvasParentRef);\r\n        //\r\n        // canvas.touchStarted((event) => {\r\n        //     console.log(\"touchdown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         event.preventDefault();\r\n        //     }\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchMoved((event) => {\r\n        //     console.log(\"touchmove\");\r\n        //     if (!this.touchMoved(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        //     return true;\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchEnded(() => {\r\n        //     console.log(\"touchup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // canvas.mousePressed(() => {\r\n        //     console.log(\"mousedown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        // });\r\n        // canvas.mouseReleased(() => {\r\n        //     console.log(\"mouseup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // p5.background(200);\r\n        // p5.frameRate(8);\r\n\r\n        // document.addEventListener(\"resize\", (event) => {\r\n        //     console.log(\"resize\");\r\n        // });\r\n        this.animator.on(\"noLoop\", () => {\r\n            // console.log(\"noLoop\");\r\n            p5.noLoop();\r\n        });\r\n        this.animator.on(\"loop\", () => {\r\n            // console.log(\"loop\");\r\n            p5.loop();\r\n        });\r\n        this.windowResized(p5);\r\n\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            this.animator.noLoop();\r\n        }\r\n    }\r\n    draw(p5) {\r\n        //inputs\r\n        let animationSpeed = Math.pow(this.speedSlider.value,Visualizer.SPEED_SLIDER_DEGREE);\r\n\r\n        p5.background(255);\r\n\r\n        //objects\r\n        this.visualization.update(animationSpeed, p5);\r\n        this.visualization.draw(p5);\r\n        // if (!this.animating) {\r\n        //     if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n        //         this.animator.noLoop();\r\n        //     }\r\n        // }\r\n    }\r\n    mousePressed(p5) {\r\n        if (this.visualization.mousePressed) {\r\n            // console.log(\"down\");\r\n            //let pressed =\r\n            this.visualization.mousePressed(p5);\r\n            // console.log(pressed);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    touchMoved(p5) {\r\n        if (this.visualization.touchMoved) {\r\n            // console.log(\"move\");\r\n            return this.visualization.touchMoved();\r\n        }\r\n        return true;\r\n    }\r\n    mouseReleased(p5) {\r\n        if (this.visualization.mouseReleased) {\r\n            // console.log(\"up\");\r\n            //let released =\r\n            this.visualization.mouseReleased(p5);\r\n            // console.log(released);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    windowResized(p5) {\r\n        // console.log(\"resize\");\r\n        //config\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n        if (this.mobile) {\r\n            // height = 1000;\r\n        }\r\n        // height = document.querySelector(\".react-p5\").getBoundingClientRect().height;\r\n        document.querySelector(\".canvas-container\").style.height = height+\"px\";\r\n        height = document.querySelector(\".canvas-container\").getBoundingClientRect().height;\r\n        // console.log(height);\r\n        // p5.resizeCanvas(p5.windowWidth, p5.height);\r\n\r\n        //objects\r\n        let numScrollbars = this.controlBar.windowResized();\r\n        this.visualization.windowResized(p5, height, numScrollbars);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div className={`visualizer ${this.class}`}>\r\n                    <ControlBar ref={this.controlBarRef}/>\r\n                    {\r\n                        this.constructor.VISUALIZATION_CLASS.USE_CANVAS ?\r\n                                <div className=\"canvas-container\">\r\n                                    {\r\n                                        this.mounted ?\r\n                                                <Sketch setup={this.setup} draw={this.draw} windowResized={this.windowResized} mousePressed={this.mousePressed} mouseReleased={this.mouseReleased} touchStarted={this.mousePressed} touchEnded={this.mouseReleased} touchMoved={this.touchMoved}/>\r\n                                            :\r\n                                                <p>Loading Sketch</p>\r\n                                    }\r\n                                </div>\r\n                            :\r\n                                <this.visualization.VISUALIZATION_CLASS />\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class ListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.list;\r\n        });\r\n    }\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { ArrayList } from 'animation';\r\nimport './arraylist.scss';\r\n\r\n\r\nexport default class ArrayListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = ArrayList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'arraylist';\r\n        super.addControlLabel(\"ArrayList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new ArrayList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { SinglyLinkedList } from 'animation';\r\nimport './singly-linked-list.scss';\r\n\r\n\r\nexport default class SinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = SinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'singlylinkedlist';\r\n        super.addControlLabel(\"SinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new SinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { DoublyLinkedList } from 'animation';\r\nimport './doubly-linked-list.scss';\r\n\r\n\r\nexport default class DoublyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = DoublyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'doublylinkedlist';\r\n        super.addControlLabel(\"DoublyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new DoublyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { CircularSinglyLinkedList } from 'animation';\r\nimport './circular-singly-linked-list.scss';\r\n\r\nexport default class CircularSinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = CircularSinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'circularsinglylinkedlist';\r\n        super.addControlLabel(\"CircularSinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new CircularSinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './lists.scss';\r\n\r\nimport ArrayListVisualizer from './arraylist';\r\nimport SinglyLinkedListVisualizer from './singly-linked-list';\r\nimport DoublyLinkedListVisualizer from './doubly-linked-list';\r\nimport CircularSinglyLinkedListVisualizer from './circular-singly-linked-list';\r\n\r\nexport default function Lists(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <ListView url={url} />} />\r\n                <Route path={`${path}/arraylist`} component={ArrayListVisualizer} />\r\n                <Route path={`${path}/sll`} component={SinglyLinkedListVisualizer} />\r\n                <Route path={`${path}/dll`} component={DoublyLinkedListVisualizer} />\r\n                <Route path={`${path}/c-sll`} component={CircularSinglyLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction ListView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <h1 id=\"title\">Lists</h1>\r\n                <div className=\"links\">\r\n                    <Link to={`${path}/arraylist`}>ArrayList</Link>\r\n                    <Link to={`${path}/sll`}>SinglyLinkedList</Link>\r\n                    <Link to={`${path}/dll`}>DoublyLinkedList</Link>\r\n                    <Link to={`${path}/c-sll`}>CircularSinglyLinkedList</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class StackVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.pushButtonCallback = this.pushButtonCallback.bind(this);\r\n        this.popButtonCallback = this.popButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.stack = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.pushButton = ControlBuilder.createButton(\"push\");\r\n        this.pushButton.addEventListener(\"click\",this.pushButtonCallback);\r\n\r\n        this.popButton = ControlBuilder.createButton(\"pop\");\r\n        this.popButton.addEventListener(\"click\",this.popButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.pushButton, this.popButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.stack;\r\n        });\r\n    }\r\n\r\n\r\n    pushButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    popButtonCallback() {\r\n        this.stack.pop();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.stack.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.stack.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class QueueVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.enqueueButtonCallback = this.enqueueButtonCallback.bind(this);\r\n        this.dequeueButtonCallback = this.dequeueButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.queue = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.enqueueButton = ControlBuilder.createButton(\"enqueue\");\r\n        this.enqueueButton.addEventListener(\"click\",this.enqueueButtonCallback);\r\n\r\n        this.dequeueButton = ControlBuilder.createButton(\"dequeue\");\r\n        this.dequeueButton.addEventListener(\"click\",this.dequeueButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.enqueueButton, this.dequeueButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.queue;\r\n        });\r\n    }\r\n\r\n\r\n    enqueueButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeueButtonCallback() {\r\n        this.queue.dequeue();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.queue.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.queue.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class DequeVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addLastButtonCallback = this.addLastButtonCallback.bind(this);\r\n        this.addFirstButtonCallback = this.addFirstButtonCallback.bind(this);\r\n        this.removeFirstButtonCallback = this.removeFirstButtonCallback.bind(this);\r\n        this.removeLastButtonCallback = this.removeLastButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.deque = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.addLastButton = ControlBuilder.createButton(\"addLast (enqueue)\");\r\n        this.addLastButton.addEventListener(\"click\",this.addLastButtonCallback);\r\n\r\n        this.addFirstButton = ControlBuilder.createButton(\"addFirst (push)\");\r\n        this.addFirstButton.addEventListener(\"click\",this.addFirstButtonCallback);\r\n\r\n        this.removeFirstButton = ControlBuilder.createButton(\"removeFirst (dequeue/pop)\");\r\n        this.removeFirstButton.addEventListener(\"click\",this.removeFirstButtonCallback);\r\n\r\n        this.removeLastButton = ControlBuilder.createButton(\"removeLast\");\r\n        this.removeLastButton.addEventListener(\"click\",this.removeLastButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addButtonGroup = ControlBuilder.createControlGroup(\"addButtons\", this.addFirstButton, this.addLastButton);\r\n        let removeButtonGroup = ControlBuilder.createControlGroup(\"removeButtons\", this.removeFirstButton, this.removeLastButton);\r\n        let interactionGroup = ControlBuilder.createControlGroup(\"interactions\", this.valueField, addButtonGroup, removeButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(interactionGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.deque;\r\n        });\r\n    }\r\n\r\n\r\n    addLastButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addFirstButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addFirst(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFirstButtonCallback() {\r\n        this.deque.removeFirst();\r\n    }\r\n\r\n    removeLastButtonCallback() {\r\n        this.deque.removeLast();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.deque.reset();\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackArray } from 'animation';\r\nimport './stack-array.scss';\r\n\r\n\r\nexport default class StackArrayVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-array';\r\n        super.addControlLabel(\"Stack (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueArray } from 'animation';\r\nimport './queue-array.scss';\r\n\r\n\r\nexport default class QueueArrayVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-array';\r\n        super.addControlLabel(\"Queue (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeArray } from 'animation';\r\nimport './deque-array.scss';\r\n\r\n\r\nexport default class DequeArrayVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-array';\r\n        super.addControlLabel(\"Deque (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackLinkedList } from 'animation';\r\nimport './stack-linked-list.scss';\r\n\r\n\r\nexport default class StackLinkedListVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-linkedlist';\r\n        super.addControlLabel(\"Stack (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueLinkedList } from 'animation';\r\nimport './queue-linked-list.scss';\r\n\r\n\r\nexport default class QueueLinkedListVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-linkedlist';\r\n        super.addControlLabel(\"Queue (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeLinkedList } from 'animation';\r\nimport './deque-linked-list.scss';\r\n\r\n\r\nexport default class DequeLinkedListVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-linkedlist';\r\n        super.addControlLabel(\"Deque (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './stacks-queues-deques.scss';\r\n\r\nimport StackArrayVisualizer from './stack-array';\r\nimport QueueArrayVisualizer from './queue-array';\r\nimport DequeArrayVisualizer from './deque-array';\r\nimport StackLinkedListVisualizer from './stack-linked-list';\r\nimport QueueLinkedListVisualizer from './queue-linked-list';\r\nimport DequeLinkedListVisualizer from './deque-linked-list';\r\n\r\nexport default function StacksQueuesDeques(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <StackQueueDequeView url={url} />} />\r\n                <Route path={`${path}/stack-array`} component={StackArrayVisualizer} />\r\n                <Route path={`${path}/queue-array`} component={QueueArrayVisualizer} />\r\n                <Route path={`${path}/deque-array`} component={DequeArrayVisualizer} />\r\n                <Route path={`${path}/stack-linkedlist`} component={StackLinkedListVisualizer} />\r\n                <Route path={`${path}/queue-linkedlist`} component={QueueLinkedListVisualizer} />\r\n                <Route path={`${path}/deque-linkedlist`} component={DequeLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction StackQueueDequeView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <Link to={`${path}/stack-array`}>StackArray</Link>\r\n                <Link to={`${path}/queue-array`}>QueueArray</Link>\r\n                <Link to={`${path}/deque-array`}>DequeArray</Link>\r\n                <Link to={`${path}/stack-linkedlist`}>StackLinkedList</Link>\r\n                <Link to={`${path}/queue-linkedlist`}>QueueLinkedList</Link>\r\n                <Link to={`${path}/deque-linkedlist`}>DequeLinkedList</Link>\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport './datastructures.scss';\r\n\r\nimport Lists from 'components/lists';\r\nimport StacksQueuesDeques from 'components/stacks-queues-deques'\r\n\r\nexport default function DataStructures() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <DataStructureView url={url} />} />\r\n                <Route path={`${path}/lists`} component={Lists} />\r\n                <Route path={`${path}/stacks-queues-deques`} component={StacksQueuesDeques} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction DataStructureView(props) {\r\n    return (\r\n            <div className=\"datastructure-view\">\r\n            </div>\r\n        );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainComponent from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<MainComponent />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport './app.scss';\r\nimport './universal.scss';\r\n\r\nimport AppHeader from './app-header';\r\nimport AppFooter from './app-footer';\r\nimport Home from 'components/home';\r\nimport About from 'components/about';\r\nimport DataStructures from 'components/datastructures';\r\n\r\nexport default function App() {\r\n    return (\r\n            <HashRouter basename='/'>\r\n                <div className=\"app\">\r\n                    <AppHeader />\r\n                    <div className=\"app-content\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/datastructures\" component={DataStructures} />\r\n                        </Switch>\r\n                    </div>\r\n                    <AppFooter />\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n}\r\n"],"sourceRoot":""}