{"version":3,"sources":["res/images/logo.svg","components/app/nav-bar/nav-bar.jsx","components/app/app-header/app-header.jsx","components/app/app-footer/app-footer.jsx","components/home/home.jsx","components/about/about.jsx","components/visualizer/controlBar/controlBar.jsx","utils/ControlBuilder.js","utils/Utils.js","animation/AnimatedObject.js","animation/AttractedDraggableObject.js","animation/Animator.js","animation/Visualization.js","animation/ArrayList/ArrayList.js","animation/SinglyLinkedList/SinglyLinkedList.js","animation/DoublyLinkedList/DoublyLinkedList.js","animation/CircularSinglyLinkedList/CircularSinglyLinkedList.js","animation/StackArray/StackArray.js","animation/QueueArray/QueueArray.js","animation/DequeArray/DequeArray.js","animation/StackLinkedList/StackLinkedList.js","animation/QueueLinkedList/QueueLinkedList.js","animation/DequeLinkedList/DequeLinkedList.js","components/visualizer/visualizer.jsx","components/lists/list-ADT.jsx","components/lists/arraylist/arraylist.jsx","components/lists/singly-linked-list/singly-linked-list.jsx","components/lists/doubly-linked-list/doubly-linked-list.jsx","components/lists/circular-singly-linked-list/circular-singly-linked-list.jsx","components/lists/lists.jsx","components/stacks-queues-deques/stack-ADT.jsx","components/stacks-queues-deques/queue-ADT.jsx","components/stacks-queues-deques/deque-ADT.jsx","components/stacks-queues-deques/stack-array/stack-array.jsx","components/stacks-queues-deques/queue-array/queue-array.jsx","components/stacks-queues-deques/deque-array/deque-array.jsx","components/stacks-queues-deques/stack-linked-list/stack-linked-list.jsx","components/stacks-queues-deques/queue-linked-list/queue-linked-list.jsx","components/stacks-queues-deques/deque-linked-list/deque-linked-list.jsx","components/stacks-queues-deques/stacks-queues-deques.jsx","components/datastructures/datastructures.jsx","serviceWorker.js","index.js","components/app/app.jsx"],"names":["module","exports","NavBar","props","state","responsive","document","body","scrollTop","documentElement","console","log","this","setState","id","className","to","window","location","href","substring","indexOf","length","src","logo","alt","nav_items","map","nav_item","key","link","content","onClick","toggleResponsiveNav","Component","NavBarItem","icon","title_text","drop_down_items","selfRef","React","createRef","showDropDown","clear","bind","show","setShowDropDown","ref","parentRef","parent","items","parentRoute","NavBarItemTitle","parentNavItem","handleDocumentClick","onMouseDown","containingNavItemRef","addEventListener","removeEventListener","event","current","contains","target","e","nativeEvent","which","hash","NavBarDropDown","drop_down_item","NavBarDropDownItem","side_pane_items","showSidePane","toggleShowSidePane","setShowSidePane","NavBarDropDownItemTitle","parentDropDownItem","containingDropDownItemRef","NavBarSidePane","side_pane_item","NavBarSideItem","AppHeader","AppFooter","Home","About","ControlBar","defaultContainer","defaults","mainContainer","controlBar","label","defaultsLabel","forceUpdate","mainLabel","controlGroup","appendChild","transformed","getBoundingClientRect","width","parseFloat","getComputedStyle","getPropertyValue","classList","add","remove","testSize","PureComponent","newEmptyControl","emptyControl","createElement","applyStyle","createControl","type","value","newControl","setAttribute","createButton","createField","prompt","field","validators","forEach","validator","validatorIntOnly","match","reduce","sum","char","validatorMaxLength","maxLength","Math","min","addSubmit","callback","undefined","createSlider","max","defaultValue","step","slider","createControlGroup","controls","control","setTabControl","nextControl","shifted","preventDefault","blur","focus","styleType","style","addArray","array","newArr","arrays","item","i","isDev","process","AnimatedObject","xProgress","yProgress","direction","animationSpeed","inPosition","sign","AttractedDraggableObject","x","y","currentX","currentY","desiredX","desiredY","vx","vy","pinnedToMouse","mouseOffsetX","mouseOffsetY","onStop","sqrt","pow","mouseX","mouseY","constructor","CAN_DRAG","frozen","push","shift","p5","deltaX","deltaY","isNaN","stop","angle","atan","PI","magnitude","ATTRACTION","prevAngle","cos","sin","abs","MIN_DISTANCE","Animator","events","objects","connectingEdges","filter","Visualization","animator","animationHistory","animationQueue","animating","animation","method","emit","scope","params","time","setTimeout","callForward","SET_BOUNDS","height","popAnimation","apply","SUPPORTS_CUSTOM_END","customEnd","floor","Visualizer","maxAnimationSpeed","doneAnimating","MAX_ANIM_TIME","pop","numScrollbars","maxY","windowWidth","querySelector","resizeCanvas","ArrayList","reset","index","data","size","backingArray","doubleSize","shiftForIndex","setIndex","sizeIncr","addAnimation","addAtIndex","element","shiftIntoIndex","sizeDecr","removeFromIndex","INITIAL_CAPACITY","ArrayElement","resetElement","incrLength","shiftElement","shiftElementMovement","shiftElementIndex","ELEMENT_SIZE","update","foundAnimElement","maxPerRow","rows","ceil","translate","row","numElements","noStroke","fill","rect","stroke","textAlign","CENTER","textSize","block","line","text","toString","nextX","nextY","draw","USE_CANVAS","toX","toY","posX","posY","SinglyLinkedList","node","nextNode","head","moveHighlight","next","makeNode","setTempNodeBefore","setTempNodePrev","shiftForNode","insertTempNode","prev","toDelete","markNodeForDeletion","unmakeNode","shiftIntoNode","skipTempNode","nodes","tempNode","pinnedNode","SinglyLinkedListNode","splice","getNodePosition","fromNode","toNode","unHighlight","highlight","highlighted","nodeToDelete","markForDeletion","addOnStop","shiftNode","ELEMENT_HEIGHT","containsPos","pin","unpin","markBroken","highlightForDeletion","updateNode","ELEMENT_WIDTH","pressedNode","getNodeAtPos","POINTER_WIDTH","ITEM_WIDTH","SPACING","MAX_DIST_REMOVE","handBroken","color","displacement","dist","Utils","circle","DoublyLinkedList","tail","skipTempNodePrev","skipTempNodeNext","DoublyLinkedListNode","ELEMENT_PADDED_WIDTH","CircularSinglyLinkedList","changeHeadData","customNodeShift","resetHead","CircularSinglyLinkedListNode","unfreeze","pointsToHead","noFill","curveTightness","beginShape","curveVertex","endShape","StackArray","QueueArray","DequeArray","StackLinkedList","QueueLinkedList","DequeLinkedList","setup","mousePressed","touchMoved","mouseReleased","windowResized","controlBarRef","controlGroups","INITIAL_SPEED","onAnimStart","onAnimEnd","focusedElement","Proxy","get","propertyName","receiver","on","addDefaultControls","MAX_SPEED","SPEED_SLIDER_DEGREE","speedSlider","ControlBuilder","defaultControlGroup","tagName","registerControlGroup","childNodes","child","disableUI","VISUALIZATION_CLASS","SUPPORTS_NO_LOOP","loop","enableUI","noLoop","activeElement","disabled","class","visualization","setMainLabel","setDefaultsLabel","addDefaultGroup","addControlGroup","canvasParentRef","mobile","ontouchstart","createCanvas","background","touchStarted","touchEnded","ListVisualizer","addAtIndexButtonCallback","addToFrontButtonCallback","addToBackButtonCallback","removeFromIndexButtonCallback","removeFromFrontButtonCallback","removeFromBackButtonCallback","resetButtonCallback","elementFieldCallback","indexFieldCallback","list","addControls","valueField","indexField","addAtIndexButton","addToFrontButton","addToBackButton","removeFromIndexButton","removeFromFrontButton","removeFromBackButton","resetButton","addFrontBackGroup","removeFrontBackGroup","valueFrontBackGroup","indexGroup","resetGroup","parseInt","addToBack","addToFront","removeFromFront","removeFromBack","ArrayListVisualizer","SinglyLinkedListVisualizer","DoublyLinkedListVisualizer","CircularSinglyLinkedListVisualizer","Lists","useRouteMatch","path","url","exact","component","ListView","StackVisualizer","pushButtonCallback","popButtonCallback","stack","pushButton","popButton","interactionButtonGroup","mainControlGroup","peek","QueueVisualizer","enqueueButtonCallback","dequeueButtonCallback","queue","enqueueButton","dequeueButton","enqueue","dequeue","DequeVisualizer","addLastButtonCallback","addFirstButtonCallback","removeFirstButtonCallback","removeLastButtonCallback","deque","addLastButton","addFirstButton","removeFirstButton","removeLastButton","addButtonGroup","removeButtonGroup","interactionGroup","addLast","addFirst","removeFirst","removeLast","StackArrayVisualizer","QueueArrayVisualizer","DequeArrayVisualizer","StackLinkedListVisualizer","QueueLinkedListVisualizer","DequeLinkedListVisualizer","StacksQueuesDeques","StackQueueDequeView","DataStructures","DataStructureView","Boolean","hostname","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3599ae7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d46fc74.svg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav-bar.scss';\r\n\r\nimport logo from 'res/images/logo.svg';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            responsive: false,\r\n        };\r\n    }\r\n\r\n    scrollToTop() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        console.log(\"scrolltotop\");\r\n    }\r\n\r\n    toggleResponsiveNav() {\r\n        this.setState((state) => {\r\n                return {\r\n                    responsive: !state.responsive,\r\n                };\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"top-nav\" className={`nav-bar ${this.state.responsive ? \"responsive\" : \"\"} nav-container`}>\r\n                    <Link className=\"not-a-button\" id=\"nav-logo\" to={window.location.href.substring(window.location.href.indexOf(\"/#/\")).length > 0 ? \"/\" : \"\" }><img src={logo} className=\"app-logo\" alt=\"logo\" /></Link>\r\n                    {this.props.nav_items.map( (nav_item) => {\r\n                        return (\r\n                                <NavBarItem key={`nav-${nav_item.link}`} content={nav_item} />\r\n                            );\r\n                    })}\r\n                    <button className=\"not-a-button nav-bar-item nav-item nav-item-title\" id=\"top-nav-menu\" onClick={() => this.toggleResponsiveNav()}><i className=\"fa fa-bars\"></i></button>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            icon: this.props.content.icon,\r\n            title_text: this.props.content.title_text,\r\n            drop_down_items: this.props.content.drop_down_items,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.drop_down_items) {\r\n            this.state.showDropDown = false;\r\n        }\r\n\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    setShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: show,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: !state.showDropDown,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setShowDropDown(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-item nav-item ${this.state.drop_down_items && this.state.showDropDown ? \"active\" : \"\"}`} ref={this.selfRef}>\r\n                    <NavBarItemTitle link={this.state.link} icon={this.state.icon} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.drop_down_items && this.state.showDropDown ?\r\n                        <NavBarDropDown items={this.state.drop_down_items} parentRoute={`/${this.state.link}`} parent={this} />\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            icon: this.props.icon,\r\n            title_text: this.props.title_text,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingNavItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingNavItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.state.containingNavItemRef.current && !this.state.containingNavItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentNavItem.setShowDropDown(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentNavItem.state.showDropDown) {\r\n                window.location.hash = `#/${this.state.parentNavItem.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentNavItem.setShowDropDown(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentNavItem.state.drop_down_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`/${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drop_down_items: this.props.items,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-drop-down nav-container\"> {\r\n                    this.state.drop_down_items.map( (drop_down_item) => {\r\n                    return (\r\n                            <NavBarDropDownItem key={`nav-${drop_down_item.link}`} content={drop_down_item} parent={this} parentRoute={this.props.parentRoute} />\r\n                        );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            side_pane_items: this.props.content.side_pane_items,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.side_pane_items) {\r\n            this.state.showSidePane = false;\r\n        }\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    setShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: show,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: !state.showSidePane,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown() {\r\n        this.toggleShowSidePane();\r\n    }\r\n\r\n    clear() {\r\n        this.setShowSidePane(false);\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-drop-down-item nav-item ${this.state.side_pane_items && this.state.showSidePane ? \"active\": \"\"}`} ref={this.selfRef}>\r\n                    <NavBarDropDownItemTitle link={this.state.link} parentRoute={this.state.parentRoute} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.side_pane_items && this.state.showSidePane ?\r\n                        <NavBarSidePane items={this.state.side_pane_items} parentRoute={`${this.props.parentRoute}/${this.state.link}`} parent={this}></NavBarSidePane>\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarDropDownItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            parentRoute: this.props.parentRoute,\r\n            title_text: this.props.title_text,\r\n            // containingDropDownItemRef: this.props.parentRef,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingDropDownItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingDropDownItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentDropDownItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingDropDownItemRef);\r\n        // console.log(this.state.containingDropDownItemRef.current);\r\n        if (this.state.containingDropDownItemRef.current && !this.state.containingDropDownItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentDropDownItem.setShowSidePane(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentDropDownItem.state.showSidePane) {\r\n                window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentDropDownItem.toggleShowSidePane();\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentDropDownItem.state.side_pane_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`}>{this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarSidePane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            side_pane_items: this.props.items,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-pane nav-container\"> {\r\n                    this.state.side_pane_items.map( (side_pane_item) => {\r\n                        return (\r\n                                <NavBarSideItem key={`nav-${side_pane_item.link}`} content={side_pane_item} parentRoute={this.props.parentRoute} parent={this} />\r\n                            );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nclass NavBarSideItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-item nav-item\">\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-side-pane-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './app-header.scss';\r\nimport NavBar from '../nav-bar';\r\n\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n            <header className=\"app-header\">\r\n                <NavBar nav_items={[\r\n                    {\r\n                        link: \"datastructures\",\r\n                        icon: \"sitemap\",\r\n                        title_text: \"Data Structures\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"lists\",\r\n                                title_text: \"Lists\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"arraylist\",\r\n                                        title_text: \"ArrayList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"sll\",\r\n                                        title_text: \"Singly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"dll\",\r\n                                        title_text: \"Doubly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"c-sll\",\r\n                                        title_text: \"Circular Singly LinkedList\",\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"stacks-queues-deques\",\r\n                                title_text: \"Stacks/Queues/Deques\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"stack-array\",\r\n                                        title_text: \"Stack (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"stack-linkedlist\",\r\n                                        title_text: \"Stack (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-array\",\r\n                                        title_text: \"Queue (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-linkedlist\",\r\n                                        title_text: \"Queue (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-array\",\r\n                                        title_text: \"Deque (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-linkedlist\",\r\n                                        title_text: \"Deque (LinkedList)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"trees-skiplist\",\r\n                                title_text: \"Trees and SkipList\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bst\",\r\n                                        title_text: \"Binary Search Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"heap-pq\",\r\n                                        title_text: \"Heap / Priority Queue\"\r\n                                    },\r\n                                    {\r\n                                        link: \"avl\",\r\n                                        title_text: \"AVL\"\r\n                                    },\r\n                                    {\r\n                                        link: \"24-tree\",\r\n                                        title_text: \"2-4 Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"splaytree\",\r\n                                        title_text: \"SplayTree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"skiplist\",\r\n                                        title_text: \"SkipList\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"hashmaps\",\r\n                                title_text: \"HashMaps\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"hashmap-probing\",\r\n                                        title_text: \"HashMap (Probing)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"hashmap-chaining\",\r\n                                        title_text: \"HashMap (Chaining)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"algorithms\",\r\n                        icon: \"stack-overflow\",\r\n                        title_text: \"Algorithms\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"sorting\",\r\n                                title_text: \"Sorting\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bubble\",\r\n                                        title_text: \"Bubble Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"cocktail\",\r\n                                        title_text: \"Cocktail Shaker Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"insertion\",\r\n                                        title_text: \"Insertion Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"selection\",\r\n                                        title_text: \"Selection Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quicksort\",\r\n                                        title_text: \"Quick Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quickselect\",\r\n                                        title_text: \"Quick Select\"\r\n                                    },\r\n                                    {\r\n                                        link: \"merge\",\r\n                                        title_text: \"Merge Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"lsd-radix\",\r\n                                        title_text: \"LSD Radix Sort\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"string-searching\",\r\n                                title_text: \"String Searching\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"brute-force\",\r\n                                        title_text: \"Brute Force\"\r\n                                    },\r\n                                    {\r\n                                        link: \"boyer-moore\",\r\n                                        title_text: \"Boyer Moore\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kmp\",\r\n                                        title_text: \"KMP\"\r\n                                    },\r\n                                    {\r\n                                        link: \"rabin-karp\",\r\n                                        title_text: \"Rabin Karp\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"graphs\",\r\n                                title_text: \"Graph Algorithms\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"breadth\",\r\n                                        title_text: \"Breadth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"depth\",\r\n                                        title_text: \"Depth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"dijkstra\",\r\n                                        title_text: \"Dijkstra's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"prim\",\r\n                                        title_text: \"Prim's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kruskal\",\r\n                                        title_text: \"Kruskal's\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"dynamic\",\r\n                                title_text: \"Dynamic Programming\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"lcs\",\r\n                                        title_text: \"LCS\"\r\n                                    },\r\n                                    {\r\n                                        link: \"floyd-warshall\",\r\n                                        title_text: \"Floyd-Warshall\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"about\",\r\n                        icon: \"user\",\r\n                        title_text: \"About\",\r\n                    },\r\n                ]} />\r\n            </header>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './app-footer.scss';\r\n\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n            <footer className=\"app-footer\">\r\n                <div className=\"footer-message\">\r\n                    <p>Created using ReactJS by Mudit Gupta for The Georgia Institute of Technology. Updated Feb. 16, 2020.</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './home.scss';\r\n\r\nexport default function Home() {\r\n    return (\r\n            <div className=\"home\">\r\n\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './about.scss';\r\n\r\nexport default function About() {\r\n    return (\r\n            <div className=\"about\">\r\n                <h1>About CS Vis</h1>\r\n                <p>I created this tool to visualize some of the alogirthms I've been learning in my classes.\r\n                Most of these visualizations are inspired by those found at <a href='https://csvistool.com'>csvistool.com</a>.\r\n                I tried to make the UX here as convenient as possible, but I'd love to hear your design input;\r\n                I'm not a front-end person, so I'm doing my best :).</p>\r\n            <p>Check out the <a href='https://github.com/muditg317/cs-vis'>Source Code here</a>!</p>\r\n                <h2>Me!</h2>\r\n                <p>This is something I wanted to make to learn more about these datastructures and algorithms while also learning how to use the ReactJS framework.\r\n                Check out some of my other projects at muditgupta.appspot.com</p>\r\n            </div>\r\n        );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './controlBar.scss';\r\n\r\nexport default class ControlBar extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.defaultContainer = React.createRef();\r\n        this.defaults = React.createRef();\r\n        this.mainContainer = React.createRef();\r\n        this.controlBar = React.createRef();\r\n    }\r\n\r\n    setDefaultsLabel(label) {\r\n        this.defaultsLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    setMainLabel(label) {\r\n        this.mainLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    addDefaultGroup(controlGroup) {\r\n        this.defaults.current.appendChild(controlGroup);\r\n    }\r\n\r\n    addControlGroup(controlGroup) {\r\n        this.controlBar.current.appendChild(controlGroup);\r\n    }\r\n\r\n    testSize() {\r\n        let transformed = 0;\r\n        if (this.controlBar.current.getBoundingClientRect().width\r\n                > (this.mainContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.mainContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.mainContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.mainContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        if (this.defaults.current.getBoundingClientRect().width\r\n                > (this.defaultContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.defaultContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.defaultContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.defaultContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        return transformed;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.testSize();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.testSize();\r\n    }\r\n\r\n    windowResized() {\r\n        return this.testSize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"control-bar\">\r\n                    <div className=\"control-container\" id=\"main-control\" ref={this.mainContainer}>\r\n                        {this.mainLabel && <p className=\"control-label\" id=\"main-control-label\">{this.mainLabel}</p>}\r\n                        <div className=\"controls control-group\"  ref={this.controlBar}></div>\r\n                    </div>\r\n                    <div className=\"control-container\" id=\"default-control\" ref={this.defaultContainer}>\r\n                        {// {this.defaultsLabel && <p className=\"control-label\" id=\"default-control-label\">{this.defaultsLabel}</p>}\r\n                        }\r\n                        <div className=\"controls default control-group\" ref={this.defaults}></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","export function newEmptyControl() {\r\n    let emptyControl = document.createElement(\"input\");\r\n    applyStyle(emptyControl, \"visibility\", \"hidden\");\r\n    return emptyControl;\r\n}\r\n\r\nexport function createControl(type, value) {\r\n    let newControl = document.createElement(\"input\");\r\n    newControl.classList.add(\"visual-control\", type);\r\n\r\n    newControl.setAttribute(\"type\", type);\r\n    if (value) {\r\n        newControl.setAttribute(\"value\", value);\r\n    }\r\n\r\n    return newControl;\r\n};\r\n\r\nexport function createButton(label) {\r\n    let button = createControl(\"button\", label);\r\n\r\n    return button;\r\n};\r\n\r\nexport function createField(prompt, ...validators) {\r\n    let field = createControl(\"text\");\r\n    field.setAttribute(\"placeHolder\", prompt);\r\n\r\n    validators.forEach((validator) => {\r\n        field.addEventListener(\"input\", () => { validator(field); });\r\n    });\r\n\r\n    return field;\r\n};\r\n\r\nexport function validatorIntOnly() {\r\n    return (field) => {\r\n        let regex = /^(-[0-9])?[0-9]*/g;\r\n        field.value = field.value.match(regex).reduce((sum, char) => sum + char);\r\n    }\r\n};\r\n\r\nexport function validatorMaxLength(maxLength) {\r\n    return (field) => {\r\n        if (field.value.length > maxLength) {\r\n            field.value = field.value.substring(0, Math.min(field.value.length, maxLength));\r\n        }\r\n    };\r\n};\r\n\r\nexport function addSubmit(field, callback) {\r\n    if (field.type !== \"text\") {\r\n        console.log(\"cannot add callback to nontextfield\");\r\n        return;\r\n    }\r\n    if (callback === undefined) {\r\n        console.log(\"cannot set field submit to undefined callback\");\r\n        return;\r\n    }\r\n    field.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            // disableControls();\r\n            callback();\r\n        }\r\n    });\r\n};\r\n\r\nexport function createSlider(min, max, defaultValue, step) {\r\n    let slider = createControl(\"range\");\r\n\r\n    slider.setAttribute(\"min\", min);\r\n    slider.setAttribute(\"max\", max);\r\n    slider.setAttribute(\"step\", step === 0 ? \"1e-18\" : step);\r\n    slider.setAttribute(\"defaultValue\", defaultValue);\r\n    slider.value = defaultValue;\r\n\r\n    return slider;\r\n};\r\n\r\n\r\nexport function createControlGroup(id, ...controls) {\r\n    let controlGroup = document.createElement(\"div\");\r\n    controlGroup.setAttribute(\"class\", \"control-group\");\r\n    controlGroup.id = id;\r\n\r\n    controls.forEach((control) => {\r\n        controlGroup.appendChild(control);\r\n    });\r\n\r\n    return controlGroup;\r\n};\r\n\r\nexport function setTabControl(control, nextControl) {\r\n    if (control === undefined || nextControl === undefined) {\r\n        console.log(\"cannot link undefined controls\");\r\n        return;\r\n    }\r\n    enableShift();\r\n    control.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && (window.shifted !== undefined && !window.shifted)) {\r\n            event.preventDefault();\r\n            control.blur();\r\n            nextControl.focus();\r\n        }\r\n    });\r\n    nextControl.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && window.shifted) {\r\n            event.preventDefault();\r\n            nextControl.blur();\r\n            control.focus();\r\n        }\r\n    });\r\n};\r\n\r\nfunction enableShift() {\r\n    if (window.shifted === undefined) {\r\n        window.shifted = false;\r\n        window.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = true;\r\n            }\r\n        });\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = false;\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport function applyStyle(control, styleType, value) {\r\n    control.style[styleType] = value;\r\n}\r\n","export function addArray(array, ...arrays) {\r\n    let newArr = [...array];\r\n    arrays.forEach(array => {\r\n        array.forEach((item, i) => {\r\n            newArr[i] += item;\r\n        });\r\n    });\r\n    return newArr;\r\n}\r\n\r\nexport function isDev() {\r\n    return !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n}\r\n","export default class AnimatedObject {\r\n    constructor() {\r\n        this.xProgress = 1;\r\n        this.yProgress = 1;\r\n        // this.translationFrames = 0;\r\n\r\n        // this.animating = false;\r\n        this.direction = 0;\r\n    }\r\n\r\n    travel(direction) {\r\n        this.xProgress = 0;\r\n        this.yProgress = 0;\r\n        this.direction = direction;\r\n    }\r\n\r\n    inPosition() {\r\n        return this.direction >= 0\r\n                ? this.xProgress >= 1 && this.yProgress >= 1\r\n                : this.xProgress <= -1 && this.yProgress <= -1;\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        if (!this.inPosition()) {\r\n            // this.animating = true;\r\n            this.xProgress += Math.sign(this.direction) * animationSpeed/200;\r\n            this.yProgress += Math.sign(this.direction) * animationSpeed/200;\r\n        } else {\r\n            // this.animating = false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","export default class AttractedDraggableObject {\r\n\r\n    static ATTRACTION = 0.3;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    constructor(x,y) {\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n        this.onStop = [];\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    pin(mouseX, mouseY) {\r\n        if (this.constructor.CAN_DRAG) {\r\n            if (!this.frozen) {\r\n                this.pinnedToMouse = true;\r\n                this.mouseOffsetX = mouseX - this.currentX;\r\n                this.mouseOffsetY = mouseY - this.currentY;\r\n            }\r\n        }\r\n    }\r\n\r\n    unpin() {\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if (this.pinnedToMouse) {\r\n            this.currentX = p5.mouseX - this.mouseOffsetX;\r\n            this.currentY = p5.mouseY - this.mouseOffsetY;\r\n        } else if (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy)) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedDraggableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx += magnitude * Math.cos(angle);\r\n                this.vy += magnitude * Math.sin(angle);\r\n\r\n                this.vx *= 0.75;\r\n                this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n}\r\n","export default class Animator {\r\n    constructor() {\r\n        this.events = [];\r\n\r\n        this.objects = [];\r\n        this.connectingEdges = [];\r\n\r\n\r\n    }\r\n\r\n    on(type, callback) {\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push(callback);\r\n    }\r\n\r\n    off(type, callback) {\r\n        if (this.events[type]) {\r\n            this.events[type] = this.events[type].filter( event => {\r\n                return event !== callback;\r\n            });\r\n        }\r\n    }\r\n\r\n    emit(type) {\r\n        if (this.events[type]) {\r\n            this.events[type].forEach( event => {\r\n                event();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\n\r\nexport default class Visualization {\r\n    constructor(animator) {\r\n\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    doneAnimating(time = 250) {\r\n        if (time === 0) {\r\n            this.animating = false;\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this.animating = false;\r\n        }, time);\r\n    }\r\n\r\n    update(callForward, animationSpeed, p5) {\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n        callForward();\r\n        this.popAnimation(animationSpeed);\r\n    }\r\n\r\n    popAnimation(animationSpeed) {\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                animation.method.apply(animation.scope || this, animation.params);\r\n                if (this.constructor.SUPPORTS_CUSTOM_END) {\r\n                    if (!animation.customEnd) {\r\n                        if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                            this.animating = false;\r\n                        } else {\r\n                            this.doneAnimating(this.constructor.MAX_ANIM_TIME / animationSpeed);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        return true;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        return true;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars, maxY) {\r\n        height -= numScrollbars * 16;\r\n        let width = p5.windowWidth;\r\n        if (maxY > (height - (2*this.y))) {\r\n            height = (maxY + (3*this.y))\r\n            if (!document.querySelector(\".canvas-container\").classList.contains(\"mobile\")) {\r\n                width -= 16;\r\n            }\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AnimatedObject from 'animation/AnimatedObject';\r\n\r\nexport default class ArrayList extends Visualization {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            animation.push(...this.doubleSize());\r\n        }\r\n        if (index < this.size) {\r\n            animation.push(...this.shiftForIndex(index));\r\n        }\r\n        animation.push({method:this.setIndex,params:[index,data,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        let element = this.backingArray[index];\r\n        let data = element.data;\r\n        element.data = \"\";\r\n        if (index < this.size - 1) {\r\n            animation.push(...this.shiftIntoIndex(index));\r\n        }\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.backingArray = {};\r\n        this.backingArray.length = ArrayList.INITIAL_CAPACITY;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            this.backingArray[i] = new ArrayElement(\"\");\r\n        }\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    setIndex(index,data) {\r\n        this.backingArray[index].data = data;\r\n    }\r\n\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    doubleSize() {\r\n        let animation = []\r\n        let prevCapacity = this.backingArray.length;\r\n        for (let i = prevCapacity; i < this.backingArray.length * 2; i++) {\r\n            animation.push({method:this.resetElement,params:[i,],});\r\n        }\r\n        animation.push({method:this.incrLength,params:[],});\r\n        return animation;\r\n    }\r\n\r\n    incrLength() {\r\n        this.backingArray.length = 2 * this.backingArray.length;\r\n    }\r\n\r\n    shiftForIndex(index) {\r\n        let animation = []\r\n        for (let i = this.size - 1; i >= index; i--) {\r\n            animation.push(...this.shiftElement(i,1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[index,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftIntoIndex(index) {\r\n        let animation = [];\r\n        for (let i = index + 1; i < this.size; i++) {\r\n            animation.push(...this.shiftElement(i,-1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[this.size-1,],});\r\n    }\r\n\r\n    shiftElement(index, direction) {\r\n        let animation = [];\r\n        animation.push({method:this.shiftElementMovement,params:[index,direction,],});\r\n        animation.push({method:this.shiftElementIndex,params:[index,direction,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftElementMovement(index, direction) {\r\n        this.backingArray[index].shift(direction);\r\n        // console.log(\"move\",index,JSON.stringify(this.backingArray));\r\n    }\r\n\r\n    shiftElementIndex(index, direction) {\r\n        // console.log(\"index\",index,JSON.stringify(this.backingArray));\r\n        // console.log(index+direction, this.backingArray[index].data);\r\n        this.backingArray[index+direction].data = this.backingArray[index].data;\r\n        this.backingArray[index].data = \"\";\r\n    }\r\n\r\n\r\n    resetElement(index) {\r\n        if (this.backingArray[index]) {\r\n            this.backingArray[index].data = \"\";\r\n        } else {\r\n            this.backingArray[index] = new ArrayElement(\"\", ArrayList.ELEMENT_SIZE);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                if (this.backingArray[i]) {\r\n                    this.backingArray[i].update(animationSpeed);\r\n                }\r\n            }\r\n            let foundAnimElement = false;\r\n            for (let i = 0; i < this.size; i++) {\r\n                if (!this.backingArray[i].inPosition()) {\r\n                    foundAnimElement = true;\r\n                    break;\r\n                }\r\n            }\r\n            this.animating = foundAnimElement;\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        let maxPerRow = Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE);\r\n        let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        p5.push();\r\n        p5.translate(this.x,this.y);\r\n\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            p5.noStroke();\r\n            p5.fill(200);\r\n            p5.rect(ArrayList.ELEMENT_SIZE/10,ArrayList.ELEMENT_SIZE/10 + (2 * ArrayList.ELEMENT_SIZE * row),ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE/20);\r\n\r\n            p5.stroke(0);\r\n            p5.fill(255);\r\n            p5.rect(0,(2 * ArrayList.ELEMENT_SIZE * row), ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE);\r\n        }\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(ArrayList.ELEMENT_SIZE/3 - 2);\r\n\r\n        let i = 0;\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            let x = 0;\r\n            let y = 2 * row * ArrayList.ELEMENT_SIZE;\r\n            for (let block = 0; block < numElements; block++) {\r\n                p5.stroke(0);\r\n                p5.line(x,y, x, y+ArrayList.ELEMENT_SIZE);\r\n\r\n                p5.noStroke();\r\n                p5.fill(0,0,255);\r\n                p5.text(i.toString(), x,y+ArrayList.ELEMENT_SIZE, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n\r\n                let element = this.backingArray[i++];\r\n                let nextX = block < (numElements - 1) ? x + ArrayList.ELEMENT_SIZE : 0;\r\n                let nextY = block < (numElements - 1) ? y : (y + (ArrayList.ELEMENT_SIZE*2));\r\n                if (element.data) {\r\n                    element.draw(p5, x,y,nextX,nextY);\r\n                }\r\n                x = nextX;\r\n                y = nextY;\r\n                if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - ArrayList.ELEMENT_SIZE) {\r\n                    // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (Math.ceil(this.backingArray.length / (Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE))))*2*ArrayList.ELEMENT_SIZE);\r\n    }\r\n}\r\n\r\n\r\nclass ArrayElement extends AnimatedObject {\r\n    constructor(data) {\r\n        super();\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    shift(direction) {\r\n        super.travel(direction);\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        super.update(animationSpeed);\r\n    }\r\n\r\n\r\n    draw(p5, x,y, toX,toY) {\r\n        p5.push();\r\n        p5.fill(0);\r\n        p5.stroke(50);\r\n        if (!this.inPosition()) {\r\n            let posX = (toX-x)*this.xProgress + x;\r\n            let posY = (toY-y)*this.yProgress + y;\r\n            p5.text(this.data.toString(), posX,posY, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n        } else {\r\n            p5.text(this.data.toString(), x,y, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE)\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class SinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = SinglyLinkedList.ITEM_WIDTH + SinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node = null;\r\n        let nextNode = this.head;\r\n        for (let i = 0; i < index; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n            node = nextNode;\r\n            nextNode = nextNode.next;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[node,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else {\r\n            let node = this.head;\r\n            animation.push({method:this.moveHighlight,params:[null,node,],});\r\n            for (let i = 0; i < index - 1; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                node = node.next;\r\n            }\r\n            prev = node;\r\n            toDelete = prev.next;\r\n            next = toDelete.next;\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new SinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE));\r\n        let x = SinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * SinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * SinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + SinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass SinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + SinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + SinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, SinglyLinkedList.ITEM_WIDTH, SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, SinglyLinkedList.ELEMENT_WIDTH,SinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ITEM_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DoublyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DoublyLinkedList.ELEMENT_WIDTH + 2 * DoublyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_PADDED_WIDTH = DoublyLinkedList.ITEM_WIDTH + DoublyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node;\r\n        let nextNode;\r\n        let highlighted;\r\n        if (index < this.size / 2) {\r\n            node = null;\r\n            nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            highlighted = node;\r\n        } else {\r\n            node = this.tail;\r\n            nextNode = null;\r\n            for (let i = this.size - 1; i > index-1; i--) {\r\n                animation.push({method:this.moveHighlight,params:[nextNode,node,],});\r\n                nextNode = node;\r\n                node = node.prev;\r\n            }\r\n            highlighted = nextNode;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[highlighted,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else if (index === this.size - 1) {\r\n            next = null;\r\n            toDelete = this.tail;\r\n            prev = toDelete.prev;\r\n        } else {\r\n            if (index < this.size / 2) {\r\n                let node = this.head;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = 0; i < index; i++) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                    node = node.next;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            } else {\r\n                let node = this.tail;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = this.size - 1; i > index; i--) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.prev,],});\r\n                    node = node.prev;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            }\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[toDelete,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNodePrev,params:[prev,],});\r\n        animation.push({method:this.skipTempNodeNext,params:[next,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new DoublyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n        if (next) {\r\n            next.prev = this.tempNode;\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        }\r\n        this.tempNode.prev = prev;\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        if (index === this.size) {\r\n            this.tail = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n    }\r\n\r\n    skipTempNodeNext(next) {\r\n        if (next) {\r\n            next.prev = this.tempNode.prev;\r\n        } else {\r\n            this.tail = this.tail.prev;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH));\r\n        let x = DoublyLinkedList.ELEMENT_PADDED_WIDTH * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DoublyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DoublyLinkedList.ELEMENT_PADDED_WIDTH;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + DoublyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass DoublyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n        this.prev = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DoublyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DoublyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DoublyLinkedList.ITEM_WIDTH, DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX + DoublyLinkedList.POINTER_WIDTH,this.currentY, DoublyLinkedList.ELEMENT_WIDTH,DoublyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.prev) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, this.prev.currentX + DoublyLinkedList.ITEM_WIDTH, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3)\r\n            p5.rect(this.prev.currentX + DoublyLinkedList.ITEM_WIDTH - 3, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, this.next.currentX, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3 - 3, 6,6);\r\n        } else {\r\n            p5.stroke(...this.color);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.ITEM_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class CircularSinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = CircularSinglyLinkedList.ITEM_WIDTH + CircularSinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            if (this.size > 1) {\r\n                index = 1;\r\n            }\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        if (index === 0) {\r\n            animation.push({method:this.reset,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction = 0) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE));\r\n        let x = CircularSinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * CircularSinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * CircularSinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.pinnedNode.markBroken();\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            if (this.pinnedNode.index === 0 && this.size > 1) {\r\n                this.animationQueue.push({method:this.pinnedNode.unfreeze,scope:this.pinnedNode,params:[],});\r\n                this.animationQueue.push({method:this.shiftNode,params:[this.pinnedNode,],});\r\n            }\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    touchMoved(p5) {\r\n        return this.pinnedNode === null;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + CircularSinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.handBroken = false;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, CircularSinglyLinkedList.ITEM_WIDTH, CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, CircularSinglyLinkedList.ELEMENT_WIDTH,CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ITEM_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class StackArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = StackArray.ELEMENT_WIDTH + StackArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = StackArray.ITEM_WIDTH + StackArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / StackArray.ELEMENT_SIZE);\r\n        let x = StackArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * StackArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * StackArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + StackArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + StackArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + StackArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > StackArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > StackArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, StackArray.ITEM_WIDTH, StackArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + StackArray.ELEMENT_WIDTH, this.currentY, this.currentX + StackArray.ELEMENT_WIDTH, this.currentY + StackArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, StackArray.ELEMENT_WIDTH,StackArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + StackArray.ELEMENT_WIDTH + StackArray.POINTER_WIDTH / 2, this.currentY + StackArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + StackArray.ELEMENT_WIDTH + StackArray.POINTER_WIDTH / 2, this.currentY + StackArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + StackArray.ELEMENT_WIDTH + StackArray.POINTER_WIDTH / 2, this.currentY + StackArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + StackArray.ELEMENT_WIDTH + StackArray.POINTER_WIDTH / 2, this.currentY + StackArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + StackArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + StackArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + StackArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + StackArray.ELEMENT_WIDTH + StackArray.POINTER_WIDTH / 2, this.currentY + StackArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + StackArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + StackArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + StackArray.ELEMENT_WIDTH, this.currentY, this.currentX + StackArray.ITEM_WIDTH, this.currentY + StackArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueArray.ITEM_WIDTH + QueueArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueArray.ELEMENT_SIZE);\r\n        let x = QueueArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueArray.ITEM_WIDTH, QueueArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueArray.ELEMENT_WIDTH,QueueArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ITEM_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeArray.ITEM_WIDTH + DequeArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeArray.ELEMENT_SIZE);\r\n        let x = DequeArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeArray.ITEM_WIDTH, DequeArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeArray.ELEMENT_WIDTH,DequeArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ITEM_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class StackLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = StackLinkedList.ITEM_WIDTH + StackLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / StackLinkedList.ELEMENT_SIZE);\r\n        let x = StackLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * StackLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * StackLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + StackLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + StackLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + StackLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > StackLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > StackLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, StackLinkedList.ITEM_WIDTH, StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, StackLinkedList.ELEMENT_WIDTH,StackLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + StackLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ITEM_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueLinkedList.ITEM_WIDTH + QueueLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueLinkedList.ELEMENT_SIZE);\r\n        let x = QueueLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueLinkedList.ITEM_WIDTH, QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueLinkedList.ELEMENT_WIDTH,QueueLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ITEM_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeLinkedList.ITEM_WIDTH + DequeLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeLinkedList.ELEMENT_SIZE);\r\n        let x = DequeLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeLinkedList.ITEM_WIDTH, DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeLinkedList.ELEMENT_WIDTH,DequeLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ITEM_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport Sketch from 'react-p5';\r\nimport './visualizer.scss';\r\n\r\nimport ControlBar from './controlBar';\r\n\r\nimport { ControlBuilder, Utils } from 'utils';\r\nimport { Animator } from 'animation';\r\n\r\nexport default class Visualizer extends PureComponent {\r\n\r\n    static INITIAL_SPEED = 50;\r\n    static MAX_SPEED = 20;\r\n    static SPEED_SLIDER_DEGREE = 1.5;\r\n\r\n    static maxAnimationSpeed() {\r\n        return Math.pow(Visualizer.MAX_SPEED, Visualizer.SPEED_SLIDER_DEGREE);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.setup = this.setup.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.mousePressed = this.mousePressed.bind(this);\r\n        this.touchMoved = this.touchMoved.bind(this);\r\n        this.mouseReleased = this.mouseReleased.bind(this);\r\n        this.windowResized = this.windowResized.bind(this);\r\n\r\n\r\n        this.controlBarRef = React.createRef();\r\n\r\n        this.controlGroups = [];\r\n        this.controls = [];\r\n\r\n        this.state = {\r\n            animationSpeed: Visualizer.INITIAL_SPEED,\r\n        }\r\n\r\n        this.onAnimStart = this.onAnimStart.bind(this);\r\n        this.onAnimEnd = this.onAnimEnd.bind(this);\r\n        this.animating = false;\r\n\r\n        this.focusedElement = null;\r\n\r\n        this.animator = new Proxy(new Animator(), {\r\n            get: function (target, propertyName, receiver) {\r\n                if (!target[propertyName]) {\r\n                    return () => target.emit(propertyName);\r\n                } else {\r\n                    return target[propertyName];\r\n                }\r\n            }\r\n        });\r\n        this.animator.on(\"anim-start\", this.onAnimStart);\r\n        this.animator.on(\"anim-end\", this.onAnimEnd);\r\n\r\n        this.addDefaultControls();\r\n    }\r\n\r\n    addDefaultControls() {\r\n        this.speedSlider = ControlBuilder.createSlider(1, Visualizer.MAX_SPEED, Math.pow(Visualizer.INITIAL_SPEED,1/Visualizer.SPEED_SLIDER_DEGREE), 0);\r\n        this.defaultControlGroup = ControlBuilder.createControlGroup(\"default\", this.speedSlider);\r\n        this.defaultsLabel = \"Animation controls\";\r\n    }\r\n\r\n    addControlLabel(label) {\r\n        this.mainLabel = label;\r\n    }\r\n\r\n    addControlGroups(...controlGroups) {\r\n        // console.log(\"control added\");\r\n        this.controlGroups.push(...controlGroups);\r\n        controlGroups.forEach((controlGroup) => {\r\n            if (controlGroup.tagName === \"INPUT\") {\r\n                this.controls.push(controlGroup);\r\n            } else {\r\n                this.registerControlGroup(controlGroup);\r\n            }\r\n        });\r\n    }\r\n\r\n    registerControlGroup(controlGroup) {\r\n        controlGroup.childNodes.forEach((child) => {\r\n            if (child.tagName === \"INPUT\") {\r\n                this.controls.push(child);\r\n            } else {\r\n                this.registerControlGroup(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    onAnimStart() {\r\n        this.disableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            this.animator.loop();\r\n        }\r\n        this.animating = true;\r\n    }\r\n\r\n    onAnimEnd() {\r\n        this.enableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            this.animator.noLoop();\r\n        }\r\n        this.animating = false;\r\n    }\r\n\r\n    disableUI() {\r\n        // console.log(\"disable\");\r\n        this.controls.forEach((control) => {\r\n            if (control === document.activeElement) {\r\n                this.focusedElement = control;\r\n            }\r\n            control.disabled = true;\r\n        });\r\n    }\r\n\r\n    enableUI() {\r\n        // console.log(\"enable\");\r\n        this.controls.forEach((control) => {\r\n            control.disabled = false;\r\n            if (control === this.focusedElement) {\r\n                control.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        callForward();\r\n        if (Utils.isDev()) {\r\n            window[this.class] = this.visualization;\r\n        }\r\n        this.controlBar = this.controlBarRef.current;\r\n        this.controlBar.setMainLabel(this.mainLabel);\r\n        this.controlBar.setDefaultsLabel(this.defaultsLabel);\r\n        this.controlBar.addDefaultGroup(this.defaultControlGroup);\r\n        this.controlGroups.forEach((controlGroup, i) => {\r\n            this.controlBar.addControlGroup(controlGroup);\r\n        });\r\n    }\r\n\r\n    setup(p5, canvasParentRef) {\r\n        // let width = this.controlBar.controlBar.current.getBoundingClientRect().width;\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n\r\n        this.mobile = window.ontouchstart !== undefined;\r\n        if (this.mobile) {\r\n            height = 1000;\r\n            // document.querySelector(\".canvas-container\").style.height = height + \"px\";\r\n            document.querySelector(\".canvas-container\").classList.add(\"mobile\");\r\n        }\r\n\r\n        //config\r\n        let canvas = p5.createCanvas(p5.windowWidth\r\n            ,height);\r\n        canvas.parent(canvasParentRef);\r\n        //\r\n        // canvas.touchStarted((event) => {\r\n        //     console.log(\"touchdown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         event.preventDefault();\r\n        //     }\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchMoved((event) => {\r\n        //     console.log(\"touchmove\");\r\n        //     if (!this.touchMoved(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        //     return true;\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchEnded(() => {\r\n        //     console.log(\"touchup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // canvas.mousePressed(() => {\r\n        //     console.log(\"mousedown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        // });\r\n        // canvas.mouseReleased(() => {\r\n        //     console.log(\"mouseup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // p5.background(200);\r\n        // p5.frameRate(8);\r\n\r\n        //objects\r\n        // this.state.visualization = new ArrayList();\r\n        // window.visualization = this.state.visualization;\r\n        // this.setState({isSetup: true,});\r\n        //\r\n        document.addEventListener(\"resize\", (event) => {\r\n            console.log(\"resize\");\r\n        });\r\n        this.animator.on(\"noLoop\", () => {\r\n            p5.noLoop();\r\n        });\r\n        this.animator.on(\"loop\", () => {\r\n            p5.loop();\r\n        });\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            this.animator.noLoop();\r\n        }\r\n    }\r\n    draw(p5) {\r\n        //inputs\r\n        this.setState({animationSpeed: Math.pow(this.speedSlider.value,Visualizer.SPEED_SLIDER_DEGREE)});\r\n\r\n        p5.background(255);\r\n\r\n        //objects\r\n        this.visualization.update(this.state.animationSpeed, p5);\r\n        this.visualization.draw(p5);\r\n        // if (!this.animating) {\r\n        //     if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n        //         this.animator.noLoop();\r\n        //     }\r\n        // }\r\n    }\r\n    mousePressed(p5) {\r\n        if (this.visualization.mousePressed) {\r\n            // console.log(\"down\");\r\n            let pressed = this.visualization.mousePressed(p5);\r\n            // console.log(pressed);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    touchMoved(p5) {\r\n        if (this.visualization.touchMoved) {\r\n            // console.log(\"move\");\r\n            return this.visualization.touchMoved();\r\n        }\r\n        return true;\r\n    }\r\n    mouseReleased(p5) {\r\n        if (this.visualization.mouseReleased) {\r\n            // console.log(\"up\");\r\n            let released = this.visualization.mouseReleased(p5);\r\n            // console.log(released);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    windowResized(p5) {\r\n        //config\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n        if (this.mobile) {\r\n            // height = 1000;\r\n        }\r\n        // height = document.querySelector(\".react-p5\").getBoundingClientRect().height;\r\n        document.querySelector(\".canvas-container\").style.height = height+\"px\";\r\n        height = document.querySelector(\".canvas-container\").getBoundingClientRect().height;\r\n        // console.log(height);\r\n        // p5.resizeCanvas(p5.windowWidth, p5.height);\r\n\r\n        //objects\r\n        let numScrollbars = this.controlBar.windowResized();\r\n        this.visualization.windowResized(p5, height, numScrollbars);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div className={`visualizer ${this.class}`}>\r\n                    <ControlBar ref={this.controlBarRef}/>\r\n                    {\r\n                        this.constructor.VISUALIZATION_CLASS.USE_CANVAS ?\r\n                                <div className=\"canvas-container\">\r\n                                    <Sketch setup={this.setup} draw={this.draw} windowResized={this.windowResized} mousePressed={this.mousePressed} mouseReleased={this.mouseReleased} touchStarted={this.mousePressed} touchEnded={this.mouseReleased} touchMoved={this.touchMoved}/>\r\n                                </div>\r\n                            :\r\n                                <this.visualization.VISUALIZATION_CLASS />\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class ListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.list;\r\n        });\r\n    }\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { ArrayList } from 'animation';\r\nimport './arraylist.scss';\r\n\r\n\r\nexport default class ArrayListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = ArrayList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'arraylist';\r\n        super.addControlLabel(\"ArrayList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new ArrayList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { SinglyLinkedList } from 'animation';\r\nimport './singly-linked-list.scss';\r\n\r\n\r\nexport default class SinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = SinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'singlylinkedlist';\r\n        super.addControlLabel(\"SinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new SinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { DoublyLinkedList } from 'animation';\r\nimport './doubly-linked-list.scss';\r\n\r\n\r\nexport default class DoublyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = DoublyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'doublylinkedlist';\r\n        super.addControlLabel(\"DoublyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new DoublyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { CircularSinglyLinkedList } from 'animation';\r\nimport './circular-singly-linked-list.scss';\r\n\r\nexport default class CircularSinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = CircularSinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'circularsinglylinkedlist';\r\n        super.addControlLabel(\"CircularSinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new CircularSinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './lists.scss';\r\n\r\nimport ArrayListVisualizer from './arraylist';\r\nimport SinglyLinkedListVisualizer from './singly-linked-list';\r\nimport DoublyLinkedListVisualizer from './doubly-linked-list';\r\nimport CircularSinglyLinkedListVisualizer from './circular-singly-linked-list';\r\n\r\nexport default function Lists(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <ListView url={url} />} />\r\n                <Route path={`${path}/arraylist`} component={ArrayListVisualizer} />\r\n                <Route path={`${path}/sll`} component={SinglyLinkedListVisualizer} />\r\n                <Route path={`${path}/dll`} component={DoublyLinkedListVisualizer} />\r\n                <Route path={`${path}/c-sll`} component={CircularSinglyLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction ListView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <h1 id=\"title\">Lists</h1>\r\n                <div className=\"links\">\r\n                    <Link to={`${path}/arraylist`}>ArrayList</Link>\r\n                    <Link to={`${path}/sll`}>SinglyLinkedList</Link>\r\n                    <Link to={`${path}/dll`}>DoublyLinkedList</Link>\r\n                    <Link to={`${path}/c-sll`}>CircularSinglyLinkedList</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class StackVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.pushButtonCallback = this.pushButtonCallback.bind(this);\r\n        this.popButtonCallback = this.popButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.stack = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.pushButton = ControlBuilder.createButton(\"push\");\r\n        this.pushButton.addEventListener(\"click\",this.pushButtonCallback);\r\n\r\n        this.popButton = ControlBuilder.createButton(\"pop\");\r\n        this.popButton.addEventListener(\"click\",this.popButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.pushButton, this.popButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.stack;\r\n        });\r\n    }\r\n\r\n\r\n    pushButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    popButtonCallback() {\r\n        this.stack.pop();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.stack.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.stack.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class QueueVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.enqueueButtonCallback = this.enqueueButtonCallback.bind(this);\r\n        this.dequeueButtonCallback = this.dequeueButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.queue = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.enqueueButton = ControlBuilder.createButton(\"enqueue\");\r\n        this.enqueueButton.addEventListener(\"click\",this.enqueueButtonCallback);\r\n\r\n        this.dequeueButton = ControlBuilder.createButton(\"dequeue\");\r\n        this.dequeueButton.addEventListener(\"click\",this.dequeueButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.enqueueButton, this.dequeueButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.queue;\r\n        });\r\n    }\r\n\r\n\r\n    enqueueButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeueButtonCallback() {\r\n        this.queue.dequeue();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.queue.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.queue.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class DequeVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addLastButtonCallback = this.addLastButtonCallback.bind(this);\r\n        this.addFirstButtonCallback = this.addFirstButtonCallback.bind(this);\r\n        this.removeFirstButtonCallback = this.removeFirstButtonCallback.bind(this);\r\n        this.removeLastButtonCallback = this.removeLastButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.deque = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.addLastButton = ControlBuilder.createButton(\"addLast (enqueue)\");\r\n        this.addLastButton.addEventListener(\"click\",this.addLastButtonCallback);\r\n\r\n        this.addFirstButton = ControlBuilder.createButton(\"addFirst (push)\");\r\n        this.addFirstButton.addEventListener(\"click\",this.addFirstButtonCallback);\r\n\r\n        this.removeFirstButton = ControlBuilder.createButton(\"removeFirst (dequeue/pop)\");\r\n        this.removeFirstButton.addEventListener(\"click\",this.removeFirstButtonCallback);\r\n\r\n        this.removeLastButton = ControlBuilder.createButton(\"removeLast\");\r\n        this.removeLastButton.addEventListener(\"click\",this.removeLastButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addButtonGroup = ControlBuilder.createControlGroup(\"addButtons\", this.addFirstButton, this.addLastButton);\r\n        let removeButtonGroup = ControlBuilder.createControlGroup(\"removeButtons\", this.removeFirstButton, this.removeLastButton);\r\n        let interactionGroup = ControlBuilder.createControlGroup(\"interactions\", this.valueField, addButtonGroup, removeButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(interactionGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.deque;\r\n        });\r\n    }\r\n\r\n\r\n    addLastButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addFirstButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addFirst(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFirstButtonCallback() {\r\n        this.deque.removeFirst();\r\n    }\r\n\r\n    removeLastButtonCallback() {\r\n        this.deque.removeLast();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.deque.reset();\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackArray } from 'animation';\r\nimport './stack-array.scss';\r\n\r\n\r\nexport default class StackArrayVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-array';\r\n        super.addControlLabel(\"Stack (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueArray } from 'animation';\r\nimport './queue-array.scss';\r\n\r\n\r\nexport default class QueueArrayVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-array';\r\n        super.addControlLabel(\"Queue (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeArray } from 'animation';\r\nimport './deque-array.scss';\r\n\r\n\r\nexport default class DequeArrayVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-array';\r\n        super.addControlLabel(\"Deque (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackLinkedList } from 'animation';\r\nimport './stack-linked-list.scss';\r\n\r\n\r\nexport default class StackLinkedListVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-linkedlist';\r\n        super.addControlLabel(\"Stack (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueLinkedList } from 'animation';\r\nimport './queue-linked-list.scss';\r\n\r\n\r\nexport default class QueueLinkedListVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-linkedlist';\r\n        super.addControlLabel(\"Queue (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeLinkedList } from 'animation';\r\nimport './deque-linked-list.scss';\r\n\r\n\r\nexport default class DequeLinkedListVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-linkedlist';\r\n        super.addControlLabel(\"Deque (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './stacks-queues-deques.scss';\r\n\r\nimport StackArrayVisualizer from './stack-array';\r\nimport QueueArrayVisualizer from './queue-array';\r\nimport DequeArrayVisualizer from './deque-array';\r\nimport StackLinkedListVisualizer from './stack-linked-list';\r\nimport QueueLinkedListVisualizer from './queue-linked-list';\r\nimport DequeLinkedListVisualizer from './deque-linked-list';\r\n\r\nexport default function StacksQueuesDeques(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <StackQueueDequeView url={url} />} />\r\n                <Route path={`${path}/stack-array`} component={StackArrayVisualizer} />\r\n                <Route path={`${path}/queue-array`} component={QueueArrayVisualizer} />\r\n                <Route path={`${path}/deque-array`} component={DequeArrayVisualizer} />\r\n                <Route path={`${path}/stack-linkedlist`} component={StackLinkedListVisualizer} />\r\n                <Route path={`${path}/queue-linkedlist`} component={QueueLinkedListVisualizer} />\r\n                <Route path={`${path}/deque-linkedlist`} component={DequeLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction StackQueueDequeView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <Link to={`${path}/stack-array`}>StackArray</Link>\r\n                <Link to={`${path}/queue-array`}>QueueArray</Link>\r\n                <Link to={`${path}/deque-array`}>DequeArray</Link>\r\n                <Link to={`${path}/stack-linkedlist`}>StackLinkedList</Link>\r\n                <Link to={`${path}/queue-linkedlist`}>QueueLinkedList</Link>\r\n                <Link to={`${path}/deque-linkedlist`}>DequeLinkedList</Link>\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport './datastructures.scss';\r\n\r\nimport Lists from 'components/lists';\r\nimport StacksQueuesDeques from 'components/stacks-queues-deques'\r\n\r\nexport default function DataStructures() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <DataStructureView url={url} />} />\r\n                <Route path={`${path}/lists`} component={Lists} />\r\n                <Route path={`${path}/stacks-queues-deques`} component={StacksQueuesDeques} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction DataStructureView(props) {\r\n    return (\r\n            <div className=\"datastructure-view\">\r\n            </div>\r\n        );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainComponent from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<MainComponent />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport './app.scss';\r\nimport './universal.scss';\r\n\r\nimport AppHeader from './app-header';\r\nimport AppFooter from './app-footer';\r\nimport Home from 'components/home';\r\nimport About from 'components/about';\r\nimport DataStructures from 'components/datastructures';\r\n\r\nexport default function App() {\r\n    return (\r\n            <HashRouter basename='/'>\r\n                <div className=\"app\">\r\n                    <AppHeader />\r\n                    <div className=\"app-content\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/datastructures\" component={DataStructures} />\r\n                        </Switch>\r\n                    </div>\r\n                    <AppFooter />\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n}\r\n"],"sourceRoot":""}