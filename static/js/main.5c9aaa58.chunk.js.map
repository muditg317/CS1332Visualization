{"version":3,"sources":["res/images/logo.svg","components/app/nav-bar/nav-bar.jsx","components/app/app-header/app-header.jsx","components/app/app-footer/app-footer.jsx","components/home/home.jsx","components/about/about.jsx","components/visualizer/controlBar/controlBar.jsx","utils/ControlBuilder.js","utils/Colors.js","utils/Utils.js","animation/AnimatedObject.js","animation/AttractedDraggableObject.js","animation/AttractedHighlightableObject.js","animation/Animator.js","animation/Visualization.js","animation/ArrayList/ArrayList.js","animation/SinglyLinkedList/SinglyLinkedList.js","animation/DoublyLinkedList/DoublyLinkedList.js","animation/CircularSinglyLinkedList/CircularSinglyLinkedList.js","animation/StackArray/StackArray.js","animation/QueueArray/QueueArray.js","animation/DequeArray/DequeArray.js","animation/StackLinkedList/StackLinkedList.js","animation/QueueLinkedList/QueueLinkedList.js","animation/DequeLinkedList/DequeLinkedList.js","components/visualizer/visualizer.jsx","components/lists/list-ADT.jsx","components/lists/arraylist/arraylist.jsx","components/lists/singly-linked-list/singly-linked-list.jsx","components/lists/doubly-linked-list/doubly-linked-list.jsx","components/lists/circular-singly-linked-list/circular-singly-linked-list.jsx","components/lists/lists.jsx","components/stacks-queues-deques/stack-ADT.jsx","components/stacks-queues-deques/queue-ADT.jsx","components/stacks-queues-deques/deque-ADT.jsx","components/stacks-queues-deques/stack-array/stack-array.jsx","components/stacks-queues-deques/queue-array/queue-array.jsx","components/stacks-queues-deques/deque-array/deque-array.jsx","components/stacks-queues-deques/stack-linked-list/stack-linked-list.jsx","components/stacks-queues-deques/queue-linked-list/queue-linked-list.jsx","components/stacks-queues-deques/deque-linked-list/deque-linked-list.jsx","components/stacks-queues-deques/stacks-queues-deques.jsx","components/datastructures/datastructures.jsx","serviceWorker.js","index.js","components/app/app.jsx"],"names":["module","exports","NavBar","props","state","responsive","selfRef","React","createRef","handleDocumentClick","bind","clear","document","body","scrollTop","documentElement","this","setState","addEventListener","removeEventListener","event","current","contains","target","scrollToTop","id","className","ref","to","window","location","href","substring","indexOf","length","src","logo","alt","nav_items","map","nav_item","key","link","content","container","onClick","toggleResponsiveNav","Component","NavBarItem","icon","title_text","drop_down_items","showDropDown","show","setShowDropDown","parentRef","parent","items","parentRoute","NavBarItemTitle","parentNavItem","onMouseDown","containingNavItemRef","e","nativeEvent","which","hash","NavBarDropDown","drop_down_item","NavBarDropDownItem","side_pane_items","showSidePane","toggleShowSidePane","setShowSidePane","NavBarDropDownItemTitle","parentDropDownItem","containingDropDownItemRef","NavBarSidePane","side_pane_item","NavBarSideItem","AppHeader","AppFooter","Home","About","ControlBar","defaultContainer","defaults","mainContainer","controlBar","label","defaultsLabel","forceUpdate","mainLabel","controlGroup","appendChild","transformed","getBoundingClientRect","width","parseFloat","getComputedStyle","getPropertyValue","classList","add","remove","testSize","PureComponent","newEmptyControl","emptyControl","createElement","applyStyle","createControl","type","value","newControl","setAttribute","createButton","createField","prompt","field","validators","forEach","validator","createLabel","text","control","newLabel","innerHTML","validatorIntOnly","match","reduce","sum","char","validatorMaxLength","maxLength","Math","min","addSubmit","callback","undefined","console","log","createSlider","max","defaultValue","step","slider","createControlGroup","controls","setTabControl","nextControl","shifted","preventDefault","blur","focus","styleType","style","RED","GREEN","BLUE","BLACK","WHITE","addArray","array","newArr","arrays","item","i","isDev","process","AnimatedObject","xProgress","yProgress","direction","animationSpeed","inPosition","sign","AttractedDraggableObject","x","y","currentX","currentY","desiredX","desiredY","vx","vy","frozen","onStop","pinnedToMouse","mouseOffsetX","mouseOffsetY","sqrt","pow","push","shift","mouseX","mouseY","constructor","CAN_DRAG","p5","deltaX","deltaY","isNaN","stop","angle","atan","PI","magnitude","ATTRACTION","prevAngle","cos","sin","abs","MIN_DISTANCE","AttractedHighlightableObject","options","highlighted","highlightColor","Colors","highlightShape","HIGHLIGHT_CIRCLE","Object","entries","option","color","shape","floor","Visualizer","maxAnimationSpeed","stroke","noFill","strokeWeight","HIGHTLIGHT_WIDTH","diameter","highlightInnerRadius","highlightOuterRadius","circle","HIGHLIGHT_SQUARE","square","pop","textAlign","CENTER","fill","radius","toString","drawHighlight","drawValue","Animator","events","objects","connectingEdges","filter","Visualization","animator","SUPPORTS_TEXT","displayText","displayTextColor","showText","updateText","animationHistory","animationQueue","animating","SUPPORTS_NO_LOOP","beginDrawLoop","endDrawLoop","method","params","animation","emit","scope","time","setTimeout","callForward","SET_BOUNDS","height","popAnimation","noAnim","retVal","apply","isAnimStart","runningAnimation","isAnimEnd","explanation","explanationUsesReturn","replace","SUPPORTS_CUSTOM_END","noAnimation","customEnd","doneAnimating","MAX_ANIM_TIME","loop","noLoop","textSize","LEFT","TOP","numScrollbars","maxY","windowWidth","querySelector","resizeCanvas","ArrayList","reset","backingArray","INITIAL_CAPACITY","ArrayElement","size","index","data","doubleSize","shiftForIndex","setIndex","sizeIncr","addAnimation","addAtIndex","element","shiftIntoIndex","sizeDecr","removeFromIndex","resetElement","incrLength","shiftElement","shiftElementMovement","shiftElementIndex","ELEMENT_SIZE","update","foundAnimElement","maxPerRow","rows","ceil","translate","row","numElements","noStroke","rect","block","line","nextX","nextY","draw","USE_CANVAS","toX","toY","posX","posY","SinglyLinkedList","head","nodes","tempNode","pinnedNode","node","nextNode","moveHighlight","next","makeNode","setTempNodeBefore","setTempNodePrev","shiftForNode","insertTempNode","prev","toDelete","markNodeForDeletion","unmakeNode","shiftIntoNode","skipTempNode","SinglyLinkedListNode","splice","getNodePosition","fromNode","toNode","unHighlight","highlight","nodeToDelete","markForDeletion","addOnStop","shiftNode","ELEMENT_HEIGHT","containsPos","pin","unpin","markBroken","highlightForDeletion","updateNode","ELEMENT_WIDTH","pressedNode","getNodeAtPos","POINTER_WIDTH","ITEM_WIDTH","SPACING","MAX_DIST_REMOVE","handBroken","displacement","dist","Utils","DoublyLinkedList","tail","skipTempNodePrev","skipTempNodeNext","DoublyLinkedListNode","ELEMENT_PADDED_WIDTH","CircularSinglyLinkedList","changeHeadData","customNodeShift","resetHead","CircularSinglyLinkedListNode","unfreeze","pointsToHead","curveTightness","beginShape","curveVertex","endShape","StackArray","made","Array","copyArray","tempElement","topPointerValue","topPointerHighlighter","TOP_LOCATION_X","TOP_LOCATION_Y","resizing","createCopyArray","makeElement","useTopPointer","highlightTemp","insertElement","updateTopPointer","extractElement","unmakeElement","initCopyArray","addItemToCopy","useCopyArr","pos","getElementPosition","StackArrayElement","customEndingElementShift","assignCopyArray","shiftElementToBackingArray","immediateHighlight","highlightForMovement","moveTopTracker","unhighlight","goTo","copy","changeTopPointerValue","moving","updateElement","allInPosition","QueueArray","DequeArray","StackLinkedList","shiftHead","StackLinkedListNode","QueueLinkedList","DequeLinkedList","setup","mousePressed","touchMoved","mouseReleased","windowResized","controlBarRef","controlGroups","defaultControlGroups","onAnimStart","onAnimEnd","focusedElement","Proxy","get","propertyName","receiver","on","addDefaultControls","MAX_SPEED","SPEED_SLIDER_DEGREE","speedSlider","ControlBuilder","INITIAL_SPEED","sliderLabel","speedSliderGroup","extraGroups","VISUALIZATION_CLASS","SUPPORTS_ANIMATION_CONTROL","skipBackButton","visualization","skipBack","stepBackButton","stepBack","playPauseButton","getAttribute","stepForwardButton","stepForward","skipForwardButton","skipForward","animationControls","tagName","registerControlGroup","childNodes","child","disableUI","enableUI","activeElement","disabled","class","setMainLabel","setDefaultsLabel","defaultGroup","addDefaultGroup","addControlGroup","mounted","prevProps","prevState","canvasParentRef","mobile","ontouchstart","createCanvas","background","touchStarted","touchEnded","ListVisualizer","addAtIndexButtonCallback","addToFrontButtonCallback","addToBackButtonCallback","removeFromIndexButtonCallback","removeFromFrontButtonCallback","removeFromBackButtonCallback","resetButtonCallback","elementFieldCallback","indexFieldCallback","list","addControls","valueField","indexField","addAtIndexButton","addToFrontButton","addToBackButton","removeFromIndexButton","removeFromFrontButton","removeFromBackButton","resetButton","addFrontBackGroup","removeFrontBackGroup","valueFrontBackGroup","indexGroup","resetGroup","parseInt","addToBack","addToFront","removeFromFront","removeFromBack","ArrayListVisualizer","SinglyLinkedListVisualizer","DoublyLinkedListVisualizer","CircularSinglyLinkedListVisualizer","Lists","useRouteMatch","path","url","exact","component","ListView","StackVisualizer","pushButtonCallback","popButtonCallback","stack","pushButton","popButton","interactionButtonGroup","mainControlGroup","peek","QueueVisualizer","enqueueButtonCallback","dequeueButtonCallback","queue","enqueueButton","dequeueButton","enqueue","dequeue","DequeVisualizer","addLastButtonCallback","addFirstButtonCallback","removeFirstButtonCallback","removeLastButtonCallback","deque","addLastButton","addFirstButton","removeFirstButton","removeLastButton","addButtonGroup","removeButtonGroup","interactionGroup","addLast","addFirst","removeFirst","removeLast","StackArrayVisualizer","QueueArrayVisualizer","DequeArrayVisualizer","StackLinkedListVisualizer","QueueLinkedListVisualizer","DequeLinkedListVisualizer","StacksQueuesDeques","StackQueueDequeView","DataStructures","DataStructureView","Boolean","hostname","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c9aaa58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d46fc74.svg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav-bar.scss';\r\n\r\nimport logo from 'res/images/logo.svg';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            responsive: false,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    scrollToTop() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        // console.log(\"scrolltotop\");\r\n    }\r\n\r\n    toggleResponsiveNav() {\r\n        this.setState((state) => {\r\n                return {\r\n                    responsive: !state.responsive,\r\n                };\r\n            });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.selfRef.current && !this.selfRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({responsive: false});\r\n        this.scrollToTop();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"top-nav\" className={`nav-bar ${this.state.responsive ? \"responsive\" : \"\"} nav-container`} ref={this.selfRef}>\r\n                    <Link className=\"not-a-button\" id=\"nav-logo\" to={window.location.href.substring(window.location.href.indexOf(\"/#/\")).length > 0 ? \"/\" : \"\" }><img src={logo} className=\"app-logo\" alt=\"logo\" /></Link>\r\n                    {this.props.nav_items.map( (nav_item) => {\r\n                        return (\r\n                                <NavBarItem key={`nav-${nav_item.link}`} content={nav_item} container={this}/>\r\n                            );\r\n                    })}\r\n                    <button className=\"not-a-button nav-bar-item nav-item nav-item-title\" id=\"top-nav-menu\" onClick={() => this.toggleResponsiveNav()}><i className=\"fa fa-bars\"></i></button>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            icon: this.props.content.icon,\r\n            title_text: this.props.content.title_text,\r\n            drop_down_items: this.props.content.drop_down_items,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.drop_down_items) {\r\n            this.state.showDropDown = false;\r\n        }\r\n\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    setShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: show,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: !state.showDropDown,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setShowDropDown(false);\r\n        this.props.container.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-item nav-item ${this.state.drop_down_items && this.state.showDropDown ? \"active\" : \"\"}`} ref={this.selfRef}>\r\n                    <NavBarItemTitle link={this.state.link} icon={this.state.icon} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.drop_down_items && this.state.showDropDown ?\r\n                        <NavBarDropDown items={this.state.drop_down_items} parentRoute={`/${this.state.link}`} parent={this} />\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            icon: this.props.icon,\r\n            title_text: this.props.title_text,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingNavItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingNavItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.state.containingNavItemRef.current && !this.state.containingNavItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentNavItem.setShowDropDown(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentNavItem.state.showDropDown || !this.state.parentNavItem.state.drop_down_items) {\r\n                window.location.hash = `#/${this.state.parentNavItem.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentNavItem.setShowDropDown(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentNavItem.state.drop_down_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`/${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drop_down_items: this.props.items,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-drop-down nav-container\"> {\r\n                    this.state.drop_down_items.map( (drop_down_item) => {\r\n                    return (\r\n                            <NavBarDropDownItem key={`nav-${drop_down_item.link}`} content={drop_down_item} parent={this} parentRoute={this.props.parentRoute} />\r\n                        );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            side_pane_items: this.props.content.side_pane_items,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.side_pane_items) {\r\n            this.state.showSidePane = false;\r\n        }\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    setShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: show,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: !state.showSidePane,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown() {\r\n        this.toggleShowSidePane();\r\n    }\r\n\r\n    clear() {\r\n        this.setShowSidePane(false);\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-drop-down-item nav-item ${this.state.side_pane_items && this.state.showSidePane ? \"active\": \"\"}`} ref={this.selfRef}>\r\n                    <NavBarDropDownItemTitle link={this.state.link} parentRoute={this.state.parentRoute} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.side_pane_items && this.state.showSidePane ?\r\n                        <NavBarSidePane items={this.state.side_pane_items} parentRoute={`${this.props.parentRoute}/${this.state.link}`} parent={this}></NavBarSidePane>\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarDropDownItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            parentRoute: this.props.parentRoute,\r\n            title_text: this.props.title_text,\r\n            // containingDropDownItemRef: this.props.parentRef,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingDropDownItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingDropDownItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentDropDownItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingDropDownItemRef);\r\n        // console.log(this.state.containingDropDownItemRef.current);\r\n        if (this.state.containingDropDownItemRef.current && !this.state.containingDropDownItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentDropDownItem.setShowSidePane(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentDropDownItem.state.showSidePane) {\r\n                window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentDropDownItem.toggleShowSidePane();\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentDropDownItem.state.side_pane_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`}>{this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarSidePane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            side_pane_items: this.props.items,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-pane nav-container\"> {\r\n                    this.state.side_pane_items.map( (side_pane_item) => {\r\n                        return (\r\n                                <NavBarSideItem key={`nav-${side_pane_item.link}`} content={side_pane_item} parentRoute={this.props.parentRoute} parent={this} />\r\n                            );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nclass NavBarSideItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-item nav-item\">\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-side-pane-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './app-header.scss';\r\nimport NavBar from '../nav-bar';\r\n\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n            <header className=\"app-header\">\r\n                <NavBar nav_items={[\r\n                    {\r\n                        link: \"datastructures\",\r\n                        icon: \"sitemap\",\r\n                        title_text: \"Data Structures\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"lists\",\r\n                                title_text: \"Lists\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"arraylist\",\r\n                                        title_text: \"ArrayList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"sll\",\r\n                                        title_text: \"Singly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"dll\",\r\n                                        title_text: \"Doubly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"c-sll\",\r\n                                        title_text: \"Circular Singly LinkedList\",\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"stacks-queues-deques\",\r\n                                title_text: \"Stacks/Queues/Deques\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"stack-array\",\r\n                                        title_text: \"Stack (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"stack-linkedlist\",\r\n                                        title_text: \"Stack (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-array\",\r\n                                        title_text: \"Queue (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-linkedlist\",\r\n                                        title_text: \"Queue (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-array\",\r\n                                        title_text: \"Deque (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-linkedlist\",\r\n                                        title_text: \"Deque (LinkedList)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"trees-skiplist\",\r\n                                title_text: \"Trees and SkipList\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bst\",\r\n                                        title_text: \"Binary Search Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"heap-pq\",\r\n                                        title_text: \"Heap / Priority Queue\"\r\n                                    },\r\n                                    {\r\n                                        link: \"avl\",\r\n                                        title_text: \"AVL\"\r\n                                    },\r\n                                    {\r\n                                        link: \"24-tree\",\r\n                                        title_text: \"2-4 Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"splaytree\",\r\n                                        title_text: \"SplayTree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"skiplist\",\r\n                                        title_text: \"SkipList\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"hashmaps\",\r\n                                title_text: \"HashMaps\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"hashmap-probing\",\r\n                                        title_text: \"HashMap (Probing)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"hashmap-chaining\",\r\n                                        title_text: \"HashMap (Chaining)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"algorithms\",\r\n                        icon: \"stack-overflow\",\r\n                        title_text: \"Algorithms\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"sorting\",\r\n                                title_text: \"Sorting\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bubble\",\r\n                                        title_text: \"Bubble Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"cocktail\",\r\n                                        title_text: \"Cocktail Shaker Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"insertion\",\r\n                                        title_text: \"Insertion Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"selection\",\r\n                                        title_text: \"Selection Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quicksort\",\r\n                                        title_text: \"Quick Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quickselect\",\r\n                                        title_text: \"Quick Select\"\r\n                                    },\r\n                                    {\r\n                                        link: \"merge\",\r\n                                        title_text: \"Merge Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"lsd-radix\",\r\n                                        title_text: \"LSD Radix Sort\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"string-searching\",\r\n                                title_text: \"String Searching\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"brute-force\",\r\n                                        title_text: \"Brute Force\"\r\n                                    },\r\n                                    {\r\n                                        link: \"boyer-moore\",\r\n                                        title_text: \"Boyer Moore\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kmp\",\r\n                                        title_text: \"KMP\"\r\n                                    },\r\n                                    {\r\n                                        link: \"rabin-karp\",\r\n                                        title_text: \"Rabin Karp\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"graphs\",\r\n                                title_text: \"Graph Algorithms\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"breadth\",\r\n                                        title_text: \"Breadth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"depth\",\r\n                                        title_text: \"Depth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"dijkstra\",\r\n                                        title_text: \"Dijkstra's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"prim\",\r\n                                        title_text: \"Prim's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kruskal\",\r\n                                        title_text: \"Kruskal's\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"dynamic\",\r\n                                title_text: \"Dynamic Programming\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"lcs\",\r\n                                        title_text: \"LCS\"\r\n                                    },\r\n                                    {\r\n                                        link: \"floyd-warshall\",\r\n                                        title_text: \"Floyd-Warshall\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"about\",\r\n                        icon: \"user\",\r\n                        title_text: \"About\",\r\n                    },\r\n                ]} />\r\n            </header>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './app-footer.scss';\r\n\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n            <footer className=\"app-footer\">\r\n                <div className=\"footer-message\">\r\n                    <p>Created using ReactJS by Mudit Gupta for The Georgia Institute of Technology. Updated Feb. 16, 2020.</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './home.scss';\r\n\r\nexport default function Home() {\r\n    return (\r\n            <div className=\"home\">\r\n\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './about.scss';\r\n\r\nexport default function About() {\r\n    return (\r\n            <div className=\"about\">\r\n                <h1>About CS Vis</h1>\r\n                <p>I created this tool to visualize some of the alogirthms I've been learning in my classes.\r\n                Most of these visualizations are inspired by those found at <a href='https://csvistool.com'>csvistool.com</a>.\r\n                I tried to make the UX here as convenient as possible, but I'd love to hear your design input;\r\n                I'm not a front-end person, so I'm doing my best :).</p>\r\n            <p>Check out the <a href='https://github.com/muditg317/cs-vis'>Source Code here</a>!</p>\r\n                <h2>Me!</h2>\r\n                <p>This is something I wanted to make to learn more about these datastructures and algorithms while also learning how to use the ReactJS framework.\r\n                Check out some of my other projects at <a href='https://muditgupta.appspot.com'>muditgupta.appspot.com</a></p>\r\n            </div>\r\n        );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './controlBar.scss';\r\n\r\nexport default class ControlBar extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.defaultContainer = React.createRef();\r\n        this.defaults = React.createRef();\r\n        this.mainContainer = React.createRef();\r\n        this.controlBar = React.createRef();\r\n    }\r\n\r\n    setDefaultsLabel(label) {\r\n        this.defaultsLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    setMainLabel(label) {\r\n        this.mainLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    addDefaultGroup(controlGroup) {\r\n        this.defaults.current.appendChild(controlGroup);\r\n    }\r\n\r\n    addControlGroup(controlGroup) {\r\n        this.controlBar.current.appendChild(controlGroup);\r\n    }\r\n\r\n    testSize() {\r\n        let transformed = 0;\r\n        if (this.controlBar.current.getBoundingClientRect().width\r\n                > (this.mainContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.mainContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.mainContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.mainContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        if (this.defaults.current.getBoundingClientRect().width\r\n                > (this.defaultContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.defaultContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.defaultContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.defaultContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        return transformed;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.testSize();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.testSize();\r\n    }\r\n\r\n    windowResized() {\r\n        return this.testSize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"control-bar\">\r\n                    <div className=\"control-container\" id=\"main-control\" ref={this.mainContainer}>\r\n                        <div className=\"control-wrapper\">\r\n                            {this.mainLabel && <p className=\"control-label\" id=\"main-control-label\">{this.mainLabel}</p>}\r\n                            <div className=\"controls control-group\"  ref={this.controlBar}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"control-container\" id=\"default-control\" ref={this.defaultContainer}>\r\n                        <div className=\"control-wrapper\">\r\n                            {// {this.defaultsLabel && <p className=\"control-label\" id=\"default-control-label\">{this.defaultsLabel}</p>}\r\n                            }\r\n                            <div className=\"controls default control-group\" ref={this.defaults}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","export function newEmptyControl() {\r\n    let emptyControl = document.createElement(\"input\");\r\n    applyStyle(emptyControl, \"visibility\", \"hidden\");\r\n    return emptyControl;\r\n}\r\n\r\nexport function createControl(type, value) {\r\n    let newControl = document.createElement(\"input\");\r\n    newControl.classList.add(\"visual-control\", type);\r\n\r\n    newControl.setAttribute(\"type\", type);\r\n    if (value) {\r\n        newControl.setAttribute(\"value\", value);\r\n    }\r\n\r\n    return newControl;\r\n};\r\n\r\nexport function createButton(label) {\r\n    let button = createControl(\"button\", label);\r\n\r\n    return button;\r\n};\r\n\r\nexport function createField(prompt, ...validators) {\r\n    let field = createControl(\"text\");\r\n    field.setAttribute(\"placeHolder\", prompt);\r\n\r\n    validators.forEach((validator) => {\r\n        field.addEventListener(\"input\", () => { validator(field); });\r\n    });\r\n\r\n    return field;\r\n};\r\n\r\nexport function createLabel(text, control) {\r\n    let newLabel = document.createElement(\"label\");\r\n    newLabel.classList.add(\"visual-control\",\"label\");\r\n\r\n    newLabel.setAttribute(\"for\", control.id);\r\n    newLabel.innerHTML = text;\r\n\r\n    return newLabel;\r\n}\r\n\r\nexport function validatorIntOnly() {\r\n    return (field) => {\r\n        let regex = /^(-[0-9])?[0-9]*/g;\r\n        field.value = field.value.match(regex).reduce((sum, char) => sum + char);\r\n    }\r\n};\r\n\r\nexport function validatorMaxLength(maxLength) {\r\n    return (field) => {\r\n        if (field.value.length > maxLength) {\r\n            field.value = field.value.substring(0, Math.min(field.value.length, maxLength));\r\n        }\r\n    };\r\n};\r\n\r\nexport function addSubmit(field, callback) {\r\n    if (field.type !== \"text\") {\r\n        console.log(\"cannot add callback to nontextfield\");\r\n        return;\r\n    }\r\n    if (callback === undefined) {\r\n        console.log(\"cannot set field submit to undefined callback\");\r\n        return;\r\n    }\r\n    field.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            // disableControls();\r\n            callback();\r\n        }\r\n    });\r\n};\r\n\r\nexport function createSlider(min, max, defaultValue, step) {\r\n    let slider = createControl(\"range\");\r\n\r\n    slider.setAttribute(\"min\", min);\r\n    slider.setAttribute(\"max\", max);\r\n    slider.setAttribute(\"step\", step === 0 ? \"1e-18\" : step);\r\n    slider.setAttribute(\"defaultValue\", defaultValue);\r\n    slider.value = defaultValue;\r\n\r\n    return slider;\r\n};\r\n\r\n\r\nexport function createControlGroup(id, ...controls) {\r\n    let controlGroup = document.createElement(\"div\");\r\n    controlGroup.setAttribute(\"class\", \"control-group\");\r\n    controlGroup.id = id;\r\n\r\n    controls.forEach((control) => {\r\n        controlGroup.appendChild(control);\r\n    });\r\n\r\n    return controlGroup;\r\n};\r\n\r\nexport function setTabControl(control, nextControl) {\r\n    if (control === undefined || nextControl === undefined) {\r\n        console.log(\"cannot link undefined controls\");\r\n        return;\r\n    }\r\n    enableShift();\r\n    control.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && (window.shifted !== undefined && !window.shifted)) {\r\n            event.preventDefault();\r\n            control.blur();\r\n            nextControl.focus();\r\n        }\r\n    });\r\n    nextControl.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && window.shifted) {\r\n            event.preventDefault();\r\n            nextControl.blur();\r\n            control.focus();\r\n        }\r\n    });\r\n};\r\n\r\nfunction enableShift() {\r\n    if (window.shifted === undefined) {\r\n        window.shifted = false;\r\n        window.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = true;\r\n            }\r\n        });\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = false;\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport function applyStyle(control, styleType, value) {\r\n    control.style[styleType] = value;\r\n}\r\n","export const RED = [255,0,0];\r\nexport const GREEN = [60, 181, 60];\r\nexport const BLUE = [0,0,255];\r\nexport const BLACK = [0,0,0];\r\nexport const WHITE = [255,255,255];\r\n","export function addArray(array, ...arrays) {\r\n    let newArr = [...array];\r\n    arrays.forEach(array => {\r\n        array.forEach((item, i) => {\r\n            newArr[i] += item;\r\n        });\r\n    });\r\n    return newArr;\r\n}\r\n\r\nexport function isDev() {\r\n    return !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n}\r\n","export default class AnimatedObject {\r\n    constructor() {\r\n        this.xProgress = 1;\r\n        this.yProgress = 1;\r\n        // this.translationFrames = 0;\r\n\r\n        // this.animating = false;\r\n        this.direction = 0;\r\n    }\r\n\r\n    travel(direction) {\r\n        this.xProgress = 0;\r\n        this.yProgress = 0;\r\n        this.direction = direction;\r\n    }\r\n\r\n    inPosition() {\r\n        return this.direction >= 0\r\n                ? this.xProgress >= 1 && this.yProgress >= 1\r\n                : this.xProgress <= -1 && this.yProgress <= -1;\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        if (!this.inPosition()) {\r\n            // this.animating = true;\r\n            this.xProgress += Math.sign(this.direction) * animationSpeed/200;\r\n            this.yProgress += Math.sign(this.direction) * animationSpeed/200;\r\n        } else {\r\n            // this.animating = false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","export default class AttractedDraggableObject {\r\n\r\n    static ATTRACTION = 0.3;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    constructor(x,y) {\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.frozen = false;\r\n        this.onStop = [];\r\n\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()();\r\n        }\r\n    }\r\n\r\n    pin(mouseX, mouseY) {\r\n        if (this.constructor.CAN_DRAG) {\r\n            if (!this.frozen) {\r\n                this.pinnedToMouse = true;\r\n                this.mouseOffsetX = mouseX - this.currentX;\r\n                this.mouseOffsetY = mouseY - this.currentY;\r\n            }\r\n        }\r\n    }\r\n\r\n    unpin() {\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if (this.pinnedToMouse) {\r\n            this.currentX = p5.mouseX - this.mouseOffsetX;\r\n            this.currentY = p5.mouseY - this.mouseOffsetY;\r\n        } else if (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy)) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedDraggableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx += magnitude * Math.cos(angle);\r\n                this.vy += magnitude * Math.sin(angle);\r\n\r\n                this.vx *= 0.75;\r\n                this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer'\r\nimport { Colors } from 'utils';\r\n\r\nexport default class AttractedHighlightableObject {\r\n    static ATTRACTION = 0.2;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    static HIGHTLIGHT_WIDTH = 5;\r\n    static HIGHLIGHT_CIRCLE = 0;\r\n    static HIGHLIGHT_SQUARE = 1;\r\n\r\n    constructor(x,y, options = {}) {\r\n        this.value = options.value || null;\r\n\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.frozen = false;\r\n        this.onStop = [];\r\n\r\n        this.highlighted = false;\r\n        this.highlightColor = Colors.BLACK;\r\n        this.highlightShape = AttractedHighlightableObject.HIGHLIGHT_CIRCLE;\r\n\r\n        Object.entries(options).forEach((option) => {\r\n            this[option[0]] = option[1];\r\n        });\r\n\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    goTo(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.stop();\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()(this);\r\n        }\r\n    }\r\n\r\n    highlight(color = Colors.BLUE, shape = AttractedHighlightableObject.HIGHLIGHT_CIRCLE) {\r\n        this.highlightColor = color;\r\n        this.highlightShape = shape;\r\n        this.highlighted = true;\r\n    }\r\n\r\n    unhighlight() {\r\n        this.highlighted = false;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if ((animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed()))\r\n                || (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy))) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedHighlightableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx = magnitude * Math.cos(angle);\r\n                this.vy = magnitude * Math.sin(angle);\r\n\r\n                // this.vx *= 0.75;\r\n                // this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n\r\n    drawHighlight(p5) {\r\n        p5.push();\r\n        p5.stroke(...this.highlightColor);\r\n        p5.noFill();\r\n        p5.strokeWeight(AttractedHighlightableObject.HIGHTLIGHT_WIDTH);\r\n        let diameter = 2 * (this.highlightInnerRadius || this.highlightOuterRadius) + (this.highlightInnerRadius ? 1 : -1) * AttractedHighlightableObject.HIGHTLIGHT_WIDTH;\r\n        if (this.highlightShape === AttractedHighlightableObject.HIGHLIGHT_CIRCLE) {\r\n            p5.circle(this.currentX, this.currentY, diameter);\r\n        } else if (this.highlightShape === AttractedHighlightableObject.HIGHLIGHT_SQUARE) {\r\n            p5.square(this.currentX - diameter/2, this.currentY - diameter/2, diameter);\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    drawValue(p5) {\r\n        if (this.value) {\r\n            p5.textAlign(p5.CENTER, p5.CENTER);\r\n            p5.fill(0);\r\n            p5.stroke(0);\r\n            let radius = 2 * (this.highlightInnerRadius || this.highlightOuterRadius) + (this.highlightInnerRadius ? 1 : -1) * AttractedHighlightableObject.HIGHTLIGHT_WIDTH;\r\n            p5.text(this.value.toString(), this.currentX - radius,this.currentY - radius, 2*radius, 2*radius);\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        if (this.highlighted) {\r\n            this.drawHighlight(p5);\r\n        }\r\n        this.drawValue(p5);\r\n        p5.pop();\r\n    }\r\n}\r\n","export default class Animator {\r\n    constructor() {\r\n        this.events = [];\r\n\r\n        this.objects = [];\r\n        this.connectingEdges = [];\r\n\r\n\r\n    }\r\n\r\n    on(type, callback) {\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push(callback);\r\n    }\r\n\r\n    off(type, callback) {\r\n        if (this.events[type]) {\r\n            this.events[type] = this.events[type].filter( event => {\r\n                return event !== callback;\r\n            });\r\n        }\r\n    }\r\n\r\n    emit(type) {\r\n        if (this.events[type]) {\r\n            this.events[type].forEach( event => {\r\n                event();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { Colors } from 'utils';\r\n\r\nexport default class Visualization {\r\n    constructor(animator) {\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            this.displayText = \"Animation Ready\";\r\n            this.displayTextColor = [0,0,0];\r\n        } else {\r\n            delete this.showText;\r\n            delete this.updateText;\r\n        }\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n        if (!this.constructor.SUPPORTS_NO_LOOP) {\r\n            delete this.beginDrawLoop;\r\n            delete this.endDrawLoop;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            this.displayText = \"Animation Ready\";\r\n            this.displayTextColor = [0,0,0];\r\n        }\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n    }\r\n\r\n    updateText(text, color = Colors.BLACK) {\r\n        this.animationQueue.push({method:this.showText,params:[text,color],});\r\n    }\r\n\r\n    showText(text, color = Colors.BLACK) {\r\n        this.displayText = text;\r\n        this.displayTextColor = color;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    doneAnimating(time = 250) {\r\n        if (time === 0) {\r\n            this.animating = false;\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this.animating = false;\r\n        }, time);\r\n    }\r\n\r\n    update(callForward, animationSpeed, p5) {\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n        callForward();\r\n        this.popAnimation(animationSpeed);\r\n    }\r\n\r\n    isAnimStart(animation) {\r\n        return animation.method === this.animator.emit && animation.params[0] === \"anim-start\";\r\n    }\r\n\r\n    isAnimEnd(animation) {\r\n        return animation.method === this.animator.emit && animation.params[0] === \"anim-end\";\r\n    }\r\n\r\n    noAnimation(animation) {\r\n        return animation.noAnim\r\n                || (animation.method === this.animator.emit && (animation.params[0] === \"anim-start\" || animation.params[0] === \"anim-end\"))\r\n                || (animation.method === this.showText);\r\n    }\r\n\r\n    popAnimation(animationSpeed) {\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                let retVal = animation.method.apply(animation.scope || this, animation.params);\r\n                if (this.isAnimStart(animation)) {\r\n                    this.runningAnimation = [];\r\n                } else if (this.isAnimEnd(animation)) {\r\n                    this.animationHistory.push(this.runningAnimation);\r\n                    this.runningAnimation = null;\r\n                } else {\r\n                    if (this.runningAnimation) {\r\n                        this.runningAnimation.push(animation);\r\n                    } else {\r\n                        this.animationHistory.push(animation);\r\n                    }\r\n                }\r\n                if (animation.explanation) {\r\n                    if (animation.explanationUsesReturn) {\r\n                        animation.explanation = animation.explanation.replace(\"|RETURN|\", retVal);\r\n                    }\r\n                    this.showText(animation.explanation);\r\n                }\r\n                if (this.constructor.SUPPORTS_CUSTOM_END) {\r\n                    if (this.noAnimation(animation)) {\r\n                        this.animating = false;\r\n                    } else if (!animation.customEnd) {\r\n                        if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                            this.animating = false;\r\n                        } else {\r\n                            this.doneAnimating(this.constructor.MAX_ANIM_TIME / animationSpeed);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    beginDrawLoop() {\r\n        this.animator.loop();\r\n    }\r\n\r\n    endDrawLoop() {\r\n        this.animationQueue.push({method:this.animator.noLoop,scope:this.animator,params:[],});\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            p5.fill(...this.displayTextColor);\r\n            p5.textSize(15);\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            p5.text(this.displayText, 2.5,2.5, this.width,60);\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        return true;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        return true;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars, maxY) {\r\n        height -= numScrollbars * 16;\r\n        let width = p5.windowWidth;\r\n        if (maxY > (height - (2*this.y))) {\r\n            height = (maxY + (3*this.y))\r\n            if (!document.querySelector(\".canvas-container\").classList.contains(\"mobile\")) {\r\n                width -= 16;\r\n            }\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AnimatedObject from 'animation/AnimatedObject';\r\n\r\nexport default class ArrayList extends Visualization {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.backingArray = {};\r\n        this.backingArray.length = ArrayList.INITIAL_CAPACITY;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            this.backingArray[i] = new ArrayElement(\"\");\r\n        }\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            animation.push(...this.doubleSize());\r\n        }\r\n        if (index < this.size) {\r\n            animation.push(...this.shiftForIndex(index));\r\n        }\r\n        animation.push({method:this.setIndex,params:[index,data,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        let element = this.backingArray[index];\r\n        let data = element.data;\r\n        element.data = \"\";\r\n        if (index < this.size - 1) {\r\n            animation.push(...this.shiftIntoIndex(index));\r\n        }\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    setIndex(index,data) {\r\n        this.backingArray[index].data = data;\r\n    }\r\n\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    doubleSize() {\r\n        let animation = []\r\n        let prevCapacity = this.backingArray.length;\r\n        for (let i = prevCapacity; i < this.backingArray.length * 2; i++) {\r\n            animation.push({method:this.resetElement,params:[i,],});\r\n        }\r\n        animation.push({method:this.incrLength,params:[],});\r\n        return animation;\r\n    }\r\n\r\n    incrLength() {\r\n        this.backingArray.length = 2 * this.backingArray.length;\r\n    }\r\n\r\n    shiftForIndex(index) {\r\n        let animation = []\r\n        for (let i = this.size - 1; i >= index; i--) {\r\n            animation.push(...this.shiftElement(i,1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[index,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftIntoIndex(index) {\r\n        let animation = [];\r\n        for (let i = index + 1; i < this.size; i++) {\r\n            animation.push(...this.shiftElement(i,-1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[this.size-1,],});\r\n    }\r\n\r\n    shiftElement(index, direction) {\r\n        let animation = [];\r\n        animation.push({method:this.shiftElementMovement,params:[index,direction,],});\r\n        animation.push({method:this.shiftElementIndex,params:[index,direction,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftElementMovement(index, direction) {\r\n        this.backingArray[index].shift(direction);\r\n        // console.log(\"move\",index,JSON.stringify(this.backingArray));\r\n    }\r\n\r\n    shiftElementIndex(index, direction) {\r\n        // console.log(\"index\",index,JSON.stringify(this.backingArray));\r\n        // console.log(index+direction, this.backingArray[index].data);\r\n        this.backingArray[index+direction].data = this.backingArray[index].data;\r\n        this.backingArray[index].data = \"\";\r\n    }\r\n\r\n\r\n    resetElement(index) {\r\n        if (this.backingArray[index]) {\r\n            this.backingArray[index].data = \"\";\r\n        } else {\r\n            this.backingArray[index] = new ArrayElement(\"\", ArrayList.ELEMENT_SIZE);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                if (this.backingArray[i]) {\r\n                    this.backingArray[i].update(animationSpeed);\r\n                }\r\n            }\r\n            let foundAnimElement = false;\r\n            for (let i = 0; i < this.size; i++) {\r\n                if (!this.backingArray[i].inPosition()) {\r\n                    foundAnimElement = true;\r\n                    break;\r\n                }\r\n            }\r\n            this.animating = foundAnimElement;\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        let maxPerRow = Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE);\r\n        let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        p5.push();\r\n        p5.translate(this.x,this.y);\r\n\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            p5.noStroke();\r\n            p5.fill(200);\r\n            p5.rect(ArrayList.ELEMENT_SIZE/10,ArrayList.ELEMENT_SIZE/10 + (2 * ArrayList.ELEMENT_SIZE * row),ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE/20);\r\n\r\n            p5.stroke(0);\r\n            p5.fill(255);\r\n            p5.rect(0,(2 * ArrayList.ELEMENT_SIZE * row), ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE);\r\n        }\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(ArrayList.ELEMENT_SIZE/3 - 2);\r\n\r\n        let i = 0;\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            let x = 0;\r\n            let y = 2 * row * ArrayList.ELEMENT_SIZE;\r\n            for (let block = 0; block < numElements; block++) {\r\n                p5.stroke(0);\r\n                p5.line(x,y, x, y+ArrayList.ELEMENT_SIZE);\r\n\r\n                p5.noStroke();\r\n                p5.fill(0,0,255);\r\n                p5.text(i.toString(), x,y+ArrayList.ELEMENT_SIZE, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n\r\n                let element = this.backingArray[i++];\r\n                let nextX = block < (numElements - 1) ? x + ArrayList.ELEMENT_SIZE : 0;\r\n                let nextY = block < (numElements - 1) ? y : (y + (ArrayList.ELEMENT_SIZE*2));\r\n                if (element.data) {\r\n                    element.draw(p5, x,y,nextX,nextY);\r\n                }\r\n                x = nextX;\r\n                y = nextY;\r\n                if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - ArrayList.ELEMENT_SIZE) {\r\n                    // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (Math.ceil(this.backingArray.length / (Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE))))*2*ArrayList.ELEMENT_SIZE);\r\n    }\r\n}\r\n\r\n\r\nclass ArrayElement extends AnimatedObject {\r\n    constructor(data) {\r\n        super();\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    shift(direction) {\r\n        super.travel(direction);\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        super.update(animationSpeed);\r\n    }\r\n\r\n\r\n    draw(p5, x,y, toX,toY) {\r\n        p5.push();\r\n        p5.fill(0);\r\n        p5.stroke(50);\r\n        if (!this.inPosition()) {\r\n            let posX = (toX-x)*this.xProgress + x;\r\n            let posY = (toY-y)*this.yProgress + y;\r\n            p5.text(this.data.toString(), posX,posY, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n        } else {\r\n            p5.text(this.data.toString(), x,y, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE)\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class SinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = SinglyLinkedList.ITEM_WIDTH + SinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node = null;\r\n        let nextNode = this.head;\r\n        for (let i = 0; i < index; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n            node = nextNode;\r\n            nextNode = nextNode.next;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[node,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else {\r\n            let node = this.head;\r\n            animation.push({method:this.moveHighlight,params:[null,node,],});\r\n            for (let i = 0; i < index - 1; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                node = node.next;\r\n            }\r\n            prev = node;\r\n            toDelete = prev.next;\r\n            next = toDelete.next;\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new SinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE));\r\n        let x = SinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * SinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * SinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + SinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass SinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + SinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + SinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, SinglyLinkedList.ITEM_WIDTH, SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, SinglyLinkedList.ELEMENT_WIDTH,SinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ITEM_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DoublyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DoublyLinkedList.ELEMENT_WIDTH + 2 * DoublyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_PADDED_WIDTH = DoublyLinkedList.ITEM_WIDTH + DoublyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node;\r\n        let nextNode;\r\n        let highlighted;\r\n        if (index < this.size / 2) {\r\n            node = null;\r\n            nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            highlighted = node;\r\n        } else {\r\n            node = this.tail;\r\n            nextNode = null;\r\n            for (let i = this.size - 1; i > index-1; i--) {\r\n                animation.push({method:this.moveHighlight,params:[nextNode,node,],});\r\n                nextNode = node;\r\n                node = node.prev;\r\n            }\r\n            highlighted = nextNode;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[highlighted,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else if (index === this.size - 1) {\r\n            next = null;\r\n            toDelete = this.tail;\r\n            prev = toDelete.prev;\r\n        } else {\r\n            if (index < this.size / 2) {\r\n                let node = this.head;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = 0; i < index; i++) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                    node = node.next;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            } else {\r\n                let node = this.tail;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = this.size - 1; i > index; i--) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.prev,],});\r\n                    node = node.prev;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            }\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[toDelete,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNodePrev,params:[prev,],});\r\n        animation.push({method:this.skipTempNodeNext,params:[next,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new DoublyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n        if (next) {\r\n            next.prev = this.tempNode;\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        }\r\n        this.tempNode.prev = prev;\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        if (index === this.size) {\r\n            this.tail = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n    }\r\n\r\n    skipTempNodeNext(next) {\r\n        if (next) {\r\n            next.prev = this.tempNode.prev;\r\n        } else {\r\n            this.tail = this.tail.prev;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH));\r\n        let x = DoublyLinkedList.ELEMENT_PADDED_WIDTH * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DoublyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DoublyLinkedList.ELEMENT_PADDED_WIDTH;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + DoublyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass DoublyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n        this.prev = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DoublyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DoublyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DoublyLinkedList.ITEM_WIDTH, DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX + DoublyLinkedList.POINTER_WIDTH,this.currentY, DoublyLinkedList.ELEMENT_WIDTH,DoublyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.prev) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, this.prev.currentX + DoublyLinkedList.ITEM_WIDTH, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3)\r\n            p5.rect(this.prev.currentX + DoublyLinkedList.ITEM_WIDTH - 3, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, this.next.currentX, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3 - 3, 6,6);\r\n        } else {\r\n            p5.stroke(...this.color);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.ITEM_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class CircularSinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = CircularSinglyLinkedList.ITEM_WIDTH + CircularSinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            if (this.size > 1) {\r\n                index = 1;\r\n            }\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        if (index === 0) {\r\n            animation.push({method:this.reset,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction = 0) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE));\r\n        let x = CircularSinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * CircularSinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * CircularSinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.pinnedNode.markBroken();\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            if (this.pinnedNode.index === 0 && this.size > 1) {\r\n                this.animationQueue.push({method:this.pinnedNode.unfreeze,scope:this.pinnedNode,params:[],});\r\n                this.animationQueue.push({method:this.shiftNode,params:[this.pinnedNode,],});\r\n            }\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    touchMoved(p5) {\r\n        return this.pinnedNode === null;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + CircularSinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.handBroken = false;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, CircularSinglyLinkedList.ITEM_WIDTH, CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, CircularSinglyLinkedList.ELEMENT_WIDTH,CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ITEM_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport { AttractedHighlightableObject } from 'animation';\r\nimport { Colors } from 'utils';\r\n\r\nexport default class StackArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_NO_LOOP = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n    static SUPPORTS_TEXT = true;\r\n\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static TOP_LOCATION_X = 125;\r\n    static TOP_LOCATION_Y = 45;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n        this.made = true;\r\n    }\r\n\r\n    reset() {\r\n        if (this.made) {\r\n            this.beginDrawLoop();\r\n        }\r\n        super.reset();\r\n        this.backingArray = new Array(StackArray.INITIAL_CAPACITY);\r\n        this.size = 0;\r\n        this.copyArray = null;\r\n        this.tempElement = null;\r\n        this.topPointerValue = 0;\r\n        this.topPointerHighlighter = new AttractedHighlightableObject(StackArray.TOP_LOCATION_X, StackArray.TOP_LOCATION_Y, {\r\n            highlightOuterRadius: 15//StackArray.ELEMENT_SIZE/2,\r\n        });\r\n\r\n        this.resizing = false;\r\n        if (this.made) {\r\n            this.updateText(\"Animation Ready\");\r\n            this.endDrawLoop();\r\n        }\r\n    }\r\n\r\n    push(data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (data === null) {\r\n            this.updateText(\"Cannot add null to Stack.\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            this.updateText(`Stack full, resizing to length ${this.backingArray.length*2}`);\r\n            animation.push(...this.createCopyArray());\r\n        }\r\n        animation.push({method:this.makeElement,params:[this.size,data],explanation:`Create value: ${data}`,});\r\n        animation.push(...this.useTopPointer());\r\n        animation.push({method:this.highlightTemp,params:[],noAnim:true});\r\n        animation.push({method:this.insertElement,params:[this.size],customEnd:true,explanation:`Added ${data} to backingArray`});\r\n        animation.push({method:this.sizeIncr,params:[],noAnim:true});\r\n        animation.push(...this.updateTopPointer());\r\n        this.animationQueue.push({method:this.showText,params:[`Successfully pushed ${data} to stack.`,Colors.GREEN,],});\r\n        this.addAnimation(animation);\r\n        this.endDrawLoop();\r\n        return true;\r\n    }\r\n\r\n    pop() {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (this.size === 0) {\r\n            this.updateText(\"Cannot pop empty Stack\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data = this.backingArray[this.size - 1].value;\r\n        animation.push({method:this.sizeDecr,params:[],noAnim:true});\r\n        animation.push(...this.updateTopPointer());\r\n        animation.push(...this.useTopPointer());\r\n        animation.push({method:this.extractElement,params:[],explanation:`Pop value: ${data} from stack`,customEnd:true});\r\n        animation.push({method:this.unmakeElement,params:[],noAnim:true});\r\n        // animation.push({method:this.highlightTemp,params:[],noAnim:true});\r\n        // animation.push({method:this.insertElement,params:[this.size],customEnd:true,explanation:`Added ${data} to backingArray`});\r\n        // animation.push({method:this.makeElement,params:[this.size,data],explanation:`Create value: ${data}`});\r\n\r\n        // if (index === 0) {\r\n        //     data = this.head.data;\r\n        //     animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n        //     animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n        //     index = 1;\r\n        // }\r\n        // let prev;\r\n        // let toDelete;\r\n        // let next;\r\n        // let node = this.head;\r\n        // animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        // for (let i = 0; i < index - 1; i++) {\r\n        //     animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n        //     node = node.next;\r\n        // }\r\n        // prev = node;\r\n        // toDelete = prev.next;\r\n        // next = toDelete.next;\r\n        // if (!data) {\r\n        //     data = toDelete.data;\r\n        // }\r\n        // animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        // animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        // if (index < this.size - 1) {\r\n        //     animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        // }\r\n        // animation.push({method:this.skipTempNode,params:[prev,],});\r\n        // animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.updateText(`Successfully popped ${data} from stack.`, Colors.GREEN);\r\n        this.endDrawLoop();\r\n        // this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    createCopyArray() {\r\n        let animation = [];\r\n        animation.push({method:this.initCopyArray,params:[],noAnim:true});\r\n        for (let i = 0; i < this.size; i++) {\r\n            animation.push(...this.addItemToCopy(i));\r\n        }\r\n        animation.push(...this.useCopyArr());\r\n        return animation;\r\n    }\r\n\r\n    initCopyArray() {\r\n        this.copyArray = new Array(this.backingArray.length * 2);\r\n        for (let i = 0; i < this.size; i++) {\r\n            let pos = this.getElementPosition(i);\r\n            this.copyArray[i] = new StackArrayElement({data: this.backingArray[i].value, index: i, x:pos[0],y:pos[1],},);\r\n        }\r\n    }\r\n\r\n    addItemToCopy(index) {\r\n        let animation = [];\r\n        animation.push({method:this.customEndingElementShift,params:[index,...this.getElementPosition(index,true),true],customEnd:true});\r\n        return animation;\r\n    }\r\n\r\n    useCopyArr() {\r\n        let animation = [];\r\n        animation.push({method:this.assignCopyArray,params:[],noAnim:true});\r\n        for (let i = 0; i < this.size; i++) {\r\n            animation.push({method:this.shiftElementToBackingArray,params:[i,],noAnim:true});\r\n        }\r\n        return animation;\r\n    }\r\n\r\n    assignCopyArray() {\r\n        this.backingArray = this.copyArray;\r\n        this.copyArray = null;\r\n    }\r\n\r\n    shiftElementToBackingArray(index) {\r\n        let element = this.backingArray[index];\r\n        element.shift(...this.getElementPosition(element.index));\r\n    }\r\n\r\n    makeElement(index, data, immediateHighlight = false) {\r\n        this.tempElement = new StackArrayElement({data: data, index: index, x:45,y:45,},);\r\n        if (immediateHighlight) {\r\n            this.tempElement.highlightForMovement();\r\n        }\r\n    }\r\n\r\n    useTopPointer() {\r\n        let animation = [];\r\n        animation.push({method:this.topPointerHighlighter.highlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        animation.push({method:this.moveTopTracker,params:[],customEnd:true,explanation:`Top points to index |RETURN|`,explanationUsesReturn:true});\r\n        animation.push({method:this.topPointerHighlighter.unhighlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        animation.push({method:this.topPointerHighlighter.goTo,scope:this.topPointerHighlighter,params:[StackArray.TOP_LOCATION_X,StackArray.TOP_LOCATION_Y,],noAnim:true});\r\n        return animation;\r\n    }\r\n\r\n    moveTopTracker() {\r\n        let pos = this.getElementPosition(this.topPointerValue);\r\n        this.topPointerHighlighter.shift(pos[0], pos[1] + StackArray.ELEMENT_SIZE);\r\n        this.topPointerHighlighter.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n        return this.topPointerValue;\r\n    }\r\n\r\n    highlightTemp(color = Colors.BLUE) {\r\n        this.tempElement.highlight(color);\r\n    }\r\n\r\n    insertElement(index) {\r\n        this.backingArray[index] = this.tempElement;\r\n        this.tempElement.shift(...this.getElementPosition(index));\r\n        this.tempElement.addOnStop((element) => {\r\n            element.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n        this.tempElement = null;\r\n    }\r\n\r\n    extractElement() {\r\n        this.tempElement = this.backingArray[this.topPointerValue];\r\n        this.backingArray[this.topPointerValue] = null;\r\n        this.tempElement.highlightForMovement();\r\n        this.tempElement.shift(45,45);\r\n        this.tempElement.addOnStop(() => {\r\n            this.tempElement.unhighlight();\r\n            this.doneAnimating();\r\n        });\r\n    }\r\n\r\n    unmakeElement(index) {\r\n        this.tempElement = null;\r\n    }\r\n\r\n    shiftElement(element, direction = 0) {\r\n        element.shift(...this.getElementPosition(element.index + direction), direction);\r\n    }\r\n\r\n    customEndingElementShift(index, x, y, copy = false) {\r\n        let element = (copy ? this.copyArray : this.backingArray)[index];\r\n        element.highlightForMovement();\r\n        element.shift(x,y);\r\n        element.addOnStop(() => {\r\n            element.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    updateTopPointer() {\r\n        let animation = [];\r\n        animation.push({method:this.topPointerHighlighter.highlight,scope:this.topPointerHighlighter,params:[Colors.RED, AttractedHighlightableObject.HIGHLIGHT_SQUARE]});\r\n        animation.push({method:this.changeTopPointerValue,params:[],explanation:`Update top pointer to |RETURN|`,explanationUsesReturn:true});\r\n        animation.push({method:this.topPointerHighlighter.unhighlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        return animation;\r\n    }\r\n\r\n    changeTopPointerValue() {\r\n        this.topPointerValue = this.size;\r\n        return this.size;\r\n    }\r\n\r\n    getElementPosition(index, copy = false) {\r\n        let maxPerRow = Math.floor(this.width / StackArray.ELEMENT_SIZE);\r\n        let x = StackArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * StackArray.ELEMENT_SIZE;\r\n        x = (index % maxPerRow) * StackArray.ELEMENT_SIZE;\r\n        return [x + StackArray.ELEMENT_SIZE/2 + this.x,y + StackArray.ELEMENT_SIZE/2 + this.y + (copy ? (Math.ceil(this.backingArray.length / maxPerRow)*StackArray.ELEMENT_SIZE*2) : 0)];\r\n    }\r\n\r\n    allInPosition() {\r\n        let moving = false;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i] && this.backingArray[i].displacement() > 0) {\r\n                moving = true;\r\n            }\r\n        }\r\n        if (this.copyArray) {\r\n            for (let i = 0; i < this.copyArray.length; i++) {\r\n                if (this.copyArray[i] && this.copyArray[i].displacement() > 0) {\r\n                    moving = true;\r\n                }\r\n            }\r\n        }\r\n        return !moving;\r\n    }\r\n\r\n    updateElement(element, animationSpeed, p5) {\r\n        if (element) {\r\n            element.update(animationSpeed, p5);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                this.updateElement(this.backingArray[i], animationSpeed, p5);\r\n            }\r\n            if (this.copyArray) {\r\n                for (let i = 0; i < this.copyArray.length; i++) {\r\n                    this.updateElement(this.copyArray[i], animationSpeed, p5);\r\n                }\r\n            }\r\n            if (this.tempElement) {\r\n                this.updateElement(this.tempElement, animationSpeed, p5);\r\n            }\r\n            this.topPointerHighlighter.update(animationSpeed, p5);\r\n            if (this.resizing && this.allInPosition()) {\r\n                if (!this.animating && this.animationQueue.length === 0) {\r\n                    this.animator.noLoop();\r\n                }\r\n                this.resizing = false;\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        super.draw(p5);\r\n        // console.log(\"draw\");\r\n        p5.push();\r\n        // let maxPerRow = Math.max(1, Math.floor((p5.width - 2 * this.x) / StackArray.ELEMENT_SIZE));\r\n        // let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        // p5.translate(this.x,this.y+50);\r\n        //\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_SIZE/3 - 2);\r\n        //\r\n        // for (let row = 0; row < rows; row++) {\r\n        //     let numElements = row !== rows-1 ? maxPerRow\r\n        //             : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n        //     p5.noStroke();\r\n        //     p5.fill(200);\r\n        //     p5.rect(StackArray.ELEMENT_SIZE/10,StackArray.ELEMENT_SIZE/10 + (2 * StackArray.ELEMENT_SIZE * row),StackArray.ELEMENT_SIZE*numElements,StackArray.ELEMENT_SIZE,StackArray.ELEMENT_SIZE/20);\r\n        //\r\n        //     p5.stroke(0);\r\n        //     p5.fill(255);\r\n        //     p5.rect(0,(2 * StackArray.ELEMENT_SIZE * row), StackArray.ELEMENT_SIZE*numElements,StackArray.ELEMENT_SIZE);\r\n        // }\r\n        //\r\n        // let i = 0;\r\n        // for (let row = 0; row < rows; row++) {\r\n        //     let numElements = row !== rows-1 ? maxPerRow\r\n        //             : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n        //     let x = 0;\r\n        //     let y = 2 * row * StackArray.ELEMENT_SIZE;\r\n        //     for (let block = 0; block < numElements; block++) {\r\n        //         p5.stroke(0);\r\n        //         p5.line(x,y, x, y+StackArray.ELEMENT_SIZE);\r\n        //\r\n        //         p5.noStroke();\r\n        //         p5.fill(0,0,255);\r\n        //         p5.text(i.toString(), x,y+StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE,StackArray.ELEMENT_SIZE);\r\n        //         //\r\n        //         // let element = this.backingArray[i++];\r\n        //         i++;\r\n        //         let nextX = block < (numElements - 1) ? x + StackArray.ELEMENT_SIZE : 0;\r\n        //         let nextY = block < (numElements - 1) ? y : (y + (StackArray.ELEMENT_SIZE*2));\r\n        //         // if (element.data) {\r\n        //         //     element.draw(p5, x,y,nextX,nextY);\r\n        //         // }\r\n        //         x = nextX;\r\n        //         y = nextY;\r\n        //         // if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - StackArray.ELEMENT_SIZE) {\r\n        //         //     // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n        //         // }\r\n        //     }\r\n        // }\r\n        //\r\n        // p5.translate(-this.x, -this.y - 50);\r\n\r\n        p5.fill(0);\r\n        p5.text(\"Top: \", StackArray.TOP_LOCATION_X - 50, StackArray.TOP_LOCATION_Y, StackArray.ELEMENT_SIZE);\r\n\r\n        p5.text(this.topPointerValue.toString(), StackArray.TOP_LOCATION_X-25, StackArray.TOP_LOCATION_Y, StackArray.ELEMENT_SIZE);\r\n\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].draw(p5);\r\n            }\r\n            let pos = this.getElementPosition(i);\r\n            p5.noFill();\r\n            p5.stroke(0);\r\n            p5.square(pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE);\r\n            p5.fill(...Colors.BLUE);\r\n            p5.stroke(...Colors.BLUE);\r\n            p5.text(i.toString(), pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] + StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n        }\r\n\r\n        if (this.copyArray) {\r\n            for (let i = 0; i < this.copyArray.length; i++) {\r\n                if (this.copyArray[i]) {\r\n                    this.copyArray[i].draw(p5);\r\n                }\r\n                let pos = this.getElementPosition(i, true);\r\n                p5.noFill();\r\n                p5.stroke(0);\r\n                p5.square(pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE);\r\n                p5.fill(...Colors.BLUE);\r\n                p5.stroke(...Colors.BLUE);\r\n                p5.text(i.toString(), pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] + StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n            }\r\n        }\r\n        if (this.tempElement) {\r\n            this.tempElement.draw(p5);\r\n        }\r\n        this.topPointerHighlighter.draw(p5);\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (this.copyArray ? this.getElementPosition(this.copyArray.length-1, true)[1] : this.getElementPosition(this.backingArray.length-1)[1]) + StackArray.ELEMENT_SIZE);\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].shift(...this.getElementPosition(i));\r\n            }\r\n        }\r\n        this.resizing = true;\r\n        this.animator.loop();\r\n    }\r\n}\r\n\r\n\r\nclass StackArrayElement extends AttractedHighlightableObject {\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        // this.highlightInnerRadius = StackArray.ELEMENT_SIZE/2 - 5;\r\n        this.highlightOuterRadius = StackArray.ELEMENT_SIZE/2;\r\n\r\n        this.value = data;\r\n        this.index = index;\r\n\r\n        this.toDelete = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    highlightForMovement() {\r\n        super.highlight(Colors.BLUE);\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        super.highlight(Colors.RED);\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(animationSpeed, p5);\r\n    }\r\n\r\n    drawValue(p5) {\r\n        p5.push();\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.stroke(...this.color);\r\n        p5.text(this.value.toString(), this.currentX - StackArray.ELEMENT_SIZE/2,this.currentY - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueArray.ITEM_WIDTH + QueueArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueArray.ELEMENT_SIZE);\r\n        let x = QueueArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueArray.ITEM_WIDTH, QueueArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueArray.ELEMENT_WIDTH,QueueArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ITEM_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeArray.ITEM_WIDTH + DequeArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeArray.ELEMENT_SIZE);\r\n        let x = DequeArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeArray.ITEM_WIDTH, DequeArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeArray.ELEMENT_WIDTH,DequeArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ITEM_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils, Colors } from 'utils';\r\n\r\nexport default class StackLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_NO_LOOP = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n    static SUPPORTS_TEXT = true;\r\n    // static SUPPORTS_ANIMATION_CONTROL = true;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = StackLinkedList.ITEM_WIDTH + StackLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n        this.made = true;\r\n    }\r\n\r\n    reset() {\r\n        if (this.made) {\r\n            this.beginDrawLoop();\r\n        }\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n\r\n        this.resizing = false;\r\n        if (this.made) {\r\n            this.updateText(\"Animation Ready\");\r\n            this.endDrawLoop();\r\n        }\r\n    }\r\n\r\n\r\n    push(data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (data === null) {\r\n            this.updateText(\"Cannot add null to Stack.\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        animation.push({method:this.makeNode,params:[data,],explanation:`Create value: ${data}`,});\r\n        animation.push({method:this.setTempNodeBefore,params:[this.head,],explanation:`Assign next pointer`,});\r\n        if (this.size > 0) {\r\n            animation.push({method:this.shiftForNode,params:[this.head,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[],explanation:`Reset top pointer to new head`,});\r\n        animation.push({method:this.shiftHead,params:[],});\r\n        animation.push({method:this.sizeIncr,params:[],noAnim:true,});\r\n        this.addAnimation(animation);\r\n        this.updateText(`Successfully pushed ${data} to stack.`, Colors.GREEN);\r\n        this.endDrawLoop();\r\n        return true;\r\n    }\r\n\r\n\r\n    pop() {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        let index = 0;\r\n        if (this.size === 0) {\r\n            this.updateText(\"Cannot pop empty Stack\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else {\r\n            let node = this.head;\r\n            animation.push({method:this.moveHighlight,params:[null,node,],});\r\n            for (let i = 0; i < index - 1; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                node = node.next;\r\n            }\r\n            prev = node;\r\n            toDelete = prev.next;\r\n            next = toDelete.next;\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.updateText(`Successfully popped ${data} from stack.`, Colors.GREEN);\r\n        this.endDrawLoop();\r\n        return data;\r\n    }\r\n\r\n\r\n    makeNode(data) {\r\n        this.tempNode = new StackLinkedListNode({data: data, index: 0, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    insertTempNode() {\r\n        this.nodes.splice(0, 0, this.tempNode);\r\n        this.head = this.tempNode;\r\n    }\r\n\r\n    shiftHead() {\r\n        this.tempNode.shift(...this.getNodePosition(0));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / StackLinkedList.ELEMENT_SIZE));\r\n        let x = StackLinkedList.ELEMENT_SIZE * index;\r\n        let y = 75 + Math.floor(index / maxPerRow) * 2 * StackLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * StackLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        super.draw(p5);\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        // p5.noFill();\r\n        p5.stroke(0);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.text(\"Top:\",95,20,35,35);\r\n        p5.square(130,20,35);\r\n        if (this.head) {\r\n            p5.stroke(Colors.BLUE);\r\n            p5.fill(Colors.BLUE);\r\n            p5.circle(130 + 35 / 2, 20 + 35 / 2, 5);\r\n            p5.line(130 + 35 / 2, 20 + 35 / 2, this.head.currentX + StackLinkedList.ITEM_WIDTH / 2, this.head.currentY);\r\n            p5.rect(this.head.currentX + StackLinkedList.ITEM_WIDTH / 2 - 3, this.head.currentY - 3, 6,6);\r\n        } else {\r\n            p5.line(130,20,165,55);\r\n        }\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + StackLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass StackLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + StackLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + StackLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > StackLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > StackLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, StackLinkedList.ITEM_WIDTH, StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, StackLinkedList.ELEMENT_WIDTH,StackLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ITEM_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueLinkedList.ITEM_WIDTH + QueueLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueLinkedList.ELEMENT_SIZE);\r\n        let x = QueueLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueLinkedList.ITEM_WIDTH, QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueLinkedList.ELEMENT_WIDTH,QueueLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ITEM_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeLinkedList.ITEM_WIDTH + DequeLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeLinkedList.ELEMENT_SIZE);\r\n        let x = DequeLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeLinkedList.ITEM_WIDTH, DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeLinkedList.ELEMENT_WIDTH,DequeLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ITEM_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport Sketch from 'react-p5';\r\nimport './visualizer.scss';\r\n\r\nimport ControlBar from './controlBar';\r\n\r\nimport { ControlBuilder, Utils } from 'utils';\r\nimport { Animator } from 'animation';\r\n\r\nexport default class Visualizer extends PureComponent {\r\n\r\n    static INITIAL_SPEED = 50;\r\n    static MAX_SPEED = 20;\r\n    static SPEED_SLIDER_DEGREE = 1.5;\r\n\r\n    static maxAnimationSpeed() {\r\n        return Math.pow(Visualizer.MAX_SPEED, Visualizer.SPEED_SLIDER_DEGREE);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.setup = this.setup.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.mousePressed = this.mousePressed.bind(this);\r\n        this.touchMoved = this.touchMoved.bind(this);\r\n        this.mouseReleased = this.mouseReleased.bind(this);\r\n        this.windowResized = this.windowResized.bind(this);\r\n\r\n\r\n        this.controlBarRef = React.createRef();\r\n\r\n        this.controlGroups = [];\r\n        this.defaultControlGroups = [];\r\n        this.controls = [];\r\n\r\n        // this.animationSpeed = Visualizer.INITIAL_SPEED;\r\n\r\n        this.onAnimStart = this.onAnimStart.bind(this);\r\n        this.onAnimEnd = this.onAnimEnd.bind(this);\r\n        this.animating = false;\r\n\r\n        this.focusedElement = null;\r\n\r\n        this.animator = new Proxy(new Animator(), {\r\n            get: function (target, propertyName, receiver) {\r\n                if (!target[propertyName]) {\r\n                    return () => target.emit(propertyName);\r\n                } else {\r\n                    return target[propertyName];\r\n                }\r\n            }\r\n        });\r\n        this.animator.on(\"anim-start\", this.onAnimStart);\r\n        this.animator.on(\"anim-end\", this.onAnimEnd);\r\n\r\n        this.addDefaultControls();\r\n    }\r\n\r\n    addDefaultControls() {\r\n        this.speedSlider = ControlBuilder.createSlider(1, Visualizer.MAX_SPEED, Math.pow(Visualizer.INITIAL_SPEED,1/Visualizer.SPEED_SLIDER_DEGREE), 0);\r\n        let sliderLabel = ControlBuilder.createLabel(\"Animation Speed\", this.speedSlider);\r\n        let speedSliderGroup = ControlBuilder.createControlGroup(\"speedSliderGroup\", this.speedSlider, sliderLabel);\r\n        let extraGroups = []\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_ANIMATION_CONTROL) {\r\n            let skipBackButton = ControlBuilder.createButton(\"Skip Back\");\r\n            skipBackButton.addEventListener(\"click\", () => {\r\n                this.visualization.skipBack();\r\n            });\r\n            let stepBackButton = ControlBuilder.createButton(\"Step Back\");\r\n            stepBackButton.addEventListener(\"click\", () => {\r\n                this.visualization.stepBack();\r\n            });\r\n            let playPauseButton = ControlBuilder.createButton(\"Pause\");\r\n            playPauseButton.addEventListener(\"click\", () => {\r\n                // this.visualization.playPause();\r\n                playPauseButton.setAttribute(\"value\", playPauseButton.getAttribute(\"value\") === \"Pause\" ? \"Play\" : \"Pause\");\r\n            });\r\n            let stepForwardButton = ControlBuilder.createButton(\"Step Forward\");\r\n            stepForwardButton.addEventListener(\"click\", () => {\r\n                this.visualization.stepForward();\r\n            });\r\n            let skipForwardButton = ControlBuilder.createButton(\"Skip Forward\");\r\n            skipForwardButton.addEventListener(\"click\", () => {\r\n                this.visualization.skipForward();\r\n            });\r\n            extraGroups.push(ControlBuilder.createControlGroup(\"stepButtonGroup\",skipBackButton,stepBackButton,playPauseButton,stepForwardButton,skipForwardButton));\r\n            let animationControls = ControlBuilder.createControlGroup(\"animationControls\",...extraGroups);\r\n            ControlBuilder.applyStyle(animationControls,\"width\",\"441px\");\r\n            this.defaultControlGroups.push(animationControls);\r\n        }\r\n        this.defaultControlGroups.push(speedSliderGroup);\r\n        this.defaultsLabel = \"Animation controls\";\r\n    }\r\n\r\n    addControlLabel(label) {\r\n        this.mainLabel = label;\r\n    }\r\n\r\n    addControlGroups(...controlGroups) {\r\n        // console.log(\"control added\");\r\n        this.controlGroups.push(...controlGroups);\r\n        controlGroups.forEach((controlGroup) => {\r\n            if (controlGroup.tagName === \"INPUT\") {\r\n                this.controls.push(controlGroup);\r\n            } else {\r\n                this.registerControlGroup(controlGroup);\r\n            }\r\n        });\r\n    }\r\n\r\n    registerControlGroup(controlGroup) {\r\n        controlGroup.childNodes.forEach((child) => {\r\n            if (child.tagName === \"INPUT\") {\r\n                this.controls.push(child);\r\n            } else {\r\n                this.registerControlGroup(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    onAnimStart() {\r\n        this.disableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            // this.animator.loop();\r\n        }\r\n        this.animating = true;\r\n    }\r\n\r\n    onAnimEnd() {\r\n        this.enableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            // this.animator.noLoop();\r\n        }\r\n        this.animating = false;\r\n    }\r\n\r\n    disableUI() {\r\n        // console.log(\"disable\");\r\n        this.controls.forEach((control) => {\r\n            if (control === document.activeElement) {\r\n                this.focusedElement = control;\r\n            }\r\n            control.disabled = true;\r\n        });\r\n    }\r\n\r\n    enableUI() {\r\n        // console.log(\"enable\");\r\n        this.controls.forEach((control) => {\r\n            control.disabled = false;\r\n            if (control === this.focusedElement) {\r\n                control.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        callForward();\r\n        if (Utils.isDev()) {\r\n            window[this.class] = this.visualization;\r\n        }\r\n        this.controlBar = this.controlBarRef.current;\r\n        this.controlBar.setMainLabel(this.mainLabel);\r\n        this.controlBar.setDefaultsLabel(this.defaultsLabel);\r\n        this.defaultControlGroups.forEach((defaultGroup) => {\r\n            this.controlBar.addDefaultGroup(defaultGroup);\r\n        });\r\n        this.controlGroups.forEach((controlGroup) => {\r\n            this.controlBar.addControlGroup(controlGroup);\r\n        });\r\n        this.mounted = true;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"update\");\r\n    }\r\n\r\n    setup(p5, canvasParentRef) {\r\n        // let width = this.controlBar.controlBar.current.getBoundingClientRect().width;\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n\r\n        this.mobile = window.ontouchstart !== undefined;\r\n        if (this.mobile) {\r\n            height = 1000;\r\n            // document.querySelector(\".canvas-container\").style.height = height + \"px\";\r\n            document.querySelector(\".canvas-container\").classList.add(\"mobile\");\r\n        }\r\n\r\n        //config\r\n        let canvas = p5.createCanvas(p5.windowWidth\r\n            ,height);\r\n        canvas.parent(canvasParentRef);\r\n        //\r\n        // canvas.touchStarted((event) => {\r\n        //     console.log(\"touchdown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         event.preventDefault();\r\n        //     }\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchMoved((event) => {\r\n        //     console.log(\"touchmove\");\r\n        //     if (!this.touchMoved(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        //     return true;\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchEnded(() => {\r\n        //     console.log(\"touchup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // canvas.mousePressed(() => {\r\n        //     console.log(\"mousedown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        // });\r\n        // canvas.mouseReleased(() => {\r\n        //     console.log(\"mouseup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // p5.background(200);\r\n        // p5.frameRate(8);\r\n\r\n        // document.addEventListener(\"resize\", (event) => {\r\n        //     console.log(\"resize\");\r\n        // });\r\n        this.animator.on(\"noLoop\", () => {\r\n            // console.log(\"noLoop\");\r\n            p5.noLoop();\r\n        });\r\n        this.animator.on(\"loop\", () => {\r\n            // console.log(\"loop\");\r\n            p5.loop();\r\n        });\r\n        this.windowResized(p5);\r\n\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            this.animator.noLoop();\r\n        }\r\n    }\r\n    draw(p5) {\r\n        //inputs\r\n        let animationSpeed = Math.pow(this.speedSlider.value,Visualizer.SPEED_SLIDER_DEGREE);\r\n\r\n        p5.background(255);\r\n\r\n        //objects\r\n        this.visualization.update(animationSpeed, p5);\r\n        this.visualization.draw(p5);\r\n        // if (!this.animating) {\r\n        //     if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n        //         this.animator.noLoop();\r\n        //     }\r\n        // }\r\n    }\r\n    mousePressed(p5) {\r\n        if (this.visualization.mousePressed) {\r\n            // console.log(\"down\");\r\n            //let pressed =\r\n            this.visualization.mousePressed(p5);\r\n            // console.log(pressed);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    touchMoved(p5) {\r\n        if (this.visualization.touchMoved) {\r\n            // console.log(\"move\");\r\n            return this.visualization.touchMoved();\r\n        }\r\n        return true;\r\n    }\r\n    mouseReleased(p5) {\r\n        if (this.visualization.mouseReleased) {\r\n            // console.log(\"up\");\r\n            //let released =\r\n            this.visualization.mouseReleased(p5);\r\n            // console.log(released);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    windowResized(p5) {\r\n        // console.log(\"resize\");\r\n        //config\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n        if (this.mobile) {\r\n            // height = 1000;\r\n        }\r\n        // height = document.querySelector(\".react-p5\").getBoundingClientRect().height;\r\n        document.querySelector(\".canvas-container\").style.height = height+\"px\";\r\n        height = document.querySelector(\".canvas-container\").getBoundingClientRect().height;\r\n        // console.log(height);\r\n        // p5.resizeCanvas(p5.windowWidth, p5.height);\r\n\r\n        //objects\r\n        let numScrollbars = this.controlBar.windowResized();\r\n        this.visualization.windowResized(p5, height, numScrollbars);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div className={`visualizer ${this.class}`}>\r\n                    <ControlBar ref={this.controlBarRef}/>\r\n                    {\r\n                        this.constructor.VISUALIZATION_CLASS.USE_CANVAS ?\r\n                                <div className=\"canvas-container\">\r\n                                    {\r\n                                        this.mounted ?\r\n                                                <Sketch setup={this.setup} draw={this.draw} windowResized={this.windowResized} mousePressed={this.mousePressed} mouseReleased={this.mouseReleased} touchStarted={this.mousePressed} touchEnded={this.mouseReleased} touchMoved={this.touchMoved}/>\r\n                                            :\r\n                                                <p>Loading Sketch</p>\r\n                                    }\r\n                                </div>\r\n                            :\r\n                                <this.visualization.VISUALIZATION_CLASS />\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class ListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.list;\r\n        });\r\n    }\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { ArrayList } from 'animation';\r\nimport './arraylist.scss';\r\n\r\n\r\nexport default class ArrayListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = ArrayList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'arraylist';\r\n        super.addControlLabel(\"ArrayList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new ArrayList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { SinglyLinkedList } from 'animation';\r\nimport './singly-linked-list.scss';\r\n\r\n\r\nexport default class SinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = SinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'singlylinkedlist';\r\n        super.addControlLabel(\"SinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new SinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { DoublyLinkedList } from 'animation';\r\nimport './doubly-linked-list.scss';\r\n\r\n\r\nexport default class DoublyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = DoublyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'doublylinkedlist';\r\n        super.addControlLabel(\"DoublyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new DoublyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { CircularSinglyLinkedList } from 'animation';\r\nimport './circular-singly-linked-list.scss';\r\n\r\nexport default class CircularSinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = CircularSinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'circularsinglylinkedlist';\r\n        super.addControlLabel(\"CircularSinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new CircularSinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './lists.scss';\r\n\r\nimport ArrayListVisualizer from './arraylist';\r\nimport SinglyLinkedListVisualizer from './singly-linked-list';\r\nimport DoublyLinkedListVisualizer from './doubly-linked-list';\r\nimport CircularSinglyLinkedListVisualizer from './circular-singly-linked-list';\r\n\r\nexport default function Lists(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <ListView url={url} />} />\r\n                <Route path={`${path}/arraylist`} component={ArrayListVisualizer} />\r\n                <Route path={`${path}/sll`} component={SinglyLinkedListVisualizer} />\r\n                <Route path={`${path}/dll`} component={DoublyLinkedListVisualizer} />\r\n                <Route path={`${path}/c-sll`} component={CircularSinglyLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction ListView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <h1 id=\"title\">Lists</h1>\r\n                <div className=\"links\">\r\n                    <Link to={`${path}/arraylist`}>ArrayList</Link>\r\n                    <Link to={`${path}/sll`}>SinglyLinkedList</Link>\r\n                    <Link to={`${path}/dll`}>DoublyLinkedList</Link>\r\n                    <Link to={`${path}/c-sll`}>CircularSinglyLinkedList</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class StackVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.pushButtonCallback = this.pushButtonCallback.bind(this);\r\n        this.popButtonCallback = this.popButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.stack = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.pushButton = ControlBuilder.createButton(\"push\");\r\n        this.pushButton.addEventListener(\"click\",this.pushButtonCallback);\r\n\r\n        this.popButton = ControlBuilder.createButton(\"pop\");\r\n        this.popButton.addEventListener(\"click\",this.popButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.pushButton, this.popButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.stack;\r\n        });\r\n    }\r\n\r\n\r\n    pushButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    popButtonCallback() {\r\n        this.stack.pop();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.stack.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.stack.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class QueueVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.enqueueButtonCallback = this.enqueueButtonCallback.bind(this);\r\n        this.dequeueButtonCallback = this.dequeueButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.queue = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.enqueueButton = ControlBuilder.createButton(\"enqueue\");\r\n        this.enqueueButton.addEventListener(\"click\",this.enqueueButtonCallback);\r\n\r\n        this.dequeueButton = ControlBuilder.createButton(\"dequeue\");\r\n        this.dequeueButton.addEventListener(\"click\",this.dequeueButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.enqueueButton, this.dequeueButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.queue;\r\n        });\r\n    }\r\n\r\n\r\n    enqueueButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeueButtonCallback() {\r\n        this.queue.dequeue();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.queue.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.queue.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class DequeVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addLastButtonCallback = this.addLastButtonCallback.bind(this);\r\n        this.addFirstButtonCallback = this.addFirstButtonCallback.bind(this);\r\n        this.removeFirstButtonCallback = this.removeFirstButtonCallback.bind(this);\r\n        this.removeLastButtonCallback = this.removeLastButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.deque = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.addLastButton = ControlBuilder.createButton(\"addLast (enqueue)\");\r\n        this.addLastButton.addEventListener(\"click\",this.addLastButtonCallback);\r\n\r\n        this.addFirstButton = ControlBuilder.createButton(\"addFirst (push)\");\r\n        this.addFirstButton.addEventListener(\"click\",this.addFirstButtonCallback);\r\n\r\n        this.removeFirstButton = ControlBuilder.createButton(\"removeFirst (dequeue/pop)\");\r\n        this.removeFirstButton.addEventListener(\"click\",this.removeFirstButtonCallback);\r\n\r\n        this.removeLastButton = ControlBuilder.createButton(\"removeLast\");\r\n        this.removeLastButton.addEventListener(\"click\",this.removeLastButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addButtonGroup = ControlBuilder.createControlGroup(\"addButtons\", this.addFirstButton, this.addLastButton);\r\n        let removeButtonGroup = ControlBuilder.createControlGroup(\"removeButtons\", this.removeFirstButton, this.removeLastButton);\r\n        let interactionGroup = ControlBuilder.createControlGroup(\"interactions\", this.valueField, addButtonGroup, removeButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(interactionGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.deque;\r\n        });\r\n    }\r\n\r\n\r\n    addLastButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addFirstButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addFirst(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFirstButtonCallback() {\r\n        this.deque.removeFirst();\r\n    }\r\n\r\n    removeLastButtonCallback() {\r\n        this.deque.removeLast();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.deque.reset();\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackArray } from 'animation';\r\nimport './stack-array.scss';\r\n\r\n\r\nexport default class StackArrayVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-array';\r\n        super.addControlLabel(\"Stack (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueArray } from 'animation';\r\nimport './queue-array.scss';\r\n\r\n\r\nexport default class QueueArrayVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-array';\r\n        super.addControlLabel(\"Queue (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeArray } from 'animation';\r\nimport './deque-array.scss';\r\n\r\n\r\nexport default class DequeArrayVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-array';\r\n        super.addControlLabel(\"Deque (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackLinkedList } from 'animation';\r\nimport './stack-linked-list.scss';\r\n\r\n\r\nexport default class StackLinkedListVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-linkedlist';\r\n        super.addControlLabel(\"Stack (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueLinkedList } from 'animation';\r\nimport './queue-linked-list.scss';\r\n\r\n\r\nexport default class QueueLinkedListVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-linkedlist';\r\n        super.addControlLabel(\"Queue (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeLinkedList } from 'animation';\r\nimport './deque-linked-list.scss';\r\n\r\n\r\nexport default class DequeLinkedListVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-linkedlist';\r\n        super.addControlLabel(\"Deque (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './stacks-queues-deques.scss';\r\n\r\nimport StackArrayVisualizer from './stack-array';\r\nimport QueueArrayVisualizer from './queue-array';\r\nimport DequeArrayVisualizer from './deque-array';\r\nimport StackLinkedListVisualizer from './stack-linked-list';\r\nimport QueueLinkedListVisualizer from './queue-linked-list';\r\nimport DequeLinkedListVisualizer from './deque-linked-list';\r\n\r\nexport default function StacksQueuesDeques(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <StackQueueDequeView url={url} />} />\r\n                <Route path={`${path}/stack-array`} component={StackArrayVisualizer} />\r\n                <Route path={`${path}/queue-array`} component={QueueArrayVisualizer} />\r\n                <Route path={`${path}/deque-array`} component={DequeArrayVisualizer} />\r\n                <Route path={`${path}/stack-linkedlist`} component={StackLinkedListVisualizer} />\r\n                <Route path={`${path}/queue-linkedlist`} component={QueueLinkedListVisualizer} />\r\n                <Route path={`${path}/deque-linkedlist`} component={DequeLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction StackQueueDequeView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <Link to={`${path}/stack-array`}>StackArray</Link>\r\n                <Link to={`${path}/queue-array`}>QueueArray</Link>\r\n                <Link to={`${path}/deque-array`}>DequeArray</Link>\r\n                <Link to={`${path}/stack-linkedlist`}>StackLinkedList</Link>\r\n                <Link to={`${path}/queue-linkedlist`}>QueueLinkedList</Link>\r\n                <Link to={`${path}/deque-linkedlist`}>DequeLinkedList</Link>\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport './datastructures.scss';\r\n\r\nimport Lists from 'components/lists';\r\nimport StacksQueuesDeques from 'components/stacks-queues-deques'\r\n\r\nexport default function DataStructures() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <DataStructureView url={url} />} />\r\n                <Route path={`${path}/lists`} component={Lists} />\r\n                <Route path={`${path}/stacks-queues-deques`} component={StacksQueuesDeques} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction DataStructureView(props) {\r\n    return (\r\n            <div className=\"datastructure-view\">\r\n            </div>\r\n        );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainComponent from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<MainComponent />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport './app.scss';\r\nimport './universal.scss';\r\n\r\nimport AppHeader from './app-header';\r\nimport AppFooter from './app-footer';\r\nimport Home from 'components/home';\r\nimport About from 'components/about';\r\nimport DataStructures from 'components/datastructures';\r\n\r\nexport default function App() {\r\n    return (\r\n            <HashRouter basename='/'>\r\n                <div className=\"app\">\r\n                    <AppHeader />\r\n                    <div className=\"app-content\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/datastructures\" component={DataStructures} />\r\n                        </Switch>\r\n                    </div>\r\n                    <AppFooter />\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n}\r\n"],"sourceRoot":""}