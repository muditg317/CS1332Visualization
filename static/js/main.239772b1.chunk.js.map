{"version":3,"sources":["res/images/logo.svg","components/app/nav-bar/nav-bar.jsx","components/app/app-header/app-header.jsx","components/app/app-footer/app-footer.jsx","components/home/home.jsx","components/about/about.jsx","components/visualizer/controlBar/controlBar.jsx","utils/ControlBuilder.js","utils/Colors.js","utils/Utils.js","animation/AnimatedObject.js","animation/AttractedDraggableObject.js","animation/AttractedHighlightableObject.js","animation/Animator.js","animation/Visualization.js","animation/ArrayList/ArrayList.js","animation/SinglyLinkedList/SinglyLinkedList.js","animation/DoublyLinkedList/DoublyLinkedList.js","animation/CircularSinglyLinkedList/CircularSinglyLinkedList.js","animation/StackArray/StackArray.js","animation/QueueArray/QueueArray.js","animation/DequeArray/DequeArray.js","animation/StackLinkedList/StackLinkedList.js","animation/QueueLinkedList/QueueLinkedList.js","animation/DequeLinkedList/DequeLinkedList.js","components/visualizer/visualizer.jsx","components/lists/list-ADT.jsx","components/lists/arraylist/arraylist.jsx","components/lists/singly-linked-list/singly-linked-list.jsx","components/lists/doubly-linked-list/doubly-linked-list.jsx","components/lists/circular-singly-linked-list/circular-singly-linked-list.jsx","components/lists/lists.jsx","components/stacks-queues-deques/stack-ADT.jsx","components/stacks-queues-deques/queue-ADT.jsx","components/stacks-queues-deques/deque-ADT.jsx","components/stacks-queues-deques/stack-array/stack-array.jsx","components/stacks-queues-deques/queue-array/queue-array.jsx","components/stacks-queues-deques/deque-array/deque-array.jsx","components/stacks-queues-deques/stack-linked-list/stack-linked-list.jsx","components/stacks-queues-deques/queue-linked-list/queue-linked-list.jsx","components/stacks-queues-deques/deque-linked-list/deque-linked-list.jsx","components/stacks-queues-deques/stacks-queues-deques.jsx","components/datastructures/datastructures.jsx","serviceWorker.js","index.js","components/app/app.jsx"],"names":["module","exports","NavBar","props","state","responsive","document","body","scrollTop","documentElement","console","log","this","setState","id","className","to","window","location","href","substring","indexOf","length","src","logo","alt","nav_items","map","nav_item","key","link","content","onClick","toggleResponsiveNav","Component","NavBarItem","icon","title_text","drop_down_items","selfRef","React","createRef","showDropDown","clear","bind","show","setShowDropDown","ref","parentRef","parent","items","parentRoute","NavBarItemTitle","parentNavItem","handleDocumentClick","onMouseDown","containingNavItemRef","addEventListener","removeEventListener","event","current","contains","target","e","nativeEvent","which","hash","NavBarDropDown","drop_down_item","NavBarDropDownItem","side_pane_items","showSidePane","toggleShowSidePane","setShowSidePane","NavBarDropDownItemTitle","parentDropDownItem","containingDropDownItemRef","NavBarSidePane","side_pane_item","NavBarSideItem","AppHeader","AppFooter","Home","About","ControlBar","defaultContainer","defaults","mainContainer","controlBar","label","defaultsLabel","forceUpdate","mainLabel","controlGroup","appendChild","transformed","getBoundingClientRect","width","parseFloat","getComputedStyle","getPropertyValue","classList","add","remove","testSize","PureComponent","newEmptyControl","emptyControl","createElement","applyStyle","createControl","type","value","newControl","setAttribute","createButton","createField","prompt","field","validators","forEach","validator","validatorIntOnly","match","reduce","sum","char","validatorMaxLength","maxLength","Math","min","addSubmit","callback","undefined","createSlider","max","defaultValue","step","slider","createControlGroup","controls","control","setTabControl","nextControl","shifted","preventDefault","blur","focus","styleType","style","RED","GREEN","BLUE","BLACK","WHITE","addArray","array","newArr","arrays","item","i","isDev","process","AnimatedObject","xProgress","yProgress","direction","animationSpeed","inPosition","sign","AttractedDraggableObject","x","y","currentX","currentY","desiredX","desiredY","vx","vy","frozen","onStop","pinnedToMouse","mouseOffsetX","mouseOffsetY","sqrt","pow","push","shift","mouseX","mouseY","constructor","CAN_DRAG","p5","deltaX","deltaY","isNaN","stop","angle","atan","PI","magnitude","ATTRACTION","prevAngle","cos","sin","abs","MIN_DISTANCE","AttractedHighlightableObject","options","highlighted","highlightColor","Colors","highlightShape","HIGHLIGHT_CIRCLE","Object","entries","option","color","shape","stroke","noFill","strokeWeight","HIGHTLIGHT_WIDTH","diameter","highlightInnerRadius","highlightOuterRadius","circle","HIGHLIGHT_SQUARE","square","pop","textAlign","CENTER","fill","radius","text","toString","drawHighlight","drawValue","Animator","events","objects","connectingEdges","filter","Visualization","animator","SUPPORTS_TEXT","displayText","displayTextColor","showText","updateText","animationHistory","animationQueue","animating","SUPPORTS_NO_LOOP","beginDrawLoop","endDrawLoop","method","params","animation","emit","scope","time","setTimeout","callForward","SET_BOUNDS","height","popAnimation","noAnim","retVal","apply","isAnimStart","runningAnimation","isAnimEnd","explanation","explanationUsesReturn","replace","SUPPORTS_CUSTOM_END","noAnimation","customEnd","floor","Visualizer","maxAnimationSpeed","doneAnimating","MAX_ANIM_TIME","loop","noLoop","textSize","LEFT","TOP","numScrollbars","maxY","windowWidth","querySelector","resizeCanvas","ArrayList","reset","backingArray","INITIAL_CAPACITY","ArrayElement","size","index","data","doubleSize","shiftForIndex","setIndex","sizeIncr","addAnimation","addAtIndex","element","shiftIntoIndex","sizeDecr","removeFromIndex","resetElement","incrLength","shiftElement","shiftElementMovement","shiftElementIndex","ELEMENT_SIZE","update","foundAnimElement","maxPerRow","rows","ceil","translate","row","numElements","noStroke","rect","block","line","nextX","nextY","draw","USE_CANVAS","toX","toY","posX","posY","SinglyLinkedList","head","nodes","tempNode","pinnedNode","node","nextNode","moveHighlight","next","makeNode","setTempNodeBefore","setTempNodePrev","shiftForNode","insertTempNode","prev","toDelete","markNodeForDeletion","unmakeNode","shiftIntoNode","skipTempNode","SinglyLinkedListNode","splice","getNodePosition","fromNode","toNode","unHighlight","highlight","nodeToDelete","markForDeletion","addOnStop","shiftNode","ELEMENT_HEIGHT","containsPos","pin","unpin","markBroken","highlightForDeletion","updateNode","ELEMENT_WIDTH","pressedNode","getNodeAtPos","POINTER_WIDTH","ITEM_WIDTH","SPACING","MAX_DIST_REMOVE","handBroken","displacement","dist","Utils","DoublyLinkedList","tail","skipTempNodePrev","skipTempNodeNext","DoublyLinkedListNode","ELEMENT_PADDED_WIDTH","CircularSinglyLinkedList","changeHeadData","customNodeShift","resetHead","CircularSinglyLinkedListNode","unfreeze","pointsToHead","curveTightness","beginShape","curveVertex","endShape","StackArray","made","Array","copyArray","tempElement","topPointerValue","topPointerHighlighter","TOP_LOCATION_X","TOP_LOCATION_Y","resizing","createCopyArray","makeElement","useTopPointer","highlightTemp","insertElement","updateTopPointer","extractElement","unmakeElement","initCopyArray","addItemToCopy","useCopyArr","pos","getElementPosition","StackArrayElement","customEndingElementShift","assignCopyArray","shiftElementToBackingArray","immediateHighlight","highlightForMovement","moveTopTracker","unhighlight","goTo","copy","changeTopPointerValue","moving","updateElement","allInPosition","QueueArray","DequeArray","StackLinkedList","QueueLinkedList","DequeLinkedList","setup","mousePressed","touchMoved","mouseReleased","windowResized","controlBarRef","controlGroups","onAnimStart","onAnimEnd","focusedElement","Proxy","get","propertyName","receiver","on","addDefaultControls","MAX_SPEED","SPEED_SLIDER_DEGREE","speedSlider","ControlBuilder","INITIAL_SPEED","defaultControlGroup","tagName","registerControlGroup","childNodes","child","disableUI","VISUALIZATION_CLASS","enableUI","activeElement","disabled","class","visualization","setMainLabel","setDefaultsLabel","addDefaultGroup","addControlGroup","mounted","prevProps","prevState","canvasParentRef","mobile","ontouchstart","createCanvas","background","touchStarted","touchEnded","ListVisualizer","addAtIndexButtonCallback","addToFrontButtonCallback","addToBackButtonCallback","removeFromIndexButtonCallback","removeFromFrontButtonCallback","removeFromBackButtonCallback","resetButtonCallback","elementFieldCallback","indexFieldCallback","list","addControls","valueField","indexField","addAtIndexButton","addToFrontButton","addToBackButton","removeFromIndexButton","removeFromFrontButton","removeFromBackButton","resetButton","addFrontBackGroup","removeFrontBackGroup","valueFrontBackGroup","indexGroup","resetGroup","parseInt","addToBack","addToFront","removeFromFront","removeFromBack","ArrayListVisualizer","SinglyLinkedListVisualizer","DoublyLinkedListVisualizer","CircularSinglyLinkedListVisualizer","Lists","useRouteMatch","path","url","exact","component","ListView","StackVisualizer","pushButtonCallback","popButtonCallback","stack","pushButton","popButton","interactionButtonGroup","mainControlGroup","peek","QueueVisualizer","enqueueButtonCallback","dequeueButtonCallback","queue","enqueueButton","dequeueButton","enqueue","dequeue","DequeVisualizer","addLastButtonCallback","addFirstButtonCallback","removeFirstButtonCallback","removeLastButtonCallback","deque","addLastButton","addFirstButton","removeFirstButton","removeLastButton","addButtonGroup","removeButtonGroup","interactionGroup","addLast","addFirst","removeFirst","removeLast","StackArrayVisualizer","QueueArrayVisualizer","DequeArrayVisualizer","StackLinkedListVisualizer","QueueLinkedListVisualizer","DequeLinkedListVisualizer","StacksQueuesDeques","StackQueueDequeView","DataStructures","DataStructureView","Boolean","hostname","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.239772b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d46fc74.svg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav-bar.scss';\r\n\r\nimport logo from 'res/images/logo.svg';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            responsive: false,\r\n        };\r\n    }\r\n\r\n    scrollToTop() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        console.log(\"scrolltotop\");\r\n    }\r\n\r\n    toggleResponsiveNav() {\r\n        this.setState((state) => {\r\n                return {\r\n                    responsive: !state.responsive,\r\n                };\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"top-nav\" className={`nav-bar ${this.state.responsive ? \"responsive\" : \"\"} nav-container`}>\r\n                    <Link className=\"not-a-button\" id=\"nav-logo\" to={window.location.href.substring(window.location.href.indexOf(\"/#/\")).length > 0 ? \"/\" : \"\" }><img src={logo} className=\"app-logo\" alt=\"logo\" /></Link>\r\n                    {this.props.nav_items.map( (nav_item) => {\r\n                        return (\r\n                                <NavBarItem key={`nav-${nav_item.link}`} content={nav_item} />\r\n                            );\r\n                    })}\r\n                    <button className=\"not-a-button nav-bar-item nav-item nav-item-title\" id=\"top-nav-menu\" onClick={() => this.toggleResponsiveNav()}><i className=\"fa fa-bars\"></i></button>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            icon: this.props.content.icon,\r\n            title_text: this.props.content.title_text,\r\n            drop_down_items: this.props.content.drop_down_items,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.drop_down_items) {\r\n            this.state.showDropDown = false;\r\n        }\r\n\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    setShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: show,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: !state.showDropDown,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setShowDropDown(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-item nav-item ${this.state.drop_down_items && this.state.showDropDown ? \"active\" : \"\"}`} ref={this.selfRef}>\r\n                    <NavBarItemTitle link={this.state.link} icon={this.state.icon} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.drop_down_items && this.state.showDropDown ?\r\n                        <NavBarDropDown items={this.state.drop_down_items} parentRoute={`/${this.state.link}`} parent={this} />\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            icon: this.props.icon,\r\n            title_text: this.props.title_text,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingNavItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingNavItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.state.containingNavItemRef.current && !this.state.containingNavItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentNavItem.setShowDropDown(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentNavItem.state.showDropDown) {\r\n                window.location.hash = `#/${this.state.parentNavItem.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentNavItem.setShowDropDown(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentNavItem.state.drop_down_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`/${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drop_down_items: this.props.items,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-drop-down nav-container\"> {\r\n                    this.state.drop_down_items.map( (drop_down_item) => {\r\n                    return (\r\n                            <NavBarDropDownItem key={`nav-${drop_down_item.link}`} content={drop_down_item} parent={this} parentRoute={this.props.parentRoute} />\r\n                        );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            side_pane_items: this.props.content.side_pane_items,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.side_pane_items) {\r\n            this.state.showSidePane = false;\r\n        }\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    setShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: show,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: !state.showSidePane,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown() {\r\n        this.toggleShowSidePane();\r\n    }\r\n\r\n    clear() {\r\n        this.setShowSidePane(false);\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-drop-down-item nav-item ${this.state.side_pane_items && this.state.showSidePane ? \"active\": \"\"}`} ref={this.selfRef}>\r\n                    <NavBarDropDownItemTitle link={this.state.link} parentRoute={this.state.parentRoute} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.side_pane_items && this.state.showSidePane ?\r\n                        <NavBarSidePane items={this.state.side_pane_items} parentRoute={`${this.props.parentRoute}/${this.state.link}`} parent={this}></NavBarSidePane>\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarDropDownItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            parentRoute: this.props.parentRoute,\r\n            title_text: this.props.title_text,\r\n            // containingDropDownItemRef: this.props.parentRef,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingDropDownItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingDropDownItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentDropDownItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingDropDownItemRef);\r\n        // console.log(this.state.containingDropDownItemRef.current);\r\n        if (this.state.containingDropDownItemRef.current && !this.state.containingDropDownItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentDropDownItem.setShowSidePane(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentDropDownItem.state.showSidePane) {\r\n                window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentDropDownItem.toggleShowSidePane();\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentDropDownItem.state.side_pane_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`}>{this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarSidePane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            side_pane_items: this.props.items,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-pane nav-container\"> {\r\n                    this.state.side_pane_items.map( (side_pane_item) => {\r\n                        return (\r\n                                <NavBarSideItem key={`nav-${side_pane_item.link}`} content={side_pane_item} parentRoute={this.props.parentRoute} parent={this} />\r\n                            );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nclass NavBarSideItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-item nav-item\">\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-side-pane-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './app-header.scss';\r\nimport NavBar from '../nav-bar';\r\n\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n            <header className=\"app-header\">\r\n                <NavBar nav_items={[\r\n                    {\r\n                        link: \"datastructures\",\r\n                        icon: \"sitemap\",\r\n                        title_text: \"Data Structures\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"lists\",\r\n                                title_text: \"Lists\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"arraylist\",\r\n                                        title_text: \"ArrayList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"sll\",\r\n                                        title_text: \"Singly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"dll\",\r\n                                        title_text: \"Doubly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"c-sll\",\r\n                                        title_text: \"Circular Singly LinkedList\",\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"stacks-queues-deques\",\r\n                                title_text: \"Stacks/Queues/Deques\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"stack-array\",\r\n                                        title_text: \"Stack (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"stack-linkedlist\",\r\n                                        title_text: \"Stack (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-array\",\r\n                                        title_text: \"Queue (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-linkedlist\",\r\n                                        title_text: \"Queue (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-array\",\r\n                                        title_text: \"Deque (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-linkedlist\",\r\n                                        title_text: \"Deque (LinkedList)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"trees-skiplist\",\r\n                                title_text: \"Trees and SkipList\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bst\",\r\n                                        title_text: \"Binary Search Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"heap-pq\",\r\n                                        title_text: \"Heap / Priority Queue\"\r\n                                    },\r\n                                    {\r\n                                        link: \"avl\",\r\n                                        title_text: \"AVL\"\r\n                                    },\r\n                                    {\r\n                                        link: \"24-tree\",\r\n                                        title_text: \"2-4 Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"splaytree\",\r\n                                        title_text: \"SplayTree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"skiplist\",\r\n                                        title_text: \"SkipList\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"hashmaps\",\r\n                                title_text: \"HashMaps\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"hashmap-probing\",\r\n                                        title_text: \"HashMap (Probing)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"hashmap-chaining\",\r\n                                        title_text: \"HashMap (Chaining)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"algorithms\",\r\n                        icon: \"stack-overflow\",\r\n                        title_text: \"Algorithms\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"sorting\",\r\n                                title_text: \"Sorting\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bubble\",\r\n                                        title_text: \"Bubble Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"cocktail\",\r\n                                        title_text: \"Cocktail Shaker Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"insertion\",\r\n                                        title_text: \"Insertion Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"selection\",\r\n                                        title_text: \"Selection Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quicksort\",\r\n                                        title_text: \"Quick Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quickselect\",\r\n                                        title_text: \"Quick Select\"\r\n                                    },\r\n                                    {\r\n                                        link: \"merge\",\r\n                                        title_text: \"Merge Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"lsd-radix\",\r\n                                        title_text: \"LSD Radix Sort\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"string-searching\",\r\n                                title_text: \"String Searching\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"brute-force\",\r\n                                        title_text: \"Brute Force\"\r\n                                    },\r\n                                    {\r\n                                        link: \"boyer-moore\",\r\n                                        title_text: \"Boyer Moore\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kmp\",\r\n                                        title_text: \"KMP\"\r\n                                    },\r\n                                    {\r\n                                        link: \"rabin-karp\",\r\n                                        title_text: \"Rabin Karp\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"graphs\",\r\n                                title_text: \"Graph Algorithms\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"breadth\",\r\n                                        title_text: \"Breadth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"depth\",\r\n                                        title_text: \"Depth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"dijkstra\",\r\n                                        title_text: \"Dijkstra's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"prim\",\r\n                                        title_text: \"Prim's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kruskal\",\r\n                                        title_text: \"Kruskal's\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"dynamic\",\r\n                                title_text: \"Dynamic Programming\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"lcs\",\r\n                                        title_text: \"LCS\"\r\n                                    },\r\n                                    {\r\n                                        link: \"floyd-warshall\",\r\n                                        title_text: \"Floyd-Warshall\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"about\",\r\n                        icon: \"user\",\r\n                        title_text: \"About\",\r\n                    },\r\n                ]} />\r\n            </header>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './app-footer.scss';\r\n\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n            <footer className=\"app-footer\">\r\n                <div className=\"footer-message\">\r\n                    <p>Created using ReactJS by Mudit Gupta for The Georgia Institute of Technology. Updated Feb. 16, 2020.</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './home.scss';\r\n\r\nexport default function Home() {\r\n    return (\r\n            <div className=\"home\">\r\n\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './about.scss';\r\n\r\nexport default function About() {\r\n    return (\r\n            <div className=\"about\">\r\n                <h1>About CS Vis</h1>\r\n                <p>I created this tool to visualize some of the alogirthms I've been learning in my classes.\r\n                Most of these visualizations are inspired by those found at <a href='https://csvistool.com'>csvistool.com</a>.\r\n                I tried to make the UX here as convenient as possible, but I'd love to hear your design input;\r\n                I'm not a front-end person, so I'm doing my best :).</p>\r\n            <p>Check out the <a href='https://github.com/muditg317/cs-vis'>Source Code here</a>!</p>\r\n                <h2>Me!</h2>\r\n                <p>This is something I wanted to make to learn more about these datastructures and algorithms while also learning how to use the ReactJS framework.\r\n                Check out some of my other projects at muditgupta.appspot.com</p>\r\n            </div>\r\n        );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './controlBar.scss';\r\n\r\nexport default class ControlBar extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.defaultContainer = React.createRef();\r\n        this.defaults = React.createRef();\r\n        this.mainContainer = React.createRef();\r\n        this.controlBar = React.createRef();\r\n    }\r\n\r\n    setDefaultsLabel(label) {\r\n        this.defaultsLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    setMainLabel(label) {\r\n        this.mainLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    addDefaultGroup(controlGroup) {\r\n        this.defaults.current.appendChild(controlGroup);\r\n    }\r\n\r\n    addControlGroup(controlGroup) {\r\n        this.controlBar.current.appendChild(controlGroup);\r\n    }\r\n\r\n    testSize() {\r\n        let transformed = 0;\r\n        if (this.controlBar.current.getBoundingClientRect().width\r\n                > (this.mainContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.mainContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.mainContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.mainContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        if (this.defaults.current.getBoundingClientRect().width\r\n                > (this.defaultContainer.current.getBoundingClientRect().width - 0*parseFloat(window.getComputedStyle(this.defaultContainer.current).getPropertyValue(\"padding\")))) {\r\n            this.defaultContainer.current.classList.add(\"overflow\");\r\n            transformed++;\r\n        } else {\r\n            this.defaultContainer.current.classList.remove(\"overflow\");\r\n        }\r\n        return transformed;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.testSize();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.testSize();\r\n    }\r\n\r\n    windowResized() {\r\n        return this.testSize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"control-bar\">\r\n                    <div className=\"control-container\" id=\"main-control\" ref={this.mainContainer}>\r\n                        <div className=\"control-wrapper\">\r\n                            {this.mainLabel && <p className=\"control-label\" id=\"main-control-label\">{this.mainLabel}</p>}\r\n                            <div className=\"controls control-group\"  ref={this.controlBar}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"control-container\" id=\"default-control\" ref={this.defaultContainer}>\r\n                        <div className=\"control-wrapper\">\r\n                            {// {this.defaultsLabel && <p className=\"control-label\" id=\"default-control-label\">{this.defaultsLabel}</p>}\r\n                            }\r\n                            <div className=\"controls default control-group\" ref={this.defaults}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","export function newEmptyControl() {\r\n    let emptyControl = document.createElement(\"input\");\r\n    applyStyle(emptyControl, \"visibility\", \"hidden\");\r\n    return emptyControl;\r\n}\r\n\r\nexport function createControl(type, value) {\r\n    let newControl = document.createElement(\"input\");\r\n    newControl.classList.add(\"visual-control\", type);\r\n\r\n    newControl.setAttribute(\"type\", type);\r\n    if (value) {\r\n        newControl.setAttribute(\"value\", value);\r\n    }\r\n\r\n    return newControl;\r\n};\r\n\r\nexport function createButton(label) {\r\n    let button = createControl(\"button\", label);\r\n\r\n    return button;\r\n};\r\n\r\nexport function createField(prompt, ...validators) {\r\n    let field = createControl(\"text\");\r\n    field.setAttribute(\"placeHolder\", prompt);\r\n\r\n    validators.forEach((validator) => {\r\n        field.addEventListener(\"input\", () => { validator(field); });\r\n    });\r\n\r\n    return field;\r\n};\r\n\r\nexport function validatorIntOnly() {\r\n    return (field) => {\r\n        let regex = /^(-[0-9])?[0-9]*/g;\r\n        field.value = field.value.match(regex).reduce((sum, char) => sum + char);\r\n    }\r\n};\r\n\r\nexport function validatorMaxLength(maxLength) {\r\n    return (field) => {\r\n        if (field.value.length > maxLength) {\r\n            field.value = field.value.substring(0, Math.min(field.value.length, maxLength));\r\n        }\r\n    };\r\n};\r\n\r\nexport function addSubmit(field, callback) {\r\n    if (field.type !== \"text\") {\r\n        console.log(\"cannot add callback to nontextfield\");\r\n        return;\r\n    }\r\n    if (callback === undefined) {\r\n        console.log(\"cannot set field submit to undefined callback\");\r\n        return;\r\n    }\r\n    field.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            // disableControls();\r\n            callback();\r\n        }\r\n    });\r\n};\r\n\r\nexport function createSlider(min, max, defaultValue, step) {\r\n    let slider = createControl(\"range\");\r\n\r\n    slider.setAttribute(\"min\", min);\r\n    slider.setAttribute(\"max\", max);\r\n    slider.setAttribute(\"step\", step === 0 ? \"1e-18\" : step);\r\n    slider.setAttribute(\"defaultValue\", defaultValue);\r\n    slider.value = defaultValue;\r\n\r\n    return slider;\r\n};\r\n\r\n\r\nexport function createControlGroup(id, ...controls) {\r\n    let controlGroup = document.createElement(\"div\");\r\n    controlGroup.setAttribute(\"class\", \"control-group\");\r\n    controlGroup.id = id;\r\n\r\n    controls.forEach((control) => {\r\n        controlGroup.appendChild(control);\r\n    });\r\n\r\n    return controlGroup;\r\n};\r\n\r\nexport function setTabControl(control, nextControl) {\r\n    if (control === undefined || nextControl === undefined) {\r\n        console.log(\"cannot link undefined controls\");\r\n        return;\r\n    }\r\n    enableShift();\r\n    control.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && (window.shifted !== undefined && !window.shifted)) {\r\n            event.preventDefault();\r\n            control.blur();\r\n            nextControl.focus();\r\n        }\r\n    });\r\n    nextControl.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && window.shifted) {\r\n            event.preventDefault();\r\n            nextControl.blur();\r\n            control.focus();\r\n        }\r\n    });\r\n};\r\n\r\nfunction enableShift() {\r\n    if (window.shifted === undefined) {\r\n        window.shifted = false;\r\n        window.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = true;\r\n            }\r\n        });\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = false;\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport function applyStyle(control, styleType, value) {\r\n    control.style[styleType] = value;\r\n}\r\n","export const RED = [255,0,0];\r\nexport const GREEN = [60, 181, 60];\r\nexport const BLUE = [0,0,255];\r\nexport const BLACK = [0,0,0];\r\nexport const WHITE = [255,255,255];\r\n","export function addArray(array, ...arrays) {\r\n    let newArr = [...array];\r\n    arrays.forEach(array => {\r\n        array.forEach((item, i) => {\r\n            newArr[i] += item;\r\n        });\r\n    });\r\n    return newArr;\r\n}\r\n\r\nexport function isDev() {\r\n    return !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n}\r\n","export default class AnimatedObject {\r\n    constructor() {\r\n        this.xProgress = 1;\r\n        this.yProgress = 1;\r\n        // this.translationFrames = 0;\r\n\r\n        // this.animating = false;\r\n        this.direction = 0;\r\n    }\r\n\r\n    travel(direction) {\r\n        this.xProgress = 0;\r\n        this.yProgress = 0;\r\n        this.direction = direction;\r\n    }\r\n\r\n    inPosition() {\r\n        return this.direction >= 0\r\n                ? this.xProgress >= 1 && this.yProgress >= 1\r\n                : this.xProgress <= -1 && this.yProgress <= -1;\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        if (!this.inPosition()) {\r\n            // this.animating = true;\r\n            this.xProgress += Math.sign(this.direction) * animationSpeed/200;\r\n            this.yProgress += Math.sign(this.direction) * animationSpeed/200;\r\n        } else {\r\n            // this.animating = false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","export default class AttractedDraggableObject {\r\n\r\n    static ATTRACTION = 0.3;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    constructor(x,y) {\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.frozen = false;\r\n        this.onStop = [];\r\n\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()();\r\n        }\r\n    }\r\n\r\n    pin(mouseX, mouseY) {\r\n        if (this.constructor.CAN_DRAG) {\r\n            if (!this.frozen) {\r\n                this.pinnedToMouse = true;\r\n                this.mouseOffsetX = mouseX - this.currentX;\r\n                this.mouseOffsetY = mouseY - this.currentY;\r\n            }\r\n        }\r\n    }\r\n\r\n    unpin() {\r\n        this.pinnedToMouse = false;\r\n        this.mouseOffsetX = 0;\r\n        this.mouseOffsetY = 0;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if (this.pinnedToMouse) {\r\n            this.currentX = p5.mouseX - this.mouseOffsetX;\r\n            this.currentY = p5.mouseY - this.mouseOffsetY;\r\n        } else if (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy)) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedDraggableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx += magnitude * Math.cos(angle);\r\n                this.vy += magnitude * Math.sin(angle);\r\n\r\n                this.vx *= 0.75;\r\n                this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n}\r\n","import { Colors } from 'utils';\r\n\r\nexport default class AttractedHighlightableObject {\r\n    static ATTRACTION = 0.2;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    static HIGHTLIGHT_WIDTH = 5;\r\n    static HIGHLIGHT_CIRCLE = 0;\r\n    static HIGHLIGHT_SQUARE = 1;\r\n\r\n    constructor(x,y, options = {}) {\r\n        this.value = options.value || null;\r\n\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.frozen = false;\r\n        this.onStop = [];\r\n\r\n        this.highlighted = false;\r\n        this.highlightColor = Colors.BLACK;\r\n        this.highlightShape = AttractedHighlightableObject.HIGHLIGHT_CIRCLE;\r\n\r\n        Object.entries(options).forEach((option) => {\r\n            this[option[0]] = option[1];\r\n        });\r\n\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    goTo(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.stop();\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    addOnStop(callback) {\r\n        this.onStop.push(callback);\r\n    }\r\n\r\n    stop() {\r\n        this.currentX = this.desiredX;\r\n        this.vx = 0;\r\n        this.currentY = this.desiredY;\r\n        this.vy = 0;\r\n        while (this.onStop.length > 0) {\r\n            this.onStop.shift()(this);\r\n        }\r\n    }\r\n\r\n    highlight(color = Colors.BLUE, shape = AttractedHighlightableObject.HIGHLIGHT_CIRCLE) {\r\n        this.highlightColor = color;\r\n        this.highlightShape = shape;\r\n        this.highlighted = true;\r\n    }\r\n\r\n    unhighlight() {\r\n        this.highlighted = false;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if (isNaN(this.currentX) || isNaN(this.currentY) || isNaN(this.vx) || isNaN(this.vy)) {\r\n            this.stop();\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedHighlightableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx = magnitude * Math.cos(angle);\r\n                this.vy = magnitude * Math.sin(angle);\r\n\r\n                // this.vx *= 0.75;\r\n                // this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.stop();\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n\r\n    drawHighlight(p5) {\r\n        p5.push();\r\n        p5.stroke(...this.highlightColor);\r\n        p5.noFill();\r\n        p5.strokeWeight(AttractedHighlightableObject.HIGHTLIGHT_WIDTH);\r\n        let diameter = 2 * (this.highlightInnerRadius || this.highlightOuterRadius) + (this.highlightInnerRadius ? 1 : -1) * AttractedHighlightableObject.HIGHTLIGHT_WIDTH;\r\n        if (this.highlightShape === AttractedHighlightableObject.HIGHLIGHT_CIRCLE) {\r\n            p5.circle(this.currentX, this.currentY, diameter);\r\n        } else if (this.highlightShape === AttractedHighlightableObject.HIGHLIGHT_SQUARE) {\r\n            p5.square(this.currentX - diameter/2, this.currentY - diameter/2, diameter);\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    drawValue(p5) {\r\n        if (this.value) {\r\n            p5.textAlign(p5.CENTER, p5.CENTER);\r\n            p5.fill(0);\r\n            p5.stroke(0);\r\n            let radius = 2 * (this.highlightInnerRadius || this.highlightOuterRadius) + (this.highlightInnerRadius ? 1 : -1) * AttractedHighlightableObject.HIGHTLIGHT_WIDTH;\r\n            p5.text(this.value.toString(), this.currentX - radius,this.currentY - radius, 2*radius, 2*radius);\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        if (this.highlighted) {\r\n            this.drawHighlight(p5);\r\n        }\r\n        this.drawValue(p5);\r\n        p5.pop();\r\n    }\r\n}\r\n","export default class Animator {\r\n    constructor() {\r\n        this.events = [];\r\n\r\n        this.objects = [];\r\n        this.connectingEdges = [];\r\n\r\n\r\n    }\r\n\r\n    on(type, callback) {\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push(callback);\r\n    }\r\n\r\n    off(type, callback) {\r\n        if (this.events[type]) {\r\n            this.events[type] = this.events[type].filter( event => {\r\n                return event !== callback;\r\n            });\r\n        }\r\n    }\r\n\r\n    emit(type) {\r\n        if (this.events[type]) {\r\n            this.events[type].forEach( event => {\r\n                event();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { Colors } from 'utils';\r\n\r\nexport default class Visualization {\r\n    constructor(animator) {\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            this.displayText = \"Animation Ready\";\r\n            this.displayTextColor = [0,0,0];\r\n        } else {\r\n            delete this.showText;\r\n            delete this.updateText;\r\n        }\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n        if (!this.constructor.SUPPORTS_NO_LOOP) {\r\n            delete this.beginDrawLoop;\r\n            delete this.endDrawLoop;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            this.displayText = \"Animation Ready\";\r\n            this.displayTextColor = [0,0,0];\r\n        }\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n    }\r\n\r\n    updateText(text, color = Colors.BLACK) {\r\n        this.animationQueue.push({method:this.showText,params:[text,color],});\r\n    }\r\n\r\n    showText(text, color = Colors.BLACK) {\r\n        this.displayText = text;\r\n        this.displayTextColor = color;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    doneAnimating(time = 250) {\r\n        if (time === 0) {\r\n            this.animating = false;\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this.animating = false;\r\n        }, time);\r\n    }\r\n\r\n    update(callForward, animationSpeed, p5) {\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n        callForward();\r\n        this.popAnimation(animationSpeed);\r\n    }\r\n\r\n    isAnimStart(animation) {\r\n        return animation.method === this.animator.emit && animation.params[0] === \"anim-start\";\r\n    }\r\n\r\n    isAnimEnd(animation) {\r\n        return animation.method === this.animator.emit && animation.params[0] === \"anim-end\";\r\n    }\r\n\r\n    noAnimation(animation) {\r\n        return animation.noAnim\r\n                || (animation.method === this.animator.emit && (animation.params[0] === \"anim-start\" || animation.params[0] === \"anim-end\"))\r\n                || (animation.method === this.showText);\r\n    }\r\n\r\n    popAnimation(animationSpeed) {\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                let retVal = animation.method.apply(animation.scope || this, animation.params);\r\n                if (this.isAnimStart(animation)) {\r\n                    this.runningAnimation = [];\r\n                } else if (this.isAnimEnd(animation)) {\r\n                    this.animationHistory.push(this.runningAnimation);\r\n                    this.runningAnimation = null;\r\n                } else {\r\n                    if (this.runningAnimation) {\r\n                        this.runningAnimation.push(animation);\r\n                    } else {\r\n                        this.animationHistory.push(animation);\r\n                    }\r\n                }\r\n                if (animation.explanation) {\r\n                    if (animation.explanationUsesReturn) {\r\n                        animation.explanation = animation.explanation.replace(\"|RETURN|\", retVal);\r\n                    }\r\n                    this.showText(animation.explanation);\r\n                }\r\n                if (this.constructor.SUPPORTS_CUSTOM_END) {\r\n                    if (this.noAnimation(animation)) {\r\n                        this.animating = false;\r\n                    } else if (!animation.customEnd) {\r\n                        if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                            this.animating = false;\r\n                        } else {\r\n                            this.doneAnimating(this.constructor.MAX_ANIM_TIME / animationSpeed);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    beginDrawLoop() {\r\n        this.animator.loop();\r\n    }\r\n\r\n    endDrawLoop() {\r\n        this.animationQueue.push({method:this.animator.noLoop,scope:this.animator,params:[],});\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n        if (this.constructor.SUPPORTS_TEXT) {\r\n            p5.fill(...this.displayTextColor);\r\n            p5.textSize(15);\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            p5.text(this.displayText, 2.5,2.5);\r\n        }\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        return true;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        return true;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars, maxY) {\r\n        height -= numScrollbars * 16;\r\n        let width = p5.windowWidth;\r\n        if (maxY > (height - (2*this.y))) {\r\n            height = (maxY + (3*this.y))\r\n            if (!document.querySelector(\".canvas-container\").classList.contains(\"mobile\")) {\r\n                width -= 16;\r\n            }\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        if (this.constructor.SET_BOUNDS) {\r\n            this.width = p5.width - 2 * this.x;\r\n            this.height = p5.height - 2 * this.y;\r\n        }\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AnimatedObject from 'animation/AnimatedObject';\r\n\r\nexport default class ArrayList extends Visualization {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.backingArray = {};\r\n        this.backingArray.length = ArrayList.INITIAL_CAPACITY;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            this.backingArray[i] = new ArrayElement(\"\");\r\n        }\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            animation.push(...this.doubleSize());\r\n        }\r\n        if (index < this.size) {\r\n            animation.push(...this.shiftForIndex(index));\r\n        }\r\n        animation.push({method:this.setIndex,params:[index,data,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        let element = this.backingArray[index];\r\n        let data = element.data;\r\n        element.data = \"\";\r\n        if (index < this.size - 1) {\r\n            animation.push(...this.shiftIntoIndex(index));\r\n        }\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    setIndex(index,data) {\r\n        this.backingArray[index].data = data;\r\n    }\r\n\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    doubleSize() {\r\n        let animation = []\r\n        let prevCapacity = this.backingArray.length;\r\n        for (let i = prevCapacity; i < this.backingArray.length * 2; i++) {\r\n            animation.push({method:this.resetElement,params:[i,],});\r\n        }\r\n        animation.push({method:this.incrLength,params:[],});\r\n        return animation;\r\n    }\r\n\r\n    incrLength() {\r\n        this.backingArray.length = 2 * this.backingArray.length;\r\n    }\r\n\r\n    shiftForIndex(index) {\r\n        let animation = []\r\n        for (let i = this.size - 1; i >= index; i--) {\r\n            animation.push(...this.shiftElement(i,1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[index,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftIntoIndex(index) {\r\n        let animation = [];\r\n        for (let i = index + 1; i < this.size; i++) {\r\n            animation.push(...this.shiftElement(i,-1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[this.size-1,],});\r\n    }\r\n\r\n    shiftElement(index, direction) {\r\n        let animation = [];\r\n        animation.push({method:this.shiftElementMovement,params:[index,direction,],});\r\n        animation.push({method:this.shiftElementIndex,params:[index,direction,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftElementMovement(index, direction) {\r\n        this.backingArray[index].shift(direction);\r\n        // console.log(\"move\",index,JSON.stringify(this.backingArray));\r\n    }\r\n\r\n    shiftElementIndex(index, direction) {\r\n        // console.log(\"index\",index,JSON.stringify(this.backingArray));\r\n        // console.log(index+direction, this.backingArray[index].data);\r\n        this.backingArray[index+direction].data = this.backingArray[index].data;\r\n        this.backingArray[index].data = \"\";\r\n    }\r\n\r\n\r\n    resetElement(index) {\r\n        if (this.backingArray[index]) {\r\n            this.backingArray[index].data = \"\";\r\n        } else {\r\n            this.backingArray[index] = new ArrayElement(\"\", ArrayList.ELEMENT_SIZE);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                if (this.backingArray[i]) {\r\n                    this.backingArray[i].update(animationSpeed);\r\n                }\r\n            }\r\n            let foundAnimElement = false;\r\n            for (let i = 0; i < this.size; i++) {\r\n                if (!this.backingArray[i].inPosition()) {\r\n                    foundAnimElement = true;\r\n                    break;\r\n                }\r\n            }\r\n            this.animating = foundAnimElement;\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        let maxPerRow = Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE);\r\n        let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        p5.push();\r\n        p5.translate(this.x,this.y);\r\n\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            p5.noStroke();\r\n            p5.fill(200);\r\n            p5.rect(ArrayList.ELEMENT_SIZE/10,ArrayList.ELEMENT_SIZE/10 + (2 * ArrayList.ELEMENT_SIZE * row),ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE/20);\r\n\r\n            p5.stroke(0);\r\n            p5.fill(255);\r\n            p5.rect(0,(2 * ArrayList.ELEMENT_SIZE * row), ArrayList.ELEMENT_SIZE*numElements,ArrayList.ELEMENT_SIZE);\r\n        }\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(ArrayList.ELEMENT_SIZE/3 - 2);\r\n\r\n        let i = 0;\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            let x = 0;\r\n            let y = 2 * row * ArrayList.ELEMENT_SIZE;\r\n            for (let block = 0; block < numElements; block++) {\r\n                p5.stroke(0);\r\n                p5.line(x,y, x, y+ArrayList.ELEMENT_SIZE);\r\n\r\n                p5.noStroke();\r\n                p5.fill(0,0,255);\r\n                p5.text(i.toString(), x,y+ArrayList.ELEMENT_SIZE, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n\r\n                let element = this.backingArray[i++];\r\n                let nextX = block < (numElements - 1) ? x + ArrayList.ELEMENT_SIZE : 0;\r\n                let nextY = block < (numElements - 1) ? y : (y + (ArrayList.ELEMENT_SIZE*2));\r\n                if (element.data) {\r\n                    element.draw(p5, x,y,nextX,nextY);\r\n                }\r\n                x = nextX;\r\n                y = nextY;\r\n                if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - ArrayList.ELEMENT_SIZE) {\r\n                    // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (Math.ceil(this.backingArray.length / (Math.floor((p5.width - 2 * this.x) / ArrayList.ELEMENT_SIZE))))*2*ArrayList.ELEMENT_SIZE);\r\n    }\r\n}\r\n\r\n\r\nclass ArrayElement extends AnimatedObject {\r\n    constructor(data) {\r\n        super();\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    shift(direction) {\r\n        super.travel(direction);\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        super.update(animationSpeed);\r\n    }\r\n\r\n\r\n    draw(p5, x,y, toX,toY) {\r\n        p5.push();\r\n        p5.fill(0);\r\n        p5.stroke(50);\r\n        if (!this.inPosition()) {\r\n            let posX = (toX-x)*this.xProgress + x;\r\n            let posY = (toY-y)*this.yProgress + y;\r\n            p5.text(this.data.toString(), posX,posY, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE);\r\n        } else {\r\n            p5.text(this.data.toString(), x,y, ArrayList.ELEMENT_SIZE,ArrayList.ELEMENT_SIZE)\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class SinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = SinglyLinkedList.ITEM_WIDTH + SinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node = null;\r\n        let nextNode = this.head;\r\n        for (let i = 0; i < index; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n            node = nextNode;\r\n            nextNode = nextNode.next;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[node,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else {\r\n            let node = this.head;\r\n            animation.push({method:this.moveHighlight,params:[null,node,],});\r\n            for (let i = 0; i < index - 1; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                node = node.next;\r\n            }\r\n            prev = node;\r\n            toDelete = prev.next;\r\n            next = toDelete.next;\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new SinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE));\r\n        let x = SinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * SinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * SinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + SinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass SinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + SinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + SinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, SinglyLinkedList.ITEM_WIDTH, SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, SinglyLinkedList.ELEMENT_WIDTH,SinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ITEM_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DoublyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DoublyLinkedList.ELEMENT_WIDTH + 2 * DoublyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_PADDED_WIDTH = DoublyLinkedList.ITEM_WIDTH + DoublyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node;\r\n        let nextNode;\r\n        let highlighted;\r\n        if (index < this.size / 2) {\r\n            node = null;\r\n            nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            highlighted = node;\r\n        } else {\r\n            node = this.tail;\r\n            nextNode = null;\r\n            for (let i = this.size - 1; i > index-1; i--) {\r\n                animation.push({method:this.moveHighlight,params:[nextNode,node,],});\r\n                nextNode = node;\r\n                node = node.prev;\r\n            }\r\n            highlighted = nextNode;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[highlighted,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else if (index === this.size - 1) {\r\n            next = null;\r\n            toDelete = this.tail;\r\n            prev = toDelete.prev;\r\n        } else {\r\n            if (index < this.size / 2) {\r\n                let node = this.head;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = 0; i < index; i++) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                    node = node.next;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            } else {\r\n                let node = this.tail;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = this.size - 1; i > index; i--) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.prev,],});\r\n                    node = node.prev;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            }\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[toDelete,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNodePrev,params:[prev,],});\r\n        animation.push({method:this.skipTempNodeNext,params:[next,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new DoublyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n        if (next) {\r\n            next.prev = this.tempNode;\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        }\r\n        this.tempNode.prev = prev;\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        if (index === this.size) {\r\n            this.tail = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n    }\r\n\r\n    skipTempNodeNext(next) {\r\n        if (next) {\r\n            next.prev = this.tempNode.prev;\r\n        } else {\r\n            this.tail = this.tail.prev;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH));\r\n        let x = DoublyLinkedList.ELEMENT_PADDED_WIDTH * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DoublyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DoublyLinkedList.ELEMENT_PADDED_WIDTH;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + DoublyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass DoublyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n        this.prev = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DoublyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DoublyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DoublyLinkedList.ITEM_WIDTH, DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX + DoublyLinkedList.POINTER_WIDTH,this.currentY, DoublyLinkedList.ELEMENT_WIDTH,DoublyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.prev) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, this.prev.currentX + DoublyLinkedList.ITEM_WIDTH, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3)\r\n            p5.rect(this.prev.currentX + DoublyLinkedList.ITEM_WIDTH - 3, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, this.next.currentX, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3 - 3, 6,6);\r\n        } else {\r\n            p5.stroke(...this.color);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.ITEM_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class CircularSinglyLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = CircularSinglyLinkedList.ITEM_WIDTH + CircularSinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            if (this.size > 1) {\r\n                index = 1;\r\n            }\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        if (index === 0) {\r\n            animation.push({method:this.reset,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction = 0) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.max(1, Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE));\r\n        let x = CircularSinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * CircularSinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * CircularSinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node, x,y) {\r\n        this.pinnedNode = node;\r\n        node.pin(x,y);\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.pinnedNode.markBroken();\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            if (this.pinnedNode.index === 0 && this.size > 1) {\r\n                this.animationQueue.push({method:this.pinnedNode.unfreeze,scope:this.pinnedNode,params:[],});\r\n                this.animationQueue.push({method:this.shiftNode,params:[this.pinnedNode,],});\r\n            }\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode, p5.mouseX,p5.mouseY);\r\n        }\r\n        return !pressedNode;\r\n    }\r\n\r\n    touchMoved(p5) {\r\n        return this.pinnedNode === null;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, this.getNodePosition(this.size-1)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + CircularSinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.handBroken = false;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, CircularSinglyLinkedList.ITEM_WIDTH, CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, CircularSinglyLinkedList.ELEMENT_WIDTH,CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ITEM_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport { AttractedHighlightableObject } from 'animation';\r\nimport { Colors } from 'utils';\r\n\r\nexport default class StackArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_NO_LOOP = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n    static SUPPORTS_TEXT = true;\r\n\r\n    static INITIAL_CAPACITY = 9;\r\n\r\n    static ELEMENT_SIZE = 50;\r\n    static TOP_LOCATION_X = 125;\r\n    static TOP_LOCATION_Y = 45;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n        this.made = true;\r\n    }\r\n\r\n    reset() {\r\n        if (this.made) {\r\n            this.beginDrawLoop();\r\n        }\r\n        super.reset();\r\n        this.backingArray = new Array(StackArray.INITIAL_CAPACITY);\r\n        this.size = 0;\r\n        this.copyArray = null;\r\n        this.tempElement = null;\r\n        this.topPointerValue = 0;\r\n        this.topPointerHighlighter = new AttractedHighlightableObject(StackArray.TOP_LOCATION_X, StackArray.TOP_LOCATION_Y, {\r\n            highlightOuterRadius: 15//StackArray.ELEMENT_SIZE/2,\r\n        });\r\n\r\n        this.resizing = false;\r\n        if (this.made) {\r\n            this.updateText(\"Animation Ready\");\r\n            this.endDrawLoop();\r\n        }\r\n    }\r\n\r\n    push(data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (data === null) {\r\n            this.updateText(\"Cannot add null to Stack.\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            this.updateText(`Stack full, resizing to length ${this.backingArray.length*2}`);\r\n            animation.push(...this.createCopyArray());\r\n        }\r\n        animation.push({method:this.makeElement,params:[this.size,data],explanation:`Create value: ${data}`});\r\n        animation.push(...this.useTopPointer());\r\n        animation.push({method:this.highlightTemp,params:[],noAnim:true});\r\n        animation.push({method:this.insertElement,params:[this.size],customEnd:true,explanation:`Added ${data} to backingArray`});\r\n        animation.push({method:this.sizeIncr,params:[],noAnim:true});\r\n        animation.push(...this.updateTopPointer());\r\n        // if (this.size > 0 && (index === 0 || index === this.size)) {\r\n        //     animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n        //     animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n        //     animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n        //     animation.push({method:this.changeHeadData,params:[data],});\r\n        //     if (this.size >= 2) {\r\n        //         animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n        //     }\r\n        //     animation.push({method:this.insertTempNode,params:[1,],});\r\n        //     animation.push({method:this.sizeIncr,params:[],});\r\n        //     if (index === this.size) {\r\n        //         animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackArray.ELEMENT_SIZE * 2,],customEnd:true});\r\n        //         // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackArray.ELEMENT_SIZE * 2,],});\r\n        //         animation.push({method:this.resetHead,params:[],});\r\n        //     }\r\n        // } else {\r\n        //     let node = null;\r\n        //     let nextNode = this.head;\r\n        //     for (let i = 0; i < index; i++) {\r\n        //         animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n        //         node = nextNode;\r\n        //         nextNode = nextNode.next;\r\n        //     }\r\n        //     animation.push({method:this.makeNode,params:[index,data,],});\r\n        //     animation.push({method:this.moveHighlight,params:[node,null,],});\r\n        //     animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        //     animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        //     if (index < this.size) {\r\n        //         animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        //     }\r\n        //     animation.push({method:this.insertTempNode,params:[index,],});\r\n        //     animation.push({method:this.sizeIncr,params:[],});\r\n        // }\r\n        // let index = 3;\r\n        this.addAnimation(animation);\r\n        this.updateText(`Successfully added ${data} to stack.`, Colors.GREEN);\r\n        this.endDrawLoop();\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    pop() {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        this.beginDrawLoop();\r\n        if (this.size === 0) {\r\n            this.updateText(\"Cannot pop empty Stack\", Colors.RED);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data = this.backingArray[this.size - 1].value;\r\n        animation.push({method:this.sizeDecr,params:[],noAnim:true});\r\n        animation.push(...this.updateTopPointer());\r\n        animation.push(...this.useTopPointer());\r\n        animation.push({method:this.extractElement,params:[],explanation:`Pop value: ${data} from stack`,customEnd:true});\r\n        animation.push({method:this.unmakeElement,params:[],noAnim:true});\r\n        // animation.push({method:this.highlightTemp,params:[],noAnim:true});\r\n        // animation.push({method:this.insertElement,params:[this.size],customEnd:true,explanation:`Added ${data} to backingArray`});\r\n        // animation.push({method:this.makeElement,params:[this.size,data],explanation:`Create value: ${data}`});\r\n\r\n        // if (index === 0) {\r\n        //     data = this.head.data;\r\n        //     animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n        //     animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n        //     index = 1;\r\n        // }\r\n        // let prev;\r\n        // let toDelete;\r\n        // let next;\r\n        // let node = this.head;\r\n        // animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        // for (let i = 0; i < index - 1; i++) {\r\n        //     animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n        //     node = node.next;\r\n        // }\r\n        // prev = node;\r\n        // toDelete = prev.next;\r\n        // next = toDelete.next;\r\n        // if (!data) {\r\n        //     data = toDelete.data;\r\n        // }\r\n        // animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        // animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        // if (index < this.size - 1) {\r\n        //     animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        // }\r\n        // animation.push({method:this.skipTempNode,params:[prev,],});\r\n        // animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.updateText(`Successfully popped ${data} from stack.`, Colors.GREEN);\r\n        this.endDrawLoop();\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    createCopyArray() {\r\n        let animation = [];\r\n        animation.push({method:this.initCopyArray,params:[],noAnim:true});\r\n        for (let i = 0; i < this.size; i++) {\r\n            animation.push(...this.addItemToCopy(i));\r\n        }\r\n        animation.push(...this.useCopyArr());\r\n        return animation;\r\n    }\r\n\r\n    initCopyArray() {\r\n        this.copyArray = new Array(this.backingArray.length * 2);\r\n        for (let i = 0; i < this.size; i++) {\r\n            let pos = this.getElementPosition(i);\r\n            this.copyArray[i] = new StackArrayElement({data: this.backingArray[i].value, index: i, x:pos[0],y:pos[1],},);\r\n        }\r\n    }\r\n\r\n    addItemToCopy(index) {\r\n        let animation = [];\r\n        animation.push({method:this.customEndingElementShift,params:[index,...this.getElementPosition(index,true),true],customEnd:true});\r\n        return animation;\r\n    }\r\n\r\n    useCopyArr() {\r\n        let animation = [];\r\n        animation.push({method:this.assignCopyArray,params:[],noAnim:true});\r\n        for (let i = 0; i < this.size; i++) {\r\n            animation.push({method:this.shiftElementToBackingArray,params:[i,],noAnim:true});\r\n        }\r\n        return animation;\r\n    }\r\n\r\n    assignCopyArray() {\r\n        this.backingArray = this.copyArray;\r\n        this.copyArray = null;\r\n    }\r\n\r\n    shiftElementToBackingArray(index) {\r\n        let element = this.backingArray[index];\r\n        element.shift(...this.getElementPosition(element.index));\r\n    }\r\n\r\n    makeElement(index, data, immediateHighlight = false) {\r\n        this.tempElement = new StackArrayElement({data: data, index: index, x:45,y:45,},);\r\n        if (immediateHighlight) {\r\n            this.tempElement.highlightForMovement();\r\n        }\r\n    }\r\n\r\n    useTopPointer() {\r\n        let animation = [];\r\n        animation.push({method:this.topPointerHighlighter.highlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        animation.push({method:this.moveTopTracker,params:[],customEnd:true,explanation:`Top points to index |RETURN|`,explanationUsesReturn:true});\r\n        animation.push({method:this.topPointerHighlighter.unhighlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        animation.push({method:this.topPointerHighlighter.goTo,scope:this.topPointerHighlighter,params:[StackArray.TOP_LOCATION_X,StackArray.TOP_LOCATION_Y,],noAnim:true});\r\n        return animation;\r\n    }\r\n\r\n    moveTopTracker() {\r\n        let pos = this.getElementPosition(this.topPointerValue);\r\n        this.topPointerHighlighter.shift(pos[0], pos[1] + StackArray.ELEMENT_SIZE);\r\n        this.topPointerHighlighter.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n        return this.topPointerValue;\r\n    }\r\n\r\n    highlightTemp(color = Colors.BLUE) {\r\n        this.tempElement.highlight(color);\r\n    }\r\n\r\n    insertElement(index) {\r\n        this.backingArray[index] = this.tempElement;\r\n        this.tempElement.shift(...this.getElementPosition(index));\r\n        this.tempElement.addOnStop((element) => {\r\n            element.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n        this.tempElement = null;\r\n    }\r\n\r\n    extractElement() {\r\n        this.tempElement = this.backingArray[this.topPointerValue];\r\n        this.backingArray[this.topPointerValue] = null;\r\n        this.tempElement.highlightForMovement();\r\n        this.tempElement.shift(45,45);\r\n        this.tempElement.addOnStop(() => {\r\n            this.tempElement.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    unmakeElement(index) {\r\n        this.tempElement = null;\r\n    }\r\n\r\n    shiftElement(element, direction = 0) {\r\n        element.shift(...this.getElementPosition(element.index + direction), direction);\r\n    }\r\n\r\n    customEndingElementShift(index, x, y, copy = false) {\r\n        let element = (copy ? this.copyArray : this.backingArray)[index];\r\n        element.highlightForMovement();\r\n        element.shift(x,y);\r\n        element.addOnStop(() => {\r\n            element.unhighlight();\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    updateTopPointer() {\r\n        let animation = [];\r\n        animation.push({method:this.topPointerHighlighter.highlight,scope:this.topPointerHighlighter,params:[Colors.RED, AttractedHighlightableObject.HIGHLIGHT_SQUARE]});\r\n        animation.push({method:this.changeTopPointerValue,params:[],explanation:`Update top pointer to |RETURN|`,explanationUsesReturn:true});\r\n        animation.push({method:this.topPointerHighlighter.unhighlight,scope:this.topPointerHighlighter,params:[],noAnim:true});\r\n        return animation;\r\n    }\r\n\r\n    changeTopPointerValue() {\r\n        this.topPointerValue = this.size;\r\n        return this.size;\r\n    }\r\n\r\n    getElementPosition(index, copy = false) {\r\n        let maxPerRow = Math.floor(this.width / StackArray.ELEMENT_SIZE);\r\n        let x = StackArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * StackArray.ELEMENT_SIZE;\r\n        x = (index % maxPerRow) * StackArray.ELEMENT_SIZE;\r\n        return [x + StackArray.ELEMENT_SIZE/2 + this.x,y + StackArray.ELEMENT_SIZE/2 + this.y + (copy ? (Math.ceil(this.backingArray.length / maxPerRow)*StackArray.ELEMENT_SIZE*2) : 0)];\r\n    }\r\n\r\n    allInPosition() {\r\n        let moving = false;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i] && this.backingArray[i].displacement() > 0) {\r\n                moving = true;\r\n            }\r\n        }\r\n        if (this.copyArray) {\r\n            for (let i = 0; i < this.copyArray.length; i++) {\r\n                if (this.copyArray[i] && this.copyArray[i].displacement() > 0) {\r\n                    moving = true;\r\n                }\r\n            }\r\n        }\r\n        return !moving;\r\n    }\r\n\r\n    updateElement(element, animationSpeed, p5) {\r\n        if (element) {\r\n            element.update(animationSpeed, p5);\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            for (let i = 0; i < this.backingArray.length; i++) {\r\n                this.updateElement(this.backingArray[i], animationSpeed, p5);\r\n            }\r\n            if (this.copyArray) {\r\n                for (let i = 0; i < this.copyArray.length; i++) {\r\n                    this.updateElement(this.copyArray[i], animationSpeed, p5);\r\n                }\r\n            }\r\n            if (this.tempElement) {\r\n                this.updateElement(this.tempElement, animationSpeed, p5);\r\n            }\r\n            this.topPointerHighlighter.update(animationSpeed, p5);\r\n            if (this.resizing && this.allInPosition()) {\r\n                if (!this.animating && this.animationQueue.length === 0) {\r\n                    this.animator.noLoop();\r\n                }\r\n                this.resizing = false;\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        super.draw(p5);\r\n        // console.log(\"draw\");\r\n        p5.push();\r\n        // let maxPerRow = Math.max(1, Math.floor((p5.width - 2 * this.x) / StackArray.ELEMENT_SIZE));\r\n        // let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        // p5.translate(this.x,this.y+50);\r\n        //\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_SIZE/3 - 2);\r\n        //\r\n        // for (let row = 0; row < rows; row++) {\r\n        //     let numElements = row !== rows-1 ? maxPerRow\r\n        //             : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n        //     p5.noStroke();\r\n        //     p5.fill(200);\r\n        //     p5.rect(StackArray.ELEMENT_SIZE/10,StackArray.ELEMENT_SIZE/10 + (2 * StackArray.ELEMENT_SIZE * row),StackArray.ELEMENT_SIZE*numElements,StackArray.ELEMENT_SIZE,StackArray.ELEMENT_SIZE/20);\r\n        //\r\n        //     p5.stroke(0);\r\n        //     p5.fill(255);\r\n        //     p5.rect(0,(2 * StackArray.ELEMENT_SIZE * row), StackArray.ELEMENT_SIZE*numElements,StackArray.ELEMENT_SIZE);\r\n        // }\r\n        //\r\n        // let i = 0;\r\n        // for (let row = 0; row < rows; row++) {\r\n        //     let numElements = row !== rows-1 ? maxPerRow\r\n        //             : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n        //     let x = 0;\r\n        //     let y = 2 * row * StackArray.ELEMENT_SIZE;\r\n        //     for (let block = 0; block < numElements; block++) {\r\n        //         p5.stroke(0);\r\n        //         p5.line(x,y, x, y+StackArray.ELEMENT_SIZE);\r\n        //\r\n        //         p5.noStroke();\r\n        //         p5.fill(0,0,255);\r\n        //         p5.text(i.toString(), x,y+StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE,StackArray.ELEMENT_SIZE);\r\n        //         //\r\n        //         // let element = this.backingArray[i++];\r\n        //         i++;\r\n        //         let nextX = block < (numElements - 1) ? x + StackArray.ELEMENT_SIZE : 0;\r\n        //         let nextY = block < (numElements - 1) ? y : (y + (StackArray.ELEMENT_SIZE*2));\r\n        //         // if (element.data) {\r\n        //         //     element.draw(p5, x,y,nextX,nextY);\r\n        //         // }\r\n        //         x = nextX;\r\n        //         y = nextY;\r\n        //         // if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - StackArray.ELEMENT_SIZE) {\r\n        //         //     // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n        //         // }\r\n        //     }\r\n        // }\r\n        //\r\n        // p5.translate(-this.x, -this.y - 50);\r\n\r\n        p5.fill(0);\r\n        p5.text(\"Top: \", StackArray.TOP_LOCATION_X - 50, StackArray.TOP_LOCATION_Y, StackArray.ELEMENT_SIZE);\r\n\r\n        p5.text(this.topPointerValue.toString(), StackArray.TOP_LOCATION_X-25, StackArray.TOP_LOCATION_Y, StackArray.ELEMENT_SIZE);\r\n\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].draw(p5);\r\n            }\r\n            let pos = this.getElementPosition(i);\r\n            p5.noFill();\r\n            p5.stroke(0);\r\n            p5.square(pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE);\r\n            p5.fill(...Colors.BLUE);\r\n            p5.stroke(...Colors.BLUE);\r\n            p5.text(i.toString(), pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] + StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n        }\r\n\r\n        if (this.copyArray) {\r\n            for (let i = 0; i < this.copyArray.length; i++) {\r\n                if (this.copyArray[i]) {\r\n                    this.copyArray[i].draw(p5);\r\n                }\r\n                let pos = this.getElementPosition(i, true);\r\n                p5.noFill();\r\n                p5.stroke(0);\r\n                p5.square(pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE);\r\n                p5.fill(...Colors.BLUE);\r\n                p5.stroke(...Colors.BLUE);\r\n                p5.text(i.toString(), pos[0] - StackArray.ELEMENT_SIZE/2,pos[1] + StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n            }\r\n        }\r\n        if (this.tempElement) {\r\n            this.tempElement.draw(p5);\r\n        }\r\n        this.topPointerHighlighter.draw(p5);\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height, numScrollbars) {\r\n        super.windowResized(p5, height, numScrollbars, (this.copyArray ? this.getElementPosition(this.copyArray.length-1, true)[1] : this.getElementPosition(this.backingArray.length-1)[1]) + StackArray.ELEMENT_SIZE);\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].shift(...this.getElementPosition(i));\r\n            }\r\n        }\r\n        this.resizing = true;\r\n        this.animator.loop();\r\n    }\r\n}\r\n\r\n\r\nclass StackArrayElement extends AttractedHighlightableObject {\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        // this.highlightInnerRadius = StackArray.ELEMENT_SIZE/2 - 5;\r\n        this.highlightOuterRadius = StackArray.ELEMENT_SIZE/2;\r\n\r\n        this.value = data;\r\n        this.index = index;\r\n\r\n        this.toDelete = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    highlightForMovement() {\r\n        super.highlight(Colors.BLUE);\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        super.highlight(Colors.RED);\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(animationSpeed, p5);\r\n    }\r\n\r\n    drawValue(p5) {\r\n        p5.push();\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.stroke(...this.color);\r\n        p5.text(this.value.toString(), this.currentX - StackArray.ELEMENT_SIZE/2,this.currentY - StackArray.ELEMENT_SIZE/2, StackArray.ELEMENT_SIZE, StackArray.ELEMENT_SIZE);\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueArray.ITEM_WIDTH + QueueArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueArray.ELEMENT_SIZE);\r\n        let x = QueueArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueArray.ITEM_WIDTH, QueueArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueArray.ELEMENT_WIDTH,QueueArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueArray.ELEMENT_WIDTH + QueueArray.POINTER_WIDTH / 2, this.currentY + QueueArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueArray.ELEMENT_WIDTH, this.currentY, this.currentX + QueueArray.ITEM_WIDTH, this.currentY + QueueArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeArray extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeArray.ITEM_WIDTH + DequeArray.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeArray.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeArray.ELEMENT_SIZE);\r\n        let x = DequeArray.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeArray.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeArray.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeArray.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeArray.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeArray.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeArray.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeArray.ITEM_WIDTH, DequeArray.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeArray.ELEMENT_WIDTH,DequeArray.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeArray.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeArray.ELEMENT_WIDTH + DequeArray.POINTER_WIDTH / 2, this.currentY + DequeArray.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeArray.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeArray.ELEMENT_WIDTH, this.currentY, this.currentX + DequeArray.ITEM_WIDTH, this.currentY + DequeArray.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class StackLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = StackLinkedList.ITEM_WIDTH + StackLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + StackLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / StackLinkedList.ELEMENT_SIZE);\r\n        let x = StackLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * StackLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * StackLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + StackLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + StackLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + StackLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > StackLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > StackLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, StackLinkedList.ITEM_WIDTH, StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, StackLinkedList.ELEMENT_WIDTH,StackLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + StackLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH + StackLinkedList.POINTER_WIDTH / 2, this.currentY + StackLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + StackLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + StackLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + StackLinkedList.ITEM_WIDTH, this.currentY + StackLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class QueueLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = QueueLinkedList.ITEM_WIDTH + QueueLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + QueueLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / QueueLinkedList.ELEMENT_SIZE);\r\n        let x = QueueLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * QueueLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * QueueLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + QueueLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + QueueLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + QueueLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > QueueLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, QueueLinkedList.ITEM_WIDTH, QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, QueueLinkedList.ELEMENT_WIDTH,QueueLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + QueueLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH + QueueLinkedList.POINTER_WIDTH / 2, this.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + QueueLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + QueueLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + QueueLinkedList.ITEM_WIDTH, this.currentY + QueueLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import { Visualization } from 'animation';\r\nimport AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DequeLinkedList extends Visualization {\r\n    static USE_CANVAS = true;\r\n    static SET_BOUNDS = true;\r\n    static SUPPORTS_CUSTOM_END = true;\r\n    static MAX_ANIM_TIME = 5000;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = DequeLinkedList.ITEM_WIDTH + DequeLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n        super(animator);\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + DequeLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.addOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DequeLinkedList.ELEMENT_SIZE);\r\n        let x = DequeLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DequeLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DequeLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update(() => {\r\n            let node = this.head;\r\n            while (node) {\r\n                this.updateNode(node, animationSpeed, p5);\r\n                node = node.next;\r\n                if (node === this.head) {\r\n                    break;\r\n                }\r\n            }\r\n            if (this.tempNode) {\r\n                this.updateNode(this.tempNode, animationSpeed, p5);\r\n            }\r\n        }, animationSpeed, p5);\r\n    }\r\n\r\n    draw(p5) {\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        super.windowResized(p5, height, this.getNodePosition(this.size-1)[1] + DequeLinkedList.ELEMENT_HEIGHT);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    static CAN_DRAG = true;\r\n\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DequeLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DequeLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DequeLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DequeLinkedList.ITEM_WIDTH, DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, DequeLinkedList.ELEMENT_WIDTH,DequeLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + DequeLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH + DequeLinkedList.POINTER_WIDTH / 2, this.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DequeLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + DequeLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DequeLinkedList.ITEM_WIDTH, this.currentY + DequeLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport Sketch from 'react-p5';\r\nimport './visualizer.scss';\r\n\r\nimport ControlBar from './controlBar';\r\n\r\nimport { ControlBuilder, Utils } from 'utils';\r\nimport { Animator } from 'animation';\r\n\r\nexport default class Visualizer extends PureComponent {\r\n\r\n    static INITIAL_SPEED = 50;\r\n    static MAX_SPEED = 20;\r\n    static SPEED_SLIDER_DEGREE = 1.5;\r\n\r\n    static maxAnimationSpeed() {\r\n        return Math.pow(Visualizer.MAX_SPEED, Visualizer.SPEED_SLIDER_DEGREE);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.setup = this.setup.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.mousePressed = this.mousePressed.bind(this);\r\n        this.touchMoved = this.touchMoved.bind(this);\r\n        this.mouseReleased = this.mouseReleased.bind(this);\r\n        this.windowResized = this.windowResized.bind(this);\r\n\r\n\r\n        this.controlBarRef = React.createRef();\r\n\r\n        this.controlGroups = [];\r\n        this.controls = [];\r\n\r\n        // this.animationSpeed = Visualizer.INITIAL_SPEED;\r\n\r\n        this.onAnimStart = this.onAnimStart.bind(this);\r\n        this.onAnimEnd = this.onAnimEnd.bind(this);\r\n        this.animating = false;\r\n\r\n        this.focusedElement = null;\r\n\r\n        this.animator = new Proxy(new Animator(), {\r\n            get: function (target, propertyName, receiver) {\r\n                if (!target[propertyName]) {\r\n                    return () => target.emit(propertyName);\r\n                } else {\r\n                    return target[propertyName];\r\n                }\r\n            }\r\n        });\r\n        this.animator.on(\"anim-start\", this.onAnimStart);\r\n        this.animator.on(\"anim-end\", this.onAnimEnd);\r\n\r\n        this.addDefaultControls();\r\n    }\r\n\r\n    addDefaultControls() {\r\n        this.speedSlider = ControlBuilder.createSlider(1, Visualizer.MAX_SPEED, Math.pow(Visualizer.INITIAL_SPEED,1/Visualizer.SPEED_SLIDER_DEGREE), 0);\r\n        this.defaultControlGroup = ControlBuilder.createControlGroup(\"default\", this.speedSlider);\r\n        this.defaultsLabel = \"Animation controls\";\r\n    }\r\n\r\n    addControlLabel(label) {\r\n        this.mainLabel = label;\r\n    }\r\n\r\n    addControlGroups(...controlGroups) {\r\n        // console.log(\"control added\");\r\n        this.controlGroups.push(...controlGroups);\r\n        controlGroups.forEach((controlGroup) => {\r\n            if (controlGroup.tagName === \"INPUT\") {\r\n                this.controls.push(controlGroup);\r\n            } else {\r\n                this.registerControlGroup(controlGroup);\r\n            }\r\n        });\r\n    }\r\n\r\n    registerControlGroup(controlGroup) {\r\n        controlGroup.childNodes.forEach((child) => {\r\n            if (child.tagName === \"INPUT\") {\r\n                this.controls.push(child);\r\n            } else {\r\n                this.registerControlGroup(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    onAnimStart() {\r\n        this.disableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            // this.animator.loop();\r\n        }\r\n        this.animating = true;\r\n    }\r\n\r\n    onAnimEnd() {\r\n        this.enableUI();\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            // this.animator.noLoop();\r\n        }\r\n        this.animating = false;\r\n    }\r\n\r\n    disableUI() {\r\n        // console.log(\"disable\");\r\n        this.controls.forEach((control) => {\r\n            if (control === document.activeElement) {\r\n                this.focusedElement = control;\r\n            }\r\n            control.disabled = true;\r\n        });\r\n    }\r\n\r\n    enableUI() {\r\n        // console.log(\"enable\");\r\n        this.controls.forEach((control) => {\r\n            control.disabled = false;\r\n            if (control === this.focusedElement) {\r\n                control.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        callForward();\r\n        if (Utils.isDev()) {\r\n            window[this.class] = this.visualization;\r\n        }\r\n        this.controlBar = this.controlBarRef.current;\r\n        this.controlBar.setMainLabel(this.mainLabel);\r\n        this.controlBar.setDefaultsLabel(this.defaultsLabel);\r\n        this.controlBar.addDefaultGroup(this.defaultControlGroup);\r\n        this.controlGroups.forEach((controlGroup, i) => {\r\n            this.controlBar.addControlGroup(controlGroup);\r\n        });\r\n        this.mounted = true;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"update\");\r\n    }\r\n\r\n    setup(p5, canvasParentRef) {\r\n        // let width = this.controlBar.controlBar.current.getBoundingClientRect().width;\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n\r\n        this.mobile = window.ontouchstart !== undefined;\r\n        if (this.mobile) {\r\n            height = 1000;\r\n            // document.querySelector(\".canvas-container\").style.height = height + \"px\";\r\n            document.querySelector(\".canvas-container\").classList.add(\"mobile\");\r\n        }\r\n\r\n        //config\r\n        let canvas = p5.createCanvas(p5.windowWidth\r\n            ,height);\r\n        canvas.parent(canvasParentRef);\r\n        //\r\n        // canvas.touchStarted((event) => {\r\n        //     console.log(\"touchdown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         event.preventDefault();\r\n        //     }\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchMoved((event) => {\r\n        //     console.log(\"touchmove\");\r\n        //     if (!this.touchMoved(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        //     return true;\r\n        //     // event.preventDefault();\r\n        // });\r\n        //\r\n        // canvas.touchEnded(() => {\r\n        //     console.log(\"touchup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // canvas.mousePressed(() => {\r\n        //     console.log(\"mousedown\");\r\n        //     if (!this.mousePressed(p5)) {\r\n        //         // event.preventDefault();\r\n        //     }\r\n        // });\r\n        // canvas.mouseReleased(() => {\r\n        //     console.log(\"mouseup\");\r\n        //     this.mouseReleased(p5);\r\n        //     // event.preventDefault();\r\n        // });\r\n        // p5.background(200);\r\n        // p5.frameRate(8);\r\n\r\n        // document.addEventListener(\"resize\", (event) => {\r\n        //     console.log(\"resize\");\r\n        // });\r\n        this.animator.on(\"noLoop\", () => {\r\n            // console.log(\"noLoop\");\r\n            p5.noLoop();\r\n        });\r\n        this.animator.on(\"loop\", () => {\r\n            // console.log(\"loop\");\r\n            p5.loop();\r\n        });\r\n        this.windowResized(p5);\r\n\r\n        if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n            this.animator.noLoop();\r\n        }\r\n    }\r\n    draw(p5) {\r\n        //inputs\r\n        let animationSpeed = Math.pow(this.speedSlider.value,Visualizer.SPEED_SLIDER_DEGREE);\r\n\r\n        p5.background(255);\r\n\r\n        //objects\r\n        this.visualization.update(animationSpeed, p5);\r\n        this.visualization.draw(p5);\r\n        // if (!this.animating) {\r\n        //     if (this.constructor.VISUALIZATION_CLASS.SUPPORTS_NO_LOOP) {\r\n        //         this.animator.noLoop();\r\n        //     }\r\n        // }\r\n    }\r\n    mousePressed(p5) {\r\n        if (this.visualization.mousePressed) {\r\n            // console.log(\"down\");\r\n            //let pressed =\r\n            this.visualization.mousePressed(p5);\r\n            // console.log(pressed);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    touchMoved(p5) {\r\n        if (this.visualization.touchMoved) {\r\n            // console.log(\"move\");\r\n            return this.visualization.touchMoved();\r\n        }\r\n        return true;\r\n    }\r\n    mouseReleased(p5) {\r\n        if (this.visualization.mouseReleased) {\r\n            // console.log(\"up\");\r\n            //let released =\r\n            this.visualization.mouseReleased(p5);\r\n            // console.log(released);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    windowResized(p5) {\r\n        // console.log(\"resize\");\r\n        //config\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n        if (this.mobile) {\r\n            // height = 1000;\r\n        }\r\n        // height = document.querySelector(\".react-p5\").getBoundingClientRect().height;\r\n        document.querySelector(\".canvas-container\").style.height = height+\"px\";\r\n        height = document.querySelector(\".canvas-container\").getBoundingClientRect().height;\r\n        // console.log(height);\r\n        // p5.resizeCanvas(p5.windowWidth, p5.height);\r\n\r\n        //objects\r\n        let numScrollbars = this.controlBar.windowResized();\r\n        this.visualization.windowResized(p5, height, numScrollbars);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div className={`visualizer ${this.class}`}>\r\n                    <ControlBar ref={this.controlBarRef}/>\r\n                    {\r\n                        this.constructor.VISUALIZATION_CLASS.USE_CANVAS ?\r\n                                <div className=\"canvas-container\">\r\n                                    {\r\n                                        this.mounted ?\r\n                                                <Sketch setup={this.setup} draw={this.draw} windowResized={this.windowResized} mousePressed={this.mousePressed} mouseReleased={this.mouseReleased} touchStarted={this.mousePressed} touchEnded={this.mouseReleased} touchMoved={this.touchMoved}/>\r\n                                            :\r\n                                                <p>Loading Sketch</p>\r\n                                    }\r\n                                </div>\r\n                            :\r\n                                <this.visualization.VISUALIZATION_CLASS />\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class ListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.list;\r\n        });\r\n    }\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { ArrayList } from 'animation';\r\nimport './arraylist.scss';\r\n\r\n\r\nexport default class ArrayListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = ArrayList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'arraylist';\r\n        super.addControlLabel(\"ArrayList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new ArrayList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { SinglyLinkedList } from 'animation';\r\nimport './singly-linked-list.scss';\r\n\r\n\r\nexport default class SinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = SinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'singlylinkedlist';\r\n        super.addControlLabel(\"SinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new SinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { DoublyLinkedList } from 'animation';\r\nimport './doubly-linked-list.scss';\r\n\r\n\r\nexport default class DoublyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = DoublyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'doublylinkedlist';\r\n        super.addControlLabel(\"DoublyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new DoublyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { ListVisualizer } from '../';\r\nimport { CircularSinglyLinkedList } from 'animation';\r\nimport './circular-singly-linked-list.scss';\r\n\r\nexport default class CircularSinglyLinkedListVisualizer extends ListVisualizer {\r\n    static VISUALIZATION_CLASS = CircularSinglyLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'circularsinglylinkedlist';\r\n        super.addControlLabel(\"CircularSinglyLinkedList\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.list = new CircularSinglyLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './lists.scss';\r\n\r\nimport ArrayListVisualizer from './arraylist';\r\nimport SinglyLinkedListVisualizer from './singly-linked-list';\r\nimport DoublyLinkedListVisualizer from './doubly-linked-list';\r\nimport CircularSinglyLinkedListVisualizer from './circular-singly-linked-list';\r\n\r\nexport default function Lists(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <ListView url={url} />} />\r\n                <Route path={`${path}/arraylist`} component={ArrayListVisualizer} />\r\n                <Route path={`${path}/sll`} component={SinglyLinkedListVisualizer} />\r\n                <Route path={`${path}/dll`} component={DoublyLinkedListVisualizer} />\r\n                <Route path={`${path}/c-sll`} component={CircularSinglyLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction ListView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <h1 id=\"title\">Lists</h1>\r\n                <div className=\"links\">\r\n                    <Link to={`${path}/arraylist`}>ArrayList</Link>\r\n                    <Link to={`${path}/sll`}>SinglyLinkedList</Link>\r\n                    <Link to={`${path}/dll`}>DoublyLinkedList</Link>\r\n                    <Link to={`${path}/c-sll`}>CircularSinglyLinkedList</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class StackVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.pushButtonCallback = this.pushButtonCallback.bind(this);\r\n        this.popButtonCallback = this.popButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.stack = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.pushButton = ControlBuilder.createButton(\"push\");\r\n        this.pushButton.addEventListener(\"click\",this.pushButtonCallback);\r\n\r\n        this.popButton = ControlBuilder.createButton(\"pop\");\r\n        this.popButton.addEventListener(\"click\",this.popButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.pushButton, this.popButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.stack;\r\n        });\r\n    }\r\n\r\n\r\n    pushButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.stack.push(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    popButtonCallback() {\r\n        this.stack.pop();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.stack.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.stack.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class QueueVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.enqueueButtonCallback = this.enqueueButtonCallback.bind(this);\r\n        this.dequeueButtonCallback = this.dequeueButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.queue = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.enqueueButton = ControlBuilder.createButton(\"enqueue\");\r\n        this.enqueueButton.addEventListener(\"click\",this.enqueueButtonCallback);\r\n\r\n        this.dequeueButton = ControlBuilder.createButton(\"dequeue\");\r\n        this.dequeueButton.addEventListener(\"click\",this.dequeueButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let interactionButtonGroup = ControlBuilder.createControlGroup(\"interactionButtons\", this.enqueueButton, this.dequeueButton);\r\n        let mainControlGroup = ControlBuilder.createControlGroup(\"mainControl\", this.valueField, interactionButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(mainControlGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.queue;\r\n        });\r\n    }\r\n\r\n\r\n    enqueueButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.queue.enqueue(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    dequeueButtonCallback() {\r\n        this.queue.dequeue();\r\n    }\r\n\r\n    peekButtonCallback() {\r\n        this.queue.peek();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.queue.reset();\r\n    }\r\n}\r\n","import Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\n\r\nexport default class DequeVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.addLastButtonCallback = this.addLastButtonCallback.bind(this);\r\n        this.addFirstButtonCallback = this.addFirstButtonCallback.bind(this);\r\n        this.removeFirstButtonCallback = this.removeFirstButtonCallback.bind(this);\r\n        this.removeLastButtonCallback = this.removeLastButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n\r\n        this.deque = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n\r\n        this.addLastButton = ControlBuilder.createButton(\"addLast (enqueue)\");\r\n        this.addLastButton.addEventListener(\"click\",this.addLastButtonCallback);\r\n\r\n        this.addFirstButton = ControlBuilder.createButton(\"addFirst (push)\");\r\n        this.addFirstButton.addEventListener(\"click\",this.addFirstButtonCallback);\r\n\r\n        this.removeFirstButton = ControlBuilder.createButton(\"removeFirst (dequeue/pop)\");\r\n        this.removeFirstButton.addEventListener(\"click\",this.removeFirstButtonCallback);\r\n\r\n        this.removeLastButton = ControlBuilder.createButton(\"removeLast\");\r\n        this.removeLastButton.addEventListener(\"click\",this.removeLastButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addButtonGroup = ControlBuilder.createControlGroup(\"addButtons\", this.addFirstButton, this.addLastButton);\r\n        let removeButtonGroup = ControlBuilder.createControlGroup(\"removeButtons\", this.removeFirstButton, this.removeLastButton);\r\n        let interactionGroup = ControlBuilder.createControlGroup(\"interactions\", this.valueField, addButtonGroup, removeButtonGroup);\r\n        let resetGroup = ControlBuilder.createControlGroup(\"resetGroup\", this.resetButton);\r\n\r\n        super.addControlGroups(interactionGroup, resetGroup);\r\n    }\r\n\r\n    componentDidMount(callForward) {\r\n        super.componentDidMount(() => {\r\n            callForward();\r\n            super.visualization = this.deque;\r\n        });\r\n    }\r\n\r\n\r\n    addLastButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    addFirstButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addFirst(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (this.deque.addLast(value)) {\r\n                this.valueField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFirstButtonCallback() {\r\n        this.deque.removeFirst();\r\n    }\r\n\r\n    removeLastButtonCallback() {\r\n        this.deque.removeLast();\r\n    }\r\n\r\n    resetButtonCallback() {\r\n        this.deque.reset();\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackArray } from 'animation';\r\nimport './stack-array.scss';\r\n\r\n\r\nexport default class StackArrayVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-array';\r\n        super.addControlLabel(\"Stack (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueArray } from 'animation';\r\nimport './queue-array.scss';\r\n\r\n\r\nexport default class QueueArrayVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-array';\r\n        super.addControlLabel(\"Queue (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeArray } from 'animation';\r\nimport './deque-array.scss';\r\n\r\n\r\nexport default class DequeArrayVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeArray;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-array';\r\n        super.addControlLabel(\"Deque (Array)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeArray(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { StackVisualizer } from '../';\r\nimport { StackLinkedList } from 'animation';\r\nimport './stack-linked-list.scss';\r\n\r\n\r\nexport default class StackLinkedListVisualizer extends StackVisualizer {\r\n    static VISUALIZATION_CLASS = StackLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'stack-linkedlist';\r\n        super.addControlLabel(\"Stack (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.stack = new StackLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { QueueVisualizer } from '../';\r\nimport { QueueLinkedList } from 'animation';\r\nimport './queue-linked-list.scss';\r\n\r\n\r\nexport default class QueueLinkedListVisualizer extends QueueVisualizer {\r\n    static VISUALIZATION_CLASS = QueueLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'queue-linkedlist';\r\n        super.addControlLabel(\"Queue (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.queue = new QueueLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import { DequeVisualizer } from '../';\r\nimport { DequeLinkedList } from 'animation';\r\nimport './deque-linked-list.scss';\r\n\r\n\r\nexport default class DequeLinkedListVisualizer extends DequeVisualizer {\r\n    static VISUALIZATION_CLASS = DequeLinkedList;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'deque-linkedlist';\r\n        super.addControlLabel(\"Deque (LinkedList)\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount(() => {\r\n            this.deque = new DequeLinkedList(this.animator);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './stacks-queues-deques.scss';\r\n\r\nimport StackArrayVisualizer from './stack-array';\r\nimport QueueArrayVisualizer from './queue-array';\r\nimport DequeArrayVisualizer from './deque-array';\r\nimport StackLinkedListVisualizer from './stack-linked-list';\r\nimport QueueLinkedListVisualizer from './queue-linked-list';\r\nimport DequeLinkedListVisualizer from './deque-linked-list';\r\n\r\nexport default function StacksQueuesDeques(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <StackQueueDequeView url={url} />} />\r\n                <Route path={`${path}/stack-array`} component={StackArrayVisualizer} />\r\n                <Route path={`${path}/queue-array`} component={QueueArrayVisualizer} />\r\n                <Route path={`${path}/deque-array`} component={DequeArrayVisualizer} />\r\n                <Route path={`${path}/stack-linkedlist`} component={StackLinkedListVisualizer} />\r\n                <Route path={`${path}/queue-linkedlist`} component={QueueLinkedListVisualizer} />\r\n                <Route path={`${path}/deque-linkedlist`} component={DequeLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction StackQueueDequeView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <Link to={`${path}/stack-array`}>StackArray</Link>\r\n                <Link to={`${path}/queue-array`}>QueueArray</Link>\r\n                <Link to={`${path}/deque-array`}>DequeArray</Link>\r\n                <Link to={`${path}/stack-linkedlist`}>StackLinkedList</Link>\r\n                <Link to={`${path}/queue-linkedlist`}>QueueLinkedList</Link>\r\n                <Link to={`${path}/deque-linkedlist`}>DequeLinkedList</Link>\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport './datastructures.scss';\r\n\r\nimport Lists from 'components/lists';\r\nimport StacksQueuesDeques from 'components/stacks-queues-deques'\r\n\r\nexport default function DataStructures() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <DataStructureView url={url} />} />\r\n                <Route path={`${path}/lists`} component={Lists} />\r\n                <Route path={`${path}/stacks-queues-deques`} component={StacksQueuesDeques} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction DataStructureView(props) {\r\n    return (\r\n            <div className=\"datastructure-view\">\r\n            </div>\r\n        );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainComponent from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<MainComponent />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport './app.scss';\r\nimport './universal.scss';\r\n\r\nimport AppHeader from './app-header';\r\nimport AppFooter from './app-footer';\r\nimport Home from 'components/home';\r\nimport About from 'components/about';\r\nimport DataStructures from 'components/datastructures';\r\n\r\nexport default function App() {\r\n    return (\r\n            <HashRouter basename='/'>\r\n                <div className=\"app\">\r\n                    <AppHeader />\r\n                    <div className=\"app-content\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/datastructures\" component={DataStructures} />\r\n                        </Switch>\r\n                    </div>\r\n                    <AppFooter />\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n}\r\n"],"sourceRoot":""}