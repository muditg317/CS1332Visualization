{"version":3,"sources":["res/images/logo.svg","components/app/nav-bar/nav-bar.jsx","components/app/app-header/app-header.jsx","components/app/app-footer/app-footer.jsx","components/home/home.jsx","components/about/about.jsx","components/visualizer/controlBar/controlBar.jsx","utils/ControlBuilder.js","utils/Utils.js","animation/AnimatedObject.js","animation/AttractedDraggableObject.js","animation/Animator.js","animation/ArrayList/ArrayList.js","animation/SinglyLinkedList/SinglyLinkedList.js","animation/DoublyLinkedList/DoublyLinkedList.js","animation/CircularSinglyLinkedList/CircularSinglyLinkedList.js","components/visualizer/visualizer.jsx","components/lists/arraylist/arraylist.jsx","components/lists/singly-linked-list/singly-linked-list.jsx","components/lists/doubly-linked-list/doubly-linked-list.jsx","components/lists/circular-singly-linked-list/circular-singly-linked-list.jsx","components/lists/lists.jsx","components/datastructures/datastructures.jsx","serviceWorker.js","index.js","components/app/app.jsx"],"names":["module","exports","NavBar","props","state","responsive","document","body","scrollTop","documentElement","console","log","this","setState","id","className","to","window","location","href","substring","indexOf","length","src","logo","alt","nav_items","map","nav_item","key","link","content","onClick","toggleResponsiveNav","Component","NavBarItem","icon","title_text","drop_down_items","selfRef","React","createRef","showDropDown","clear","bind","show","setShowDropDown","ref","parentRef","parent","items","parentRoute","NavBarItemTitle","parentNavItem","handleDocumentClick","onMouseDown","containingNavItemRef","addEventListener","removeEventListener","event","current","contains","target","e","nativeEvent","which","hash","NavBarDropDown","drop_down_item","NavBarDropDownItem","side_pane_items","showSidePane","toggleShowSidePane","setShowSidePane","NavBarDropDownItemTitle","parentDropDownItem","containingDropDownItemRef","NavBarSidePane","side_pane_item","NavBarSideItem","AppHeader","AppFooter","Home","About","ControlBar","defaults","controlBar","label","defaultsLabel","forceUpdate","mainLabel","controlGroup","appendChild","PureComponent","createControl","type","value","newControl","createElement","classList","add","setAttribute","createButton","createField","prompt","field","validators","forEach","validator","validatorIntOnly","match","reduce","sum","char","validatorMaxLength","maxLength","Math","min","addSubmit","callback","undefined","createSlider","max","defaultValue","step","slider","createControlGroup","controls","control","setTabControl","nextControl","shifted","preventDefault","blur","focus","addArray","array","newArr","arrays","item","i","AnimatedObject","xProgress","yProgress","direction","animationSpeed","inPosition","sign","AttractedDraggableObject","x","y","currentX","currentY","desiredX","desiredY","vx","vy","pinnedToMouse","sqrt","pow","frozen","onStop","p5","deltaX","deltaY","mouseX","mouseY","angle","atan","PI","magnitude","ATTRACTION","prevAngle","cos","sin","abs","MIN_DISTANCE","Animator","events","objects","connectingEdges","push","filter","ArrayList","animator","ELEMENT_SIZE","INITIAL_CAPACITY","backingArray","ArrayElement","size","animationHistory","animationQueue","animating","index","data","animation","doubleSize","shiftForIndex","method","setIndex","params","sizeIncr","addAnimation","addAtIndex","element","shiftIntoIndex","sizeDecr","removeFromIndex","resetElement","incrLength","shiftElement","shiftElementMovement","shiftElementIndex","shift","emit","scope","update","foundAnimElement","apply","maxPerRow","floor","width","rows","ceil","translate","row","numElements","noStroke","fill","rect","stroke","textAlign","CENTER","textSize","block","line","text","toString","nextX","nextY","draw","querySelector","getBoundingClientRect","height","pop","windowWidth","remove","resizeCanvas","USE_CANVAS","SIZE","toX","toY","posX","posY","SinglyLinkedList","reset","node","nextNode","head","moveHighlight","next","makeNode","setTempNodeBefore","setTempNodePrev","shiftForNode","insertTempNode","prev","toDelete","markNodeForDeletion","unmakeNode","customEnd","shiftIntoNode","skipTempNode","nodes","tempNode","pinnedNode","SinglyLinkedListNode","splice","getNodePosition","fromNode","toNode","unHighlight","highlight","highlighted","nodeToDelete","markForDeletion","setOnStop","doneAnimating","shiftNode","ELEMENT_HEIGHT","containsPos","pin","unpin","markBroken","highlightForDeletion","updateNode","Visualizer","maxAnimationSpeed","setTimeout","ELEMENT_WIDTH","pressedNode","getNodeAtPos","POINTER_WIDTH","ITEM_WIDTH","SPACING","MAX_DIST_REMOVE","handBroken","color","displacement","dist","Utils","circle","DoublyLinkedList","tail","skipTempNodePrev","skipTempNodeNext","DoublyLinkedListNode","ELEMENT_PADDED_WIDTH","CircularSinglyLinkedList","changeHeadData","customNodeShift","resetHead","CircularSinglyLinkedListNode","time","pointsToHead","noFill","curveTightness","beginShape","curveVertex","endShape","setup","mousePressed","mouseReleased","windowResized","controlBarRef","controlGroups","INITIAL_SPEED","disableUI","enableUI","focusedElement","on","addDefaultControls","MAX_SPEED","SPEED_SLIDER_DEGREE","speedSlider","ControlBuilder","defaultControlGroup","registerControlGroup","childNodes","child","tagName","activeElement","disabled","setMainLabel","setDefaultsLabel","addDefaultGroup","addControlGroup","canvasParentRef","mobile","ontouchstart","canvas","createCanvas","touchStarted","background","visualization","style","class","constructor","render","ArrayListVisualizer","addAtIndexButtonCallback","addToFrontButtonCallback","addToBackButtonCallback","removeFromIndexButtonCallback","removeFromFrontButtonCallback","removeFromBackButtonCallback","resetButtonCallback","elementFieldCallback","indexFieldCallback","list","addControls","valueField","indexField","addAtIndexButton","addToFrontButton","addToBackButton","removeFromIndexButton","removeFromFrontButton","removeFromBackButton","resetButton","addFrontBackGroup","removeFrontBackGroup","valueFrontBackGroup","indexGroup","resetGroup","parseInt","isNaN","addToBack","addToFront","removeFromFront","removeFromBack","SinglyLinkedListVisualizer","DoublyLinkedListVisualizer","CircularSinglyLinkedListVisualizer","Lists","useRouteMatch","path","url","exact","component","ListView","DataStructures","DataStructureView","Boolean","hostname","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39da5d95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d46fc74.svg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav-bar.scss';\r\n\r\nimport logo from 'res/images/logo.svg';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            responsive: false,\r\n        };\r\n    }\r\n\r\n    scrollToTop() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        console.log(\"scrolltotop\");\r\n    }\r\n\r\n    toggleResponsiveNav() {\r\n        this.setState((state) => {\r\n                return {\r\n                    responsive: !state.responsive,\r\n                };\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"top-nav\" className={`nav-bar ${this.state.responsive ? \"responsive\" : \"\"} nav-container`}>\r\n                    <Link className=\"not-a-button\" id=\"nav-logo\" to={window.location.href.substring(window.location.href.indexOf(\"/#/\")).length > 0 ? \"/\" : \"\" }><img src={logo} className=\"app-logo\" alt=\"logo\" /></Link>\r\n                    {this.props.nav_items.map( (nav_item) => {\r\n                        return (\r\n                                <NavBarItem key={`nav-${nav_item.link}`} content={nav_item} />\r\n                            );\r\n                    })}\r\n                    <button className=\"not-a-button nav-bar-item nav-item nav-item-title\" id=\"top-nav-menu\" onClick={() => this.toggleResponsiveNav()}><i className=\"fa fa-bars\"></i></button>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            icon: this.props.content.icon,\r\n            title_text: this.props.content.title_text,\r\n            drop_down_items: this.props.content.drop_down_items,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.drop_down_items) {\r\n            this.state.showDropDown = false;\r\n        }\r\n\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    setShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: show,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowDropDown(show) {\r\n        if (this.state.drop_down_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showDropDown: !state.showDropDown,\r\n                }\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setShowDropDown(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-item nav-item ${this.state.drop_down_items && this.state.showDropDown ? \"active\" : \"\"}`} ref={this.selfRef}>\r\n                    <NavBarItemTitle link={this.state.link} icon={this.state.icon} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.drop_down_items && this.state.showDropDown ?\r\n                        <NavBarDropDown items={this.state.drop_down_items} parentRoute={`/${this.state.link}`} parent={this} />\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            icon: this.props.icon,\r\n            title_text: this.props.title_text,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingNavItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingNavItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentNavItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingNavItemRef);\r\n        // console.log(this.state.containingNavItemRef.current);\r\n        if (this.state.containingNavItemRef.current && !this.state.containingNavItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentNavItem.setShowDropDown(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentNavItem.state.showDropDown) {\r\n                window.location.hash = `#/${this.state.parentNavItem.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentNavItem.setShowDropDown(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentNavItem.state.drop_down_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`/${this.state.link}`}><i className={`fa fa-fw fa-${this.state.icon}`}></i> {this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drop_down_items: this.props.items,\r\n            parentNavItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentNavItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-drop-down nav-container\"> {\r\n                    this.state.drop_down_items.map( (drop_down_item) => {\r\n                    return (\r\n                            <NavBarDropDownItem key={`nav-${drop_down_item.link}`} content={drop_down_item} parent={this} parentRoute={this.props.parentRoute} />\r\n                        );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarDropDownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            side_pane_items: this.props.content.side_pane_items,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.selfRef = React.createRef();\r\n\r\n        if (this.state.side_pane_items) {\r\n            this.state.showSidePane = false;\r\n        }\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    setShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: show,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShowSidePane(show) {\r\n        if (this.state.side_pane_items) {\r\n            this.setState( (state) => {\r\n                return {\r\n                    showSidePane: !state.showSidePane,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown() {\r\n        this.toggleShowSidePane();\r\n    }\r\n\r\n    clear() {\r\n        this.setShowSidePane(false);\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={`nav-bar-drop-down-item nav-item ${this.state.side_pane_items && this.state.showSidePane ? \"active\": \"\"}`} ref={this.selfRef}>\r\n                    <NavBarDropDownItemTitle link={this.state.link} parentRoute={this.state.parentRoute} title_text={this.state.title_text} parentRef={this.selfRef} parent={this} />\r\n                    {this.state.side_pane_items && this.state.showSidePane ?\r\n                        <NavBarSidePane items={this.state.side_pane_items} parentRoute={`${this.props.parentRoute}/${this.state.link}`} parent={this}></NavBarSidePane>\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nclass NavBarDropDownItemTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            link: this.props.link,\r\n            parentRoute: this.props.parentRoute,\r\n            title_text: this.props.title_text,\r\n            // containingDropDownItemRef: this.props.parentRef,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({containingDropDownItemRef: this.props.parentRef}, () => {\r\n            // console.log(this.state.containingDropDownItemRef);\r\n        });\r\n        document.addEventListener(\"mousedown\", this.handleDocumentClick);\r\n        // console.log(this.state.parentDropDownItem);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleDocumentClick);\r\n    }\r\n    handleDocumentClick(event) {\r\n        // console.log(\"doc clicked nav title\");\r\n        // console.log(this.state.containingDropDownItemRef);\r\n        // console.log(this.state.containingDropDownItemRef.current);\r\n        if (this.state.containingDropDownItemRef.current && !this.state.containingDropDownItemRef.current.contains(event.target)) {\r\n            // console.log(\"outside nav title\");\r\n            this.state.parentDropDownItem.setShowSidePane(false);\r\n        }\r\n    }\r\n\r\n    onMouseDown(e) {\r\n        if (e.nativeEvent.which === 1) {\r\n            if (this.state.parentDropDownItem.state.showSidePane) {\r\n                window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n                this.clear();\r\n            } else {\r\n                this.state.parentDropDownItem.toggleShowSidePane();\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.parentDropDownItem.state.side_pane_items ?\r\n                    <div onMouseDown={this.onMouseDown} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`}>{this.state.title_text}</div>\r\n                :\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-drop-down-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n            );\r\n    }\r\n}\r\n\r\nclass NavBarSidePane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            side_pane_items: this.props.items,\r\n            parentDropDownItem: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.state.parentDropDownItem.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-pane nav-container\"> {\r\n                    this.state.side_pane_items.map( (side_pane_item) => {\r\n                        return (\r\n                                <NavBarSideItem key={`nav-${side_pane_item.link}`} content={side_pane_item} parentRoute={this.props.parentRoute} parent={this} />\r\n                            );\r\n                })} </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nclass NavBarSideItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            link: this.props.content.link,\r\n            title_text: this.props.content.title_text,\r\n            parentRoute: this.props.parentRoute,\r\n            parent: this.props.parent,\r\n        };\r\n\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        window.location.hash = `#${this.state.parentRoute}/${this.state.link}`;\r\n        this.state.parent.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"nav-bar-side-item nav-item\">\r\n                    <Link onMouseDown={this.clear} className=\"nav-bar-side-pane-item-title nav-item-title\" id={`nav-${this.state.link}`} to={`${this.state.parentRoute}/${this.state.link}`}>{this.state.title_text}</Link>\r\n                </div>\r\n            );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './app-header.scss';\r\nimport NavBar from '../nav-bar';\r\n\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n            <header className=\"app-header\">\r\n                <NavBar nav_items={[\r\n                    {\r\n                        link: \"datastructures\",\r\n                        icon: \"sitemap\",\r\n                        title_text: \"Data Structures\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"lists\",\r\n                                title_text: \"Lists\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"arraylist\",\r\n                                        title_text: \"ArrayList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"sll\",\r\n                                        title_text: \"Singly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"dll\",\r\n                                        title_text: \"Doubly LinkedList\",\r\n                                    },\r\n                                    {\r\n                                        link: \"c-sll\",\r\n                                        title_text: \"Circular Singly LinkedList\",\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"stacks-queues-deques\",\r\n                                title_text: \"Stacks/Queues/Deques\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"stack-array\",\r\n                                        title_text: \"Stack (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"stack-linkedlist\",\r\n                                        title_text: \"Stack (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-array\",\r\n                                        title_text: \"Queue (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"queue-linkedlist\",\r\n                                        title_text: \"Queue (LinkedList)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-array\",\r\n                                        title_text: \"Deque (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"deque-linkedlist\",\r\n                                        title_text: \"Deque (LinkedList)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"trees-skiplist\",\r\n                                title_text: \"Trees and SkipList\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bst\",\r\n                                        title_text: \"Binary Search Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"heap-pq\",\r\n                                        title_text: \"Heap / Priority Queue\"\r\n                                    },\r\n                                    {\r\n                                        link: \"avl\",\r\n                                        title_text: \"AVL\"\r\n                                    },\r\n                                    {\r\n                                        link: \"24-tree\",\r\n                                        title_text: \"2-4 Tree\"\r\n                                    },\r\n                                    {\r\n                                        link: \"splaytree\",\r\n                                        title_text: \"Deque (Array)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"skiplist\",\r\n                                        title_text: \"SkipList\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"hashmaps\",\r\n                                title_text: \"HashMaps\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"hashmap-probing\",\r\n                                        title_text: \"HashMap (Probing)\"\r\n                                    },\r\n                                    {\r\n                                        link: \"hashmap-chaining\",\r\n                                        title_text: \"HashMap (Chaining)\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"algorithms\",\r\n                        icon: \"stack-overflow\",\r\n                        title_text: \"Algorithms\",\r\n                        drop_down_items: [\r\n                            {\r\n                                link: \"sorting\",\r\n                                title_text: \"Sorting\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"bubble\",\r\n                                        title_text: \"Bubble Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"cocktail\",\r\n                                        title_text: \"Cocktail Shaker Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"insertion\",\r\n                                        title_text: \"Insertion Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"selection\",\r\n                                        title_text: \"Selection Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quicksort\",\r\n                                        title_text: \"Quick Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"quickselect\",\r\n                                        title_text: \"Quick Select\"\r\n                                    },\r\n                                    {\r\n                                        link: \"merge\",\r\n                                        title_text: \"Merge Sort\"\r\n                                    },\r\n                                    {\r\n                                        link: \"lsd-radix\",\r\n                                        title_text: \"LSD Radix Sort\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"string-searching\",\r\n                                title_text: \"String Searching\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"brute-force\",\r\n                                        title_text: \"Brute Force\"\r\n                                    },\r\n                                    {\r\n                                        link: \"boyer-moore\",\r\n                                        title_text: \"Boyer Moore\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kmp\",\r\n                                        title_text: \"KMP\"\r\n                                    },\r\n                                    {\r\n                                        link: \"rabin-karp\",\r\n                                        title_text: \"Rabin Karp\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"graphs\",\r\n                                title_text: \"Graph Algorithms\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"breadth\",\r\n                                        title_text: \"Breadth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"depth\",\r\n                                        title_text: \"Depth-First Search\"\r\n                                    },\r\n                                    {\r\n                                        link: \"dijkstra\",\r\n                                        title_text: \"Dijkstra's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"prim\",\r\n                                        title_text: \"Prim's\"\r\n                                    },\r\n                                    {\r\n                                        link: \"kruskal\",\r\n                                        title_text: \"Kruskal's\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                link: \"dynamic\",\r\n                                title_text: \"Dynamic Programming\",\r\n                                side_pane_items: [\r\n                                    {\r\n                                        link: \"lcs\",\r\n                                        title_text: \"LCS\"\r\n                                    },\r\n                                    {\r\n                                        link: \"floyd-warshall\",\r\n                                        title_text: \"Floyd-Warshall\"\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        link: \"about\",\r\n                        icon: \"user\",\r\n                        title_text: \"About\",\r\n                    },\r\n                ]} />\r\n            </header>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './app-footer.scss';\r\n\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n            <footer className=\"app-footer\">\r\n                <div className=\"footer-message\">\r\n                    <p>Created using ReactJS by Mudit Gupta for The Georgia Institute of Technology. Updated Feb. 16, 2020.</p>\r\n                </div>\r\n            </footer>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './home.scss';\r\n\r\nexport default function Home() {\r\n    return (\r\n            <div className=\"home\">\r\n\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport './about.scss';\r\n\r\nexport default function About() {\r\n    return (\r\n            <div className=\"about\">\r\n                <h1>About CS Vis</h1>\r\n                <p>I created this tool to visualize some of the alogirthms I've been learning in my classes.\r\n                Most of these visualizations are inspired by those found at <a href='https://csvistool.com'>csvistool.com</a>.\r\n                I tried to make the UX here as convenient as possible, but I'd love to hear your design input;\r\n                I'm not a front-end person, so I'm doing my best :).</p>\r\n                <h2>Me!</h2>\r\n                <p>This is something I wanted to make to learn more about these datastructures and algorithms while also learning how to use the ReactJS framework.\r\n                Check out some of my other projects at muditgupta.appspot.com</p>\r\n            </div>\r\n        );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './controlBar.scss';\r\n\r\nexport default class ControlBar extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.defaults = React.createRef();\r\n        this.controlBar = React.createRef();\r\n    }\r\n\r\n    setDefaultsLabel(label) {\r\n        this.defaultsLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    setMainLabel(label) {\r\n        this.mainLabel = label;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    addDefaultGroup(controlGroup) {\r\n        this.defaults.current.appendChild(controlGroup);\r\n    }\r\n\r\n    addControlGroup(controlGroup) {\r\n        this.controlBar.current.appendChild(controlGroup);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"control-bar\">\r\n                    <div className=\"control-container\" id=\"main-control\">\r\n                        {this.mainLabel && <p className=\"control-label\" id=\"main-control-label\">{this.mainLabel}</p>}\r\n                        <div className=\"controls control-group\"  ref={this.controlBar}></div>\r\n                    </div>\r\n                    <div className=\"control-container\" id=\"default-control\">\r\n                        {// {this.defaultsLabel && <p className=\"control-label\" id=\"default-control-label\">{this.defaultsLabel}</p>}\r\n                        }\r\n                        <div className=\"controls default control-group\" ref={this.defaults}></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","export function createControl(type, value) {\r\n    let newControl = document.createElement(\"input\");\r\n    newControl.classList.add(\"visual-control\", type);\r\n\r\n    newControl.setAttribute(\"type\", type);\r\n    if (value) {\r\n        newControl.setAttribute(\"value\", value);\r\n    }\r\n\r\n    return newControl;\r\n};\r\n\r\nexport function createButton(label) {\r\n    let button = createControl(\"button\", label);\r\n\r\n    // button.addEventListener(\"click\", disableControls);\r\n\r\n    return button;\r\n};\r\n\r\nexport function createField(prompt, ...validators) {\r\n    let field = createControl(\"text\");\r\n    field.setAttribute(\"placeHolder\", prompt);\r\n\r\n    validators.forEach((validator) => {\r\n        field.addEventListener(\"input\", () => { validator(field); });\r\n    });\r\n\r\n    return field;\r\n};\r\n\r\nexport function validatorIntOnly() {\r\n    return (field) => {\r\n        let regex = /^(-[0-9])?[0-9]*/g;\r\n        field.value = field.value.match(regex).reduce((sum, char) => sum + char);\r\n    }\r\n};\r\n\r\nexport function validatorMaxLength(maxLength) {\r\n    return (field) => {\r\n        if (field.value.length > maxLength) {\r\n            field.value = field.value.substring(0, Math.min(field.value.length, maxLength));\r\n        }\r\n    };\r\n};\r\n\r\nexport function addSubmit(field, callback) {\r\n    if (field.type !== \"text\") {\r\n        console.log(\"cannot add callback to nontextfield\");\r\n        return;\r\n    }\r\n    if (callback === undefined) {\r\n        console.log(\"cannot set field submit to undefined callback\");\r\n        return;\r\n    }\r\n    field.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n            // disableControls();\r\n            callback();\r\n        }\r\n    });\r\n};\r\n\r\nexport function createSlider(min, max, defaultValue, step) {\r\n    let slider = createControl(\"range\");\r\n\r\n    slider.setAttribute(\"min\", min);\r\n    slider.setAttribute(\"max\", max);\r\n    slider.setAttribute(\"step\", step === 0 ? \"1e-18\" : step);\r\n    slider.setAttribute(\"defaultValue\", defaultValue);\r\n    slider.value = defaultValue;\r\n\r\n    return slider;\r\n};\r\n\r\n\r\nexport function createControlGroup(id, ...controls) {\r\n    let controlGroup = document.createElement(\"div\");\r\n    controlGroup.setAttribute(\"class\", \"control-group\");\r\n    controlGroup.id = id;\r\n\r\n    controls.forEach((control) => {\r\n        controlGroup.appendChild(control);\r\n    });\r\n\r\n    return controlGroup;\r\n};\r\n\r\nexport function setTabControl(control, nextControl) {\r\n    if (control === undefined || nextControl === undefined) {\r\n        console.log(\"cannot link undefined controls\");\r\n        return;\r\n    }\r\n    enableShift();\r\n    control.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && (window.shifted !== undefined && !window.shifted)) {\r\n            event.preventDefault();\r\n            control.blur();\r\n            nextControl.focus();\r\n        }\r\n    });\r\n    nextControl.addEventListener(\"keydown\", (event) => {\r\n        if (event.key === \"Tab\" && window.shifted) {\r\n            event.preventDefault();\r\n            nextControl.blur();\r\n            control.focus();\r\n        }\r\n    });\r\n};\r\n\r\nfunction enableShift() {\r\n    if (window.shifted === undefined) {\r\n        window.shifted = false;\r\n        window.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = true;\r\n            }\r\n        });\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (event.key === \"Shift\") {\r\n                event.preventDefault();\r\n                window.shifted = false;\r\n            }\r\n        });\r\n    }\r\n};\r\n","export function addArray(array, ...arrays) {\r\n    let newArr = [...array];\r\n    arrays.forEach(array => {\r\n        array.forEach((item, i) => {\r\n            newArr[i] += item;\r\n        });\r\n    });\r\n    return newArr;\r\n}\r\n","export default class AnimatedObject {\r\n    constructor() {\r\n        this.xProgress = 1;\r\n        this.yProgress = 1;\r\n        // this.translationFrames = 0;\r\n\r\n        // this.animating = false;\r\n        this.direction = 0;\r\n    }\r\n\r\n    travel(direction) {\r\n        this.xProgress = 0;\r\n        this.yProgress = 0;\r\n        this.direction = direction;\r\n    }\r\n\r\n    inPosition() {\r\n        return this.direction >= 0\r\n                ? this.xProgress >= 1 && this.yProgress >= 1\r\n                : this.xProgress <= -1 && this.yProgress <= -1;\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        if (!this.inPosition()) {\r\n            // this.animating = true;\r\n            this.xProgress += Math.sign(this.direction) * animationSpeed/200;\r\n            this.yProgress += Math.sign(this.direction) * animationSpeed/200;\r\n        } else {\r\n            // this.animating = false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","export default class AttractedDraggableObject {\r\n\r\n    static ATTRACTION = 0.3;\r\n    static MIN_DISTANCE = 5;\r\n\r\n    constructor(x,y) {\r\n        this.currentX = x;\r\n        this.currentY = y;\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.pinnedToMouse = false;\r\n    }\r\n\r\n    shift(x,y) {\r\n        this.desiredX = x;\r\n        this.desiredY = y;\r\n    }\r\n\r\n    displacement() {\r\n        return Math.sqrt(Math.pow(this.desiredX - this.currentX,2) + Math.pow(this.desiredY - this.currentY,2));\r\n    }\r\n\r\n    pin() {\r\n        if (!this.frozen) {\r\n            this.pinnedToMouse = true;\r\n        }\r\n    }\r\n\r\n    unpin() {\r\n        this.pinnedToMouse = false;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n    }\r\n\r\n    setOnStop(callback) {\r\n        this.onStop = callback;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        if (this.frozen) {\r\n            this.desiredX = this.currentX;\r\n            this.desiredY = this.currentY;\r\n        }\r\n        let deltaX = this.desiredX - this.currentX;\r\n        let deltaY = this.desiredY - this.currentY;\r\n        if (this.pinnedToMouse) {\r\n            this.currentX = p5.mouseX;\r\n            this.currentY = p5.mouseY;\r\n        } else {\r\n            if (deltaY !== 0 || deltaX !== 0) {\r\n                let angle = Math.atan(deltaY/deltaX);\r\n                if (deltaX < 0) {\r\n                    angle += Math.PI;\r\n                }\r\n                let magnitude = AttractedDraggableObject.ATTRACTION * animationSpeed;\r\n                let prevAngle = Math.atan(this.vy/this.vx);\r\n                if (this.vx < 0) {\r\n                    prevAngle += Math.PI;\r\n                }\r\n                this.vx += magnitude * Math.cos(angle);\r\n                this.vy += magnitude * Math.sin(angle);\r\n\r\n                this.vx *= 0.75;\r\n                this.vy *= 0.75;\r\n\r\n                if (Math.abs(Math.abs(prevAngle - angle) - Math.PI) < (Math.PI/12)) {\r\n                    this.currentX = this.desiredX;\r\n                    this.vx = 0;\r\n                    this.currentY = this.desiredY;\r\n                    this.vy = 0;\r\n                    if (this.onStop) {\r\n                        this.onStop();\r\n                        this.onStop = null;\r\n                    }\r\n                }\r\n                this.currentX += this.vx;\r\n                this.currentY += this.vy;\r\n            } else {\r\n                if (this.onStop) {\r\n                    this.onStop();\r\n                    this.onStop = null;\r\n                }\r\n            }\r\n        }\r\n        return Math.sqrt(Math.pow(deltaX,2) + Math.pow(deltaY,2));\r\n    }\r\n}\r\n","export default class Animator {\r\n    constructor() {\r\n        this.events = [];\r\n\r\n        this.objects = [];\r\n        this.connectingEdges = [];\r\n\r\n\r\n    }\r\n\r\n    on(type, callback) {\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push(callback);\r\n    }\r\n\r\n    off(type, callback) {\r\n        if (this.events[type]) {\r\n            this.events[type] = this.events[type].filter( event => {\r\n                return event !== callback;\r\n            });\r\n        }\r\n    }\r\n\r\n    emit(type) {\r\n        if (this.events[type]) {\r\n            this.events[type].forEach( event => {\r\n                event();\r\n            });\r\n        }\r\n    }\r\n}\r\n","import AnimatedObject from 'animation/AnimatedObject';\r\n\r\nexport default class ArrayList extends AnimatedObject {\r\n\r\n    static USE_CANVAS = true;\r\n\r\n    constructor(animator) {\r\n        super();\r\n\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n\r\n        //config\r\n        this.ELEMENT_SIZE = 50;\r\n\r\n        this.INITIAL_CAPACITY = 9;\r\n        this.backingArray = {};\r\n        this.backingArray.length = 9;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            this.backingArray[i] = new ArrayElement(\"\", this.ELEMENT_SIZE);\r\n        }\r\n        this.size = 0;\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        if (this.size === this.backingArray.length) {\r\n            animation.push(...this.doubleSize());\r\n        }\r\n        if (index < this.size) {\r\n            animation.push(...this.shiftForIndex(index));\r\n        }\r\n        animation.push({method:this.setIndex,params:[index,data,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        this.animating = true;\r\n        let animation = [];\r\n        let element = this.backingArray[index];\r\n        let data = element.data;\r\n        element.data = \"\";\r\n        if (index < this.size - 1) {\r\n            animation.push(...this.shiftIntoIndex(index));\r\n        }\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.backingArray = {};\r\n        this.backingArray.length = 9;\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            this.backingArray[i] = new ArrayElement(\"\", this.ELEMENT_SIZE);\r\n        }\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    setIndex(index,data) {\r\n        this.backingArray[index].data = data;\r\n    }\r\n\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    doubleSize() {\r\n        let animation = []\r\n        let prevCapacity = this.backingArray.length;\r\n        for (let i = prevCapacity; i < this.backingArray.length * 2; i++) {\r\n            animation.push({method:this.resetElement,params:[i,],});\r\n        }\r\n        animation.push({method:this.incrLength,params:[],});\r\n        return animation;\r\n    }\r\n\r\n    incrLength() {\r\n        this.backingArray.length = 2 * this.backingArray.length;\r\n    }\r\n\r\n    shiftForIndex(index) {\r\n        let animation = []\r\n        for (let i = this.size - 1; i >= index; i--) {\r\n            animation.push(...this.shiftElement(i,1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[index,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftIntoIndex(index) {\r\n        let animation = [];\r\n        for (let i = index + 1; i < this.size; i++) {\r\n            animation.push(...this.shiftElement(i,-1));\r\n        }\r\n        animation.push({method:this.resetElement,params:[this.size-1,],});\r\n    }\r\n\r\n    shiftElement(index, direction) {\r\n        let animation = [];\r\n        animation.push({method:this.shiftElementMovement,params:[index,direction,],});\r\n        animation.push({method:this.shiftElementIndex,params:[index,direction,],});\r\n        return animation;\r\n    }\r\n\r\n    shiftElementMovement(index, direction) {\r\n        this.backingArray[index].shift(direction);\r\n        // console.log(\"move\",index,JSON.stringify(this.backingArray));\r\n    }\r\n\r\n    shiftElementIndex(index, direction) {\r\n        // console.log(\"index\",index,JSON.stringify(this.backingArray));\r\n        // console.log(index+direction, this.backingArray[index].data);\r\n        this.backingArray[index+direction].data = this.backingArray[index].data;\r\n        this.backingArray[index].data = \"\";\r\n    }\r\n\r\n\r\n    resetElement(index) {\r\n        if (this.backingArray[index]) {\r\n            this.backingArray[index].data = \"\";\r\n        } else {\r\n            this.backingArray[index] = new ArrayElement(\"\", this.ELEMENT_SIZE);\r\n        }\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        super.update();\r\n        for (let i = 0; i < this.backingArray.length; i++) {\r\n            if (this.backingArray[i]) {\r\n                this.backingArray[i].update(animationSpeed);\r\n            }\r\n        }\r\n        let foundAnimElement = false;\r\n        for (let i = 0; i < this.size; i++) {\r\n            if (!this.backingArray[i].inPosition()) {\r\n                foundAnimElement = true;\r\n                break;\r\n            }\r\n        }\r\n        this.animating = foundAnimElement;\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                animation.method.apply(animation.scope || this, animation.params);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        let maxPerRow = Math.floor((p5.width - 2 * this.x) / this.ELEMENT_SIZE);\r\n        let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        // let width = p5.height;\r\n        // let height = p5.height;\r\n        // if (rows*2*this.ELEMENT_SIZE > (height - (2*this.y))) {\r\n        //     height = (rows*2*this.ELEMENT_SIZE + (3*this.y))\r\n        //     width -= 16;\r\n        //     document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        //     p5.resizeCanvas(width, height);\r\n        // } else {\r\n        //     document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        // }\r\n\r\n        p5.push();\r\n        p5.translate(this.x,this.y);\r\n\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            p5.noStroke();\r\n            p5.fill(200);\r\n            p5.rect(this.ELEMENT_SIZE/10,this.ELEMENT_SIZE/10 + (2 * this.ELEMENT_SIZE * row),this.ELEMENT_SIZE*numElements,this.ELEMENT_SIZE,this.ELEMENT_SIZE/20);\r\n\r\n            p5.stroke(0);\r\n            p5.fill(255);\r\n            p5.rect(0,(2 * this.ELEMENT_SIZE * row), this.ELEMENT_SIZE*numElements,this.ELEMENT_SIZE);\r\n        }\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_SIZE/3 - 2);\r\n\r\n        let i = 0;\r\n        for (let row = 0; row < rows; row++) {\r\n            let numElements = row !== rows-1 ? maxPerRow\r\n                    : (this.backingArray.length % maxPerRow === 0 ? maxPerRow : (this.backingArray.length % maxPerRow));\r\n            let x = 0;\r\n            let y = 2 * row * this.ELEMENT_SIZE;\r\n            for (let block = 0; block < numElements; block++) {\r\n                p5.stroke(0);\r\n                p5.line(x,y, x, y+this.ELEMENT_SIZE);\r\n\r\n                p5.noStroke();\r\n                p5.fill(0,0,255);\r\n                p5.text(i.toString(), x,y+this.ELEMENT_SIZE, this.ELEMENT_SIZE,this.ELEMENT_SIZE);\r\n\r\n                let element = this.backingArray[i++];\r\n                let nextX = block < (numElements - 1) ? x + this.ELEMENT_SIZE : 0;\r\n                let nextY = block < (numElements - 1) ? y : (y + (this.ELEMENT_SIZE*2));\r\n                if (element.data) {\r\n                    element.draw(p5, x,y,nextX,nextY);\r\n                }\r\n                x = nextX;\r\n                y = nextY;\r\n                if (y >= document.querySelector(\".canvas-container\").getBoundingClientRect().height - this.ELEMENT_SIZE) {\r\n                    // this.windowResized(p5, document.querySelector(\".canvas-container\").getBoundingClientRect().height);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        let maxPerRow = Math.floor((p5.width - 2 * this.x) / this.ELEMENT_SIZE);\r\n        let rows = Math.ceil(this.backingArray.length / maxPerRow);\r\n\r\n        let width = p5.windowWidth;\r\n        // let height = p5.height;\r\n        if (rows*2*this.ELEMENT_SIZE > (height - (2*this.y))) {\r\n            height = (rows*2*this.ELEMENT_SIZE + (3*this.y))\r\n            width -= 16;\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n        p5.resizeCanvas(width, height);\r\n    }\r\n}\r\n\r\n\r\nclass ArrayElement extends AnimatedObject {\r\n    constructor(data, SIZE) {\r\n        super();\r\n\r\n        this.data = data;\r\n\r\n        this.SIZE = SIZE;\r\n    }\r\n\r\n    shift(direction) {\r\n        super.travel(direction);\r\n    }\r\n\r\n    update(animationSpeed) {\r\n        super.update(animationSpeed);\r\n    }\r\n\r\n\r\n    draw(p5, x,y, toX,toY) {\r\n        p5.push();\r\n        p5.fill(0);\r\n        p5.stroke(50);\r\n        if (!this.inPosition()) {\r\n            let posX = (toX-x)*this.xProgress + x;\r\n            let posY = (toY-y)*this.yProgress + y;\r\n            p5.text(this.data.toString(), posX,posY, this.SIZE,this.SIZE);\r\n        } else {\r\n            p5.text(this.data.toString(), x,y, this.SIZE,this.SIZE)\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport Visualizer from 'components/visualizer';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class SinglyLinkedList {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = SinglyLinkedList.ITEM_WIDTH + SinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        this.reset();\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n        console.log(this);\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node = null;\r\n        let nextNode = this.head;\r\n        for (let i = 0; i < index; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n            node = nextNode;\r\n            nextNode = nextNode.next;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[node,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else {\r\n            let node = this.head;\r\n            animation.push({method:this.moveHighlight,params:[null,node,],});\r\n            for (let i = 0; i < index - 1; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                node = node.next;\r\n            }\r\n            prev = node;\r\n            toDelete = prev.next;\r\n            next = toDelete.next;\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new SinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.setOnStop(() => {\r\n            this.doneAnimating();\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    doneAnimating() {\r\n        this.animating = false;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        let x = SinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * SinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * SinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        this.width = p5.width - 2 * this.x;\r\n        this.height = p5.height - 2 * this.y;\r\n        let node = this.head;\r\n        while (node) {\r\n            this.updateNode(node, animationSpeed, p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.updateNode(this.tempNode, animationSpeed, p5);\r\n        }\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                animation.method.apply(animation.scope || this, animation.params);\r\n                if (!animation.customEnd) {\r\n                    if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                        this.animating = false;\r\n                    } else {\r\n                        let time = 5000 / animationSpeed;\r\n                        setTimeout(() => {\r\n                            this.animating = false;\r\n                        }, time);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        // let maxPerRow = Math.floor(this.width / SinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        let width = p5.windowWidth;\r\n        if ((this.getNodePosition(this.size-1)[1] + SinglyLinkedList.ELEMENT_HEIGHT) > (height - (2*this.y))) {\r\n            height = (this.getNodePosition(this.size-1)[1] + SinglyLinkedList.ELEMENT_HEIGHT + (3*this.y))\r\n            width -= 16;\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        this.width = p5.width - 2 * this.x;\r\n        this.height = p5.height - 2 * this.y;\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass SinglyLinkedListNode extends AttractedDraggableObject {\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + SinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + SinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > SinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, SinglyLinkedList.ITEM_WIDTH, SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, SinglyLinkedList.ELEMENT_WIDTH,SinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH + SinglyLinkedList.POINTER_WIDTH / 2, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + SinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + SinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + SinglyLinkedList.ITEM_WIDTH, this.currentY + SinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport Visualizer from 'components/visualizer';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class DoublyLinkedList {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = DoublyLinkedList.ELEMENT_WIDTH + 2 * DoublyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_PADDED_WIDTH = DoublyLinkedList.ITEM_WIDTH + DoublyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        this.reset();\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n        console.log(this);\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let node;\r\n        let nextNode;\r\n        let highlighted;\r\n        if (index < this.size / 2) {\r\n            node = null;\r\n            nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            highlighted = node;\r\n        } else {\r\n            node = this.tail;\r\n            nextNode = null;\r\n            for (let i = this.size - 1; i > index-1; i--) {\r\n                animation.push({method:this.moveHighlight,params:[nextNode,node,],});\r\n                nextNode = node;\r\n                node = node.prev;\r\n            }\r\n            highlighted = nextNode;\r\n        }\r\n        animation.push({method:this.makeNode,params:[index,data,],});\r\n        animation.push({method:this.moveHighlight,params:[highlighted,null,],});\r\n        animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n        animation.push({method:this.setTempNodePrev,params:[node,],});\r\n        if (index < this.size) {\r\n            animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n        }\r\n        animation.push({method:this.insertTempNode,params:[index,],});\r\n        animation.push({method:this.sizeIncr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        if (index === 0) {\r\n            prev = null;\r\n            toDelete = this.head;\r\n            next = toDelete.next;\r\n        } else if (index === this.size - 1) {\r\n            next = null;\r\n            toDelete = this.tail;\r\n            prev = toDelete.prev;\r\n        } else {\r\n            if (index < this.size / 2) {\r\n                let node = this.head;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = 0; i < index; i++) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n                    node = node.next;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            } else {\r\n                let node = this.tail;\r\n                animation.push({method:this.moveHighlight,params:[null,node,],});\r\n                for (let i = this.size - 1; i > index; i--) {\r\n                    animation.push({method:this.moveHighlight,params:[node,node.prev,],});\r\n                    node = node.prev;\r\n                }\r\n                prev = node.prev;\r\n                toDelete = node;\r\n                next = node.next;\r\n            }\r\n        }\r\n        let data = toDelete.data;\r\n        animation.push({method:this.markNodeForDeletion,params:[toDelete,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNodePrev,params:[prev,],});\r\n        animation.push({method:this.skipTempNodeNext,params:[next,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new DoublyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        this.tempNode.next = next;\r\n        if (next) {\r\n            next.prev = this.tempNode;\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        }\r\n        this.tempNode.prev = prev;\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        if (index === this.size) {\r\n            this.tail = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.setOnStop(() => {\r\n            this.doneAnimating();\r\n        });\r\n    }\r\n\r\n    skipTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n    }\r\n\r\n    skipTempNodeNext(next) {\r\n        if (next) {\r\n            next.prev = this.tempNode.prev;\r\n        } else {\r\n            this.tail = this.tail.prev;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    doneAnimating() {\r\n        this.animating = false;\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH);\r\n        let x = DoublyLinkedList.ELEMENT_PADDED_WIDTH * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * DoublyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * DoublyLinkedList.ELEMENT_PADDED_WIDTH;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin()) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        if (node.update(animationSpeed, p5)) {\r\n            node.highlightForDeletion();\r\n        } else if (node.pinnedToMouse && !node.toDelete) {\r\n            node.unHighlight();\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        this.width = p5.width - 2 * this.x;\r\n        this.height = p5.height - 2 * this.y;\r\n        let node = this.head;\r\n        while (node) {\r\n            this.updateNode(node, animationSpeed, p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.updateNode(this.tempNode, animationSpeed, p5);\r\n        }\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                animation.method.apply(animation.scope || this, animation.params);\r\n                if (!animation.customEnd) {\r\n                    if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                        this.animating = false;\r\n                    } else {\r\n                        let time = 5000 / animationSpeed;\r\n                        setTimeout(() => {\r\n                            this.animating = false;\r\n                        }, time);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5);\r\n            node = node.next;\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        // let maxPerRow = Math.floor(this.width / DoublyLinkedList.ELEMENT_PADDED_WIDTH);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        let width = p5.windowWidth;\r\n        if ((this.getNodePosition(this.size-1)[1] + DoublyLinkedList.ELEMENT_HEIGHT) > (height - (2*this.y))) {\r\n            height = (this.getNodePosition(this.size-1)[1] + DoublyLinkedList.ELEMENT_HEIGHT + (3*this.y))\r\n            width -= 16;\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        this.width = p5.width - 2 * this.x;\r\n        this.height = p5.height - 2 * this.y;\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass DoublyLinkedListNode extends AttractedDraggableObject {\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n        this.prev = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + DoublyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + DoublyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > DoublyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, DoublyLinkedList.ITEM_WIDTH, DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX + DoublyLinkedList.POINTER_WIDTH,this.currentY, DoublyLinkedList.ELEMENT_WIDTH,DoublyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.prev) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3, this.prev.currentX + DoublyLinkedList.ITEM_WIDTH, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3)\r\n            p5.rect(this.prev.currentX + DoublyLinkedList.ITEM_WIDTH - 3, this.prev.currentY + DoublyLinkedList.ELEMENT_HEIGHT *2/3 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX, this.currentY, this.currentX + DoublyLinkedList.POINTER_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, 5);\r\n            p5.line(this.currentX + DoublyLinkedList.ITEM_WIDTH - DoublyLinkedList.POINTER_WIDTH / 2, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3, this.next.currentX, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3)\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + DoublyLinkedList.ELEMENT_HEIGHT / 3 - 3, 6,6);\r\n        } else {\r\n            p5.stroke(...this.color);\r\n            p5.line(this.currentX + DoublyLinkedList.POINTER_WIDTH + DoublyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + DoublyLinkedList.ITEM_WIDTH, this.currentY + DoublyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import AttractedDraggableObject from 'animation/AttractedDraggableObject';\r\nimport Visualizer from 'components/visualizer';\r\nimport { Utils } from 'utils';\r\n\r\nexport default class CircularSinglyLinkedList {\r\n    static USE_CANVAS = true;\r\n\r\n    static ELEMENT_HEIGHT = 35;\r\n    static ELEMENT_WIDTH = 50;\r\n    static POINTER_WIDTH = 15;\r\n    static ITEM_WIDTH = CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH;\r\n    static SPACING = 50;\r\n    static ELEMENT_SIZE = CircularSinglyLinkedList.ITEM_WIDTH + CircularSinglyLinkedList.SPACING;\r\n\r\n    static MAX_DIST_REMOVE = 300;\r\n\r\n    constructor(animator) {\r\n\r\n        this.x = 20;\r\n        this.y = 20;\r\n\r\n        this.reset();\r\n\r\n        this.animator = animator;\r\n\r\n        this.animationHistory = [];\r\n        this.animationQueue = [];\r\n        this.animating = false;\r\n\r\n        console.log(this);\r\n    }\r\n\r\n\r\n    addAtIndex(index, data) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index > this.size) {\r\n            console.log(\"index out of bounds\");\r\n            return false;\r\n        }\r\n        if (data === null) {\r\n            console.log(\"Cannot add null to ArrayList.\");\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        if (this.size > 0 && (index === 0 || index === this.size)) {\r\n            animation.push({method:this.makeNode,params:[index === 0 ? 1 : index,this.head.data,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[this.head.next,],});\r\n            animation.push({method:this.setTempNodePrev,params:[this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[data],});\r\n            if (this.size >= 2) {\r\n                animation.push({method:this.shiftForNode,params:[this.head.next,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[1,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n            if (index === this.size) {\r\n                animation.push({method:this.customNodeShift,params:[this.head, this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],customEnd:true});\r\n                // animation.push({method:this.head.shift,scope:this.head,params:[this.head.currentX - 10, this.getNodePosition(this.size)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2,],});\r\n                animation.push({method:this.resetHead,params:[],});\r\n            }\r\n        } else {\r\n            let node = null;\r\n            let nextNode = this.head;\r\n            for (let i = 0; i < index; i++) {\r\n                animation.push({method:this.moveHighlight,params:[node,nextNode,],});\r\n                node = nextNode;\r\n                nextNode = nextNode.next;\r\n            }\r\n            animation.push({method:this.makeNode,params:[index,data,],});\r\n            animation.push({method:this.moveHighlight,params:[node,null,],});\r\n            animation.push({method:this.setTempNodeBefore,params:[nextNode,],});\r\n            animation.push({method:this.setTempNodePrev,params:[node,],});\r\n            if (index < this.size) {\r\n                animation.push({method:this.shiftForNode,params:[nextNode,],});\r\n            }\r\n            animation.push({method:this.insertTempNode,params:[index,],});\r\n            animation.push({method:this.sizeIncr,params:[],});\r\n        }\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation);\r\n        return true;\r\n    }\r\n\r\n    addToFront(data) {\r\n        return this.addAtIndex(0,data);\r\n    }\r\n\r\n    addToBack(data) {\r\n        return this.addAtIndex(this.size,data);\r\n    }\r\n\r\n\r\n    removeFromIndex(index) {\r\n        if (this.animating) {\r\n            console.log(\"animation in progress\");\r\n            return false;\r\n        }\r\n        if (index < 0 || index >= this.size) {\r\n            console.log(`Index invalid: ${index} for ArrayList of length ${this.size}. Should be [0,${this.size-1}].`);\r\n            return false;\r\n        }\r\n        let animation = [];\r\n        let data;\r\n        if (index === 0) {\r\n            data = this.head.data;\r\n            animation.push({method:this.moveHighlight,params:[null,this.head,],});\r\n            animation.push({method:this.changeHeadData,params:[this.head.next.data],});\r\n            index = 1;\r\n        }\r\n        let prev;\r\n        let toDelete;\r\n        let next;\r\n        let node = this.head;\r\n        animation.push({method:this.moveHighlight,params:[null,node,],});\r\n        for (let i = 0; i < index - 1; i++) {\r\n            animation.push({method:this.moveHighlight,params:[node,node.next,],});\r\n            node = node.next;\r\n        }\r\n        prev = node;\r\n        toDelete = prev.next;\r\n        next = toDelete.next;\r\n        if (!data) {\r\n            data = toDelete.data;\r\n        }\r\n        animation.push({method:this.markNodeForDeletion,params:[prev,toDelete,],});\r\n        animation.push({method:this.unmakeNode,params:[toDelete,],customEnd:true,});\r\n        if (index < this.size - 1) {\r\n            animation.push({method:this.shiftIntoNode,params:[next,],});\r\n        }\r\n        animation.push({method:this.skipTempNode,params:[prev,],});\r\n        animation.push({method:this.sizeDecr,params:[],});\r\n        this.addAnimation(animation);\r\n        this.animationHistory.push(animation)\r\n        return data;\r\n    }\r\n\r\n    removeFromFront() {\r\n        return this.removeFromIndex(0);\r\n    }\r\n\r\n    removeFromBack() {\r\n        return this.removeFromIndex(this.size-1);\r\n    }\r\n\r\n\r\n    reset() {\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.nodes = [];\r\n        this.tempNode = null;\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n\r\n    makeNode(index, data) {\r\n        this.tempNode = new CircularSinglyLinkedListNode({data: data, index: index, x:20,y:20,},);\r\n    }\r\n\r\n    setTempNodeBefore(next) {\r\n        if (next) {\r\n            this.tempNode.next = next;\r\n        } else {\r\n            if (this.head) {\r\n                this.tempNode.next = this.head;\r\n            } else {\r\n                this.tempNode.next = this.tempNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    setTempNodePrev(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode;\r\n        } else {\r\n            // this.head = this.tempNode;\r\n        }\r\n    }\r\n\r\n    changeHeadData(data) {\r\n        this.head.data = data;\r\n    }\r\n\r\n    resetHead() {\r\n        this.head = this.head.next;\r\n        let node = this.head;\r\n        let i = 0;\r\n        while (node) {\r\n            node.index = i;\r\n            node.shift(...this.getNodePosition(i++));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    insertTempNode(index) {\r\n        this.nodes.splice(index, 0, this.tempNode);\r\n        if (index === 0) {\r\n            this.head = this.tempNode;\r\n        }\r\n        this.tempNode.shift(...this.getNodePosition(index));\r\n        this.tempNode = null;\r\n    }\r\n\r\n    moveHighlight(fromNode, toNode) {\r\n        if (fromNode) {\r\n            fromNode.unHighlight();\r\n        }\r\n        if (toNode) {\r\n            toNode.highlight();\r\n        }\r\n    }\r\n\r\n    markNodeForDeletion(highlighted, nodeToDelete) {\r\n        if (highlighted) {\r\n            highlighted.unHighlight();\r\n        }\r\n        nodeToDelete.markForDeletion();\r\n    }\r\n\r\n    unmakeNode(node) {\r\n        this.tempNode = node;//this.nodes.splice(node.index, 1)[0];\r\n        this.tempNode.shift(20,20);\r\n        this.tempNode.setOnStop(() => {\r\n            this.doneAnimating();\r\n        });\r\n    }\r\n\r\n    skipTempNode(prev) {\r\n        if (prev) {\r\n            prev.next = this.tempNode.next;\r\n        } else {\r\n            this.head = this.head.next;\r\n        }\r\n        this.tempNode = null;\r\n    }\r\n\r\n    shiftForNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, 1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftIntoNode(node) {\r\n        while (node) {\r\n            this.shiftNode(node, -1);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shiftNode(node, direction) {\r\n        node.shift(...this.getNodePosition(node.index + direction), direction);\r\n    }\r\n\r\n    customNodeShift(node, x, y) {\r\n        node.shift(x,y);\r\n        node.setOnStop(() => {\r\n            this.doneAnimating(0);\r\n        });\r\n    }\r\n\r\n    sizeIncr() {\r\n        this.size++;\r\n    }\r\n\r\n    sizeDecr() {\r\n        this.size--;\r\n    }\r\n\r\n    addAnimation(animation) {\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-start\",],});\r\n        this.animationQueue.push(...animation);\r\n        this.animationQueue.push({method:this.animator.emit,scope:this.animator,params:[\"anim-end\",],});\r\n    }\r\n\r\n    doneAnimating(time = 250) {\r\n        if (time === 0) {\r\n            this.animating = false;\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this.animating = false;\r\n        }, time);\r\n    }\r\n\r\n    getNodePosition(index) {\r\n        let maxPerRow = Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE);\r\n        let x = CircularSinglyLinkedList.ELEMENT_SIZE * index;\r\n        let y = 50 + Math.floor(index / maxPerRow) * 2 * CircularSinglyLinkedList.ELEMENT_HEIGHT;\r\n        x = (index % maxPerRow) * CircularSinglyLinkedList.ELEMENT_SIZE;\r\n        return [x + this.x,y + this.y];\r\n    }\r\n\r\n    getNodeAtPos(x,y) {\r\n        let node = this.head;\r\n        while (node) {\r\n            if (node.containsPos(x,y)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode && this.tempNode.containsPos(x,y)) {\r\n            return this.tempNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    pin(node) {\r\n        this.pinnedNode = node;\r\n        node.pin();\r\n    }\r\n\r\n    unpin() {\r\n        if (this.pinnedNode.unpin() && this.animationQueue.length === 0) {\r\n            this.removeFromIndex(this.pinnedNode.index);\r\n            this.pinnedNode.markBroken();\r\n        }\r\n        this.pinnedNode = null;\r\n    }\r\n\r\n    updateNode(node, animationSpeed, p5) {\r\n        let update = node.update(animationSpeed, p5);\r\n        if (this.animationQueue.length === 0) {\r\n            if (update) {\r\n                node.highlightForDeletion();\r\n            } else if (node.pinnedToMouse && !node.toDelete) {\r\n                node.unHighlight();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        this.width = p5.width - 2 * this.x;\r\n        this.height = p5.height - 2 * this.y;\r\n        let node = this.head;\r\n        while (node) {\r\n            this.updateNode(node, animationSpeed, p5);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.updateNode(this.tempNode, animationSpeed, p5);\r\n        }\r\n        if (!this.animating) {\r\n            if (this.animationQueue.length > 0) {\r\n                let animation = this.animationQueue.shift();\r\n                this.animating = true;\r\n                animation.method.apply(animation.scope || this, animation.params);\r\n                if (!animation.customEnd) {\r\n                    if (animationSpeed >= Math.floor(Visualizer.maxAnimationSpeed())) {\r\n                        this.animating = false;\r\n                    } else {\r\n                        this.doneAnimating(5000 / animationSpeed);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(p5) {\r\n        // let maxPerRow = Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        p5.push();\r\n\r\n        p5.textAlign(p5.CENTER,p5.CENTER);\r\n        p5.textSize(this.ELEMENT_WIDTH/3 - 2);\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            node.draw(p5, node.next === this.head);\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.tempNode) {\r\n            this.tempNode.draw(p5);\r\n        }\r\n\r\n        p5.pop();\r\n    }\r\n\r\n    mousePressed(p5) {\r\n        let pressedNode = this.getNodeAtPos(p5.mouseX, p5.mouseY);\r\n        if (pressedNode) {\r\n            this.pin(pressedNode);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mouseReleased(p5) {\r\n        if (this.pinnedNode) {\r\n            this.unpin();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    windowResized(p5, height) {\r\n        // let maxPerRow = Math.floor(this.width / CircularSinglyLinkedList.ELEMENT_SIZE);\r\n        // let rows = Math.ceil(this.nodes.length / maxPerRow);\r\n\r\n        let width = p5.windowWidth;\r\n        if ((this.getNodePosition(this.size-1)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT) > (height - (2*this.y))) {\r\n            height = (this.getNodePosition(this.size-1)[1] + CircularSinglyLinkedList.ELEMENT_HEIGHT + (3*this.y))\r\n            width -= 16;\r\n            document.querySelector(\".canvas-container\").classList.add(\"overflow\");\r\n        } else {\r\n            document.querySelector(\".canvas-container\").classList.remove(\"overflow\");\r\n        }\r\n\r\n        if (height > p5.height) {\r\n            p5.resizeCanvas(width, height);\r\n        } else {\r\n            p5.resizeCanvas(width, p5.height);\r\n        }\r\n\r\n        this.width = p5.width - 2 * this.x;\r\n        this.height = p5.height - 2 * this.y;\r\n        let node = this.head;\r\n        while (node) {\r\n            node.shift(...this.getNodePosition(node.index));\r\n            node = node.next;\r\n            if (node === this.head) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CircularSinglyLinkedListNode extends AttractedDraggableObject {\r\n    constructor({data, index, x,y} = {}) {\r\n        super(x,y);\r\n\r\n        this.data = data;\r\n        this.index = index;\r\n        this.next = null;\r\n\r\n        this.toDelete = false;\r\n        this.handBroken = false;\r\n        this.frozen = false;\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    shift(x,y,direction = 0) {\r\n        super.shift(x,y);\r\n        this.index += Math.sign(direction);\r\n    }\r\n\r\n    containsPos(x,y) {\r\n        return ((this.currentX <= x && x <= (this.currentX + CircularSinglyLinkedList.ITEM_WIDTH)) && (this.currentY <= y && y <= (this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT)))\r\n    }\r\n\r\n    highlight() {\r\n        this.color = [255,165,0];\r\n    }\r\n\r\n    unHighlight() {\r\n        this.color = [0,0,0];\r\n    }\r\n\r\n    highlightForDeletion() {\r\n        this.color[0] = 255;\r\n    }\r\n\r\n    markForDeletion() {\r\n        this.toDelete = true;\r\n        this.highlightForDeletion();\r\n    }\r\n\r\n    markBroken() {\r\n        this.markForDeletion();\r\n        this.frozen = true;\r\n        this.handBroken = true;\r\n    }\r\n\r\n    unpin() {\r\n        super.unpin();\r\n        return this.displacement() > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    update(animationSpeed, p5) {\r\n        let dist = super.update(animationSpeed, p5);\r\n        return this.pinnedToMouse && !this.handBroken && dist > CircularSinglyLinkedList.MAX_DIST_REMOVE;\r\n    }\r\n\r\n    draw(p5, pointsToHead = false) {\r\n        // console.log(this);\r\n        p5.push();\r\n        p5.fill(255);\r\n        p5.stroke(...this.color);\r\n        p5.rect(this.currentX, this.currentY, CircularSinglyLinkedList.ITEM_WIDTH, CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.fill(...this.color);\r\n        p5.text(this.data.toString(), this.currentX,this.currentY, CircularSinglyLinkedList.ELEMENT_WIDTH,CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        if (this.next) {\r\n            p5.stroke(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.fill(...Utils.addArray(this.color, [0,0,255]));\r\n            p5.circle(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, 5);\r\n            if (pointsToHead) {\r\n                p5.push();\r\n                p5.noFill();\r\n                p5.curveTightness(0.8);\r\n                p5.beginShape();\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n\r\n                p5.curveVertex(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n                p5.curveVertex(15, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT * 2);\r\n\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.curveVertex(this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n                p5.endShape();\r\n                p5.pop();\r\n            } else {\r\n                p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH + CircularSinglyLinkedList.POINTER_WIDTH / 2, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2, this.next.currentX, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2);\r\n            }\r\n            p5.rect(this.next.currentX - 3, this.next.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT / 2 - 3, 6,6);\r\n        } else {\r\n            p5.line(this.currentX + CircularSinglyLinkedList.ELEMENT_WIDTH, this.currentY, this.currentX + CircularSinglyLinkedList.ITEM_WIDTH, this.currentY + CircularSinglyLinkedList.ELEMENT_HEIGHT);\r\n        }\r\n        p5.pop();\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport Sketch from 'react-p5';\r\nimport './visualizer.scss';\r\n\r\nimport ControlBar from './controlBar';\r\n\r\nimport { ControlBuilder } from 'utils';\r\nimport { Animator } from 'animation';\r\n\r\nexport default class Visualizer extends PureComponent {\r\n\r\n    static INITIAL_SPEED = 50;\r\n    static MAX_SPEED = 20;\r\n    static SPEED_SLIDER_DEGREE = 1.5;\r\n\r\n    static maxAnimationSpeed() {\r\n        return Math.pow(Visualizer.MAX_SPEED, Visualizer.SPEED_SLIDER_DEGREE);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //FUNCTION BINDING\r\n        this.setup = this.setup.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.mousePressed = this.mousePressed.bind(this);\r\n        this.mouseReleased = this.mouseReleased.bind(this);\r\n        this.windowResized = this.windowResized.bind(this);\r\n\r\n\r\n        this.controlBarRef = React.createRef();\r\n\r\n        this.controlGroups = [];\r\n        this.controls = [];\r\n\r\n        this.state = {\r\n            animationSpeed: Visualizer.INITIAL_SPEED,\r\n        }\r\n\r\n        this.disableUI = this.disableUI.bind(this);\r\n        this.enableUI = this.enableUI.bind(this);\r\n\r\n        this.focusedElement = null;\r\n\r\n        this.animator = new Animator();\r\n        this.animator.on(\"anim-start\", this.disableUI);\r\n        this.animator.on(\"anim-end\", this.enableUI);\r\n\r\n\r\n        this.addDefaultControls();\r\n    }\r\n\r\n    addDefaultControls() {\r\n        this.speedSlider = ControlBuilder.createSlider(1, Visualizer.MAX_SPEED, Math.pow(Visualizer.INITIAL_SPEED,1/Visualizer.SPEED_SLIDER_DEGREE), 0);\r\n        this.defaultControlGroup = ControlBuilder.createControlGroup(\"default\", this.speedSlider);\r\n        this.defaultsLabel = \"Animation controls\";\r\n    }\r\n\r\n    addControlLabel(label) {\r\n        this.mainLabel = label;\r\n    }\r\n\r\n    addControlGroups(...controlGroups) {\r\n        // console.log(\"control added\");\r\n        this.controlGroups.push(...controlGroups);\r\n        controlGroups.forEach((controlGroup) => {\r\n            this.registerControlGroup(controlGroup);\r\n        });\r\n    }\r\n\r\n    registerControlGroup(controlGroup) {\r\n        controlGroup.childNodes.forEach((child) => {\r\n            if (child.tagName === \"INPUT\") {\r\n                this.controls.push(child);\r\n            } else {\r\n                this.registerControlGroup(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    disableUI() {\r\n        // console.log(\"disable\");\r\n        this.controls.forEach((control) => {\r\n            if (control === document.activeElement) {\r\n                this.focusedElement = control;\r\n            }\r\n            control.disabled = true;\r\n        });\r\n    }\r\n\r\n    enableUI() {\r\n        // console.log(\"enable\");\r\n        this.controls.forEach((control) => {\r\n            control.disabled = false;\r\n            if (control === this.focusedElement) {\r\n                control.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.controlBar = this.controlBarRef.current;\r\n        this.controlBar.setMainLabel(this.mainLabel);\r\n        this.controlBar.setDefaultsLabel(this.defaultsLabel);\r\n        this.controlBar.addDefaultGroup(this.defaultControlGroup);\r\n        this.controlGroups.forEach((controlGroup, i) => {\r\n            this.controlBar.addControlGroup(controlGroup);\r\n        });\r\n    }\r\n\r\n    setup(p5, canvasParentRef) {\r\n        // let width = this.controlBar.controlBar.current.getBoundingClientRect().width;\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n\r\n        this.mobile = window.ontouchstart !== undefined;\r\n        if (this.mobile) {\r\n            height = 1000;\r\n            // document.querySelector(\".canvas-container\").style.height = height + \"px\";\r\n            document.querySelector(\".canvas-container\").classList.add(\"mobile\");\r\n        }\r\n\r\n        //config\r\n        let canvas = p5.createCanvas(p5.windowWidth\r\n            ,height);\r\n        canvas.parent(canvasParentRef);\r\n\r\n        canvas.touchStarted(event => {\r\n            event.preventDefault();\r\n        });\r\n        // p5.background(200);\r\n        // p5.frameRate(8);\r\n\r\n        //objects\r\n        // this.state.visualization = new ArrayList();\r\n        // window.visualization = this.state.visualization;\r\n        // this.setState({isSetup: true,});\r\n        //\r\n        document.addEventListener(\"resize\", (event) => {\r\n            console.log(\"resize\");\r\n        });\r\n    }\r\n    draw(p5) {\r\n        //inputs\r\n        this.setState({animationSpeed: Math.pow(this.speedSlider.value,Visualizer.SPEED_SLIDER_DEGREE)});\r\n\r\n        p5.background(255);\r\n\r\n        //objects\r\n        this.visualization.update(this.state.animationSpeed, p5);\r\n        this.visualization.draw(p5);\r\n    }\r\n    mousePressed(p5) {\r\n        if (this.visualization.mousePressed) {\r\n            return this.visualization.mousePressed(p5);\r\n        }\r\n        return true;\r\n    }\r\n    mouseReleased(p5) {\r\n        if (this.visualization.mouseReleased) {\r\n            return this.visualization.mouseReleased(p5);\r\n        }\r\n        return true;\r\n    }\r\n    windowResized(p5) {\r\n        //config\r\n        let height = document.querySelector(\".app-content\").getBoundingClientRect().height\r\n                - document.querySelector(\"#main-control\").getBoundingClientRect().height\r\n                - document.querySelector(\"#default-control\").getBoundingClientRect().height;\r\n        if (this.mobile) {\r\n            // height = 1000;\r\n        }\r\n        // height = document.querySelector(\".react-p5\").getBoundingClientRect().height;\r\n        document.querySelector(\".canvas-container\").style.height = height+\"px\";\r\n        height = document.querySelector(\".canvas-container\").getBoundingClientRect().height;\r\n        // console.log(height);\r\n        // p5.resizeCanvas(p5.windowWidth, p5.height);\r\n\r\n        //objects\r\n        this.visualization.windowResized(p5, height);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div className={`visualizer ${this.class}`}>\r\n                    <ControlBar ref={this.controlBarRef}/>\r\n                    {\r\n                        !this.visualization || this.visualization.constructor.USE_CANVAS ?\r\n                                <div className=\"canvas-container\">\r\n                                    <Sketch setup={this.setup} draw={this.draw} windowResized={this.windowResized} mousePressed={this.mousePressed} mouseReleased={this.mouseReleased} touchStarted={this.mousePressed} />\r\n                                </div>\r\n                            :\r\n                                this.visualization.render()\r\n                    }\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import './arraylist.scss';\r\n\r\nimport Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\nimport { ArrayList } from 'animation';\r\n\r\nexport default class ArrayListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'arraylist';\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        super.addControlLabel(\"ArrayList\");\r\n\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.list = new ArrayList(this.animator);\r\n        super.visualization = this.list;\r\n        window.list = this.list;\r\n    }\r\n\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n\r\n}\r\n","import './singly-linked-list.scss';\r\n\r\nimport Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\nimport { SinglyLinkedList } from 'animation';\r\n\r\nexport default class SinglyLinkedListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'singlylinkedlist';\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        super.addControlLabel(\"SinglyLinkedList\");\r\n\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.list = new SinglyLinkedList(this.animator);\r\n        super.visualization = this.list;\r\n        window.list = this.list;\r\n    }\r\n\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n\r\n}\r\n","import './doubly-linked-list.scss';\r\n\r\nimport Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\nimport { DoublyLinkedList } from 'animation';\r\n\r\nexport default class DoublyLinkedListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'doublylinkedlist';\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        super.addControlLabel(\"DoublyLinkedList\");\r\n\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.list = new DoublyLinkedList(this.animator);\r\n        super.visualization = this.list;\r\n        window.list = this.list;\r\n    }\r\n\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n\r\n}\r\n","import './circular-singly-linked-list.scss';\r\n\r\nimport Visualizer from 'components/visualizer';\r\nimport { ControlBuilder } from 'utils';\r\n\r\nimport { CircularSinglyLinkedList } from 'animation';\r\n\r\nexport default class CircularSinglyLinkedListVisualizer extends Visualizer {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        super.class = 'circularsinglylinkedlist';\r\n\r\n        //FUNCTION BINDING\r\n        this.addAtIndexButtonCallback = this.addAtIndexButtonCallback.bind(this);\r\n        this.addToFrontButtonCallback = this.addToFrontButtonCallback.bind(this);\r\n        this.addToBackButtonCallback = this.addToBackButtonCallback.bind(this);\r\n        this.removeFromIndexButtonCallback = this.removeFromIndexButtonCallback.bind(this);\r\n        this.removeFromFrontButtonCallback = this.removeFromFrontButtonCallback.bind(this);\r\n        this.removeFromBackButtonCallback = this.removeFromBackButtonCallback.bind(this);\r\n        this.resetButtonCallback = this.resetButtonCallback.bind(this);\r\n        this.elementFieldCallback = this.elementFieldCallback.bind(this);\r\n        this.indexFieldCallback = this.indexFieldCallback.bind(this);\r\n\r\n\r\n        this.list = null;\r\n\r\n        this.addControls();\r\n    }\r\n\r\n    addControls() {\r\n        super.addControlLabel(\"CircularSinglyLinkedList\");\r\n\r\n        this.valueField = ControlBuilder.createField(\"value\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        this.indexField = ControlBuilder.createField(\"index\", ControlBuilder.validatorIntOnly(), ControlBuilder.validatorMaxLength(4));\r\n        ControlBuilder.addSubmit(this.valueField, this.elementFieldCallback);\r\n        ControlBuilder.addSubmit(this.indexField, this.indexFieldCallback);\r\n\r\n        this.addAtIndexButton = ControlBuilder.createButton(\"addAtIndex\");\r\n        this.addAtIndexButton.addEventListener(\"click\",this.addAtIndexButtonCallback);\r\n\r\n        this.addToFrontButton = ControlBuilder.createButton(\"addToFront\");\r\n        this.addToFrontButton.addEventListener(\"click\",this.addToFrontButtonCallback);\r\n\r\n        this.addToBackButton = ControlBuilder.createButton(\"addToBack\");\r\n        this.addToBackButton.addEventListener(\"click\",this.addToBackButtonCallback);\r\n\r\n        this.removeFromIndexButton = ControlBuilder.createButton(\"removeFromIndex\");\r\n        this.removeFromIndexButton.addEventListener(\"click\",this.removeFromIndexButtonCallback);\r\n\r\n        this.removeFromFrontButton = ControlBuilder.createButton(\"removeFromFront\");\r\n        this.removeFromFrontButton.addEventListener(\"click\",this.removeFromFrontButtonCallback);\r\n\r\n        this.removeFromBackButton = ControlBuilder.createButton(\"removeFromBack\");\r\n        this.removeFromBackButton.addEventListener(\"click\",this.removeFromBackButtonCallback);\r\n\r\n        this.resetButton = ControlBuilder.createButton(\"reset\");\r\n        this.resetButton.addEventListener(\"click\",this.resetButtonCallback);\r\n\r\n        //set tab order for controls\r\n        ControlBuilder.setTabControl(this.valueField, this.indexField);\r\n        ControlBuilder.setTabControl(this.indexField, this.addToFrontButton);\r\n        ControlBuilder.setTabControl(this.removeFromBackButton, this.addAtIndexButton);\r\n        ControlBuilder.setTabControl(this.resetButton, this.valueField);\r\n\r\n        // build groups\r\n        let addFrontBackGroup = ControlBuilder.createControlGroup(\"addFrontBack\", this.addToFrontButton, this.addToBackButton);\r\n        let removeFrontBackGroup = ControlBuilder.createControlGroup(\"removeFrontBack\", this.removeFromFrontButton, this.removeFromBackButton);\r\n        let valueFrontBackGroup = ControlBuilder.createControlGroup(\"valueFrontBack\", this.valueField, addFrontBackGroup, removeFrontBackGroup);\r\n\r\n        let indexGroup = ControlBuilder.createControlGroup(\"indexAddRemove\", this.indexField, this.addAtIndexButton, this.removeFromIndexButton);\r\n\r\n        let resetGroup = ControlBuilder.createControlGroup(\"reset\", this.resetButton);\r\n\r\n        super.addControlGroups(valueFrontBackGroup, indexGroup, resetGroup);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.list = new CircularSinglyLinkedList(this.animator);\r\n        super.visualization = this.list;\r\n        window.list = this.list;\r\n    }\r\n\r\n\r\n\r\n    addAtIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.valueField.value = \"\";\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    elementFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            if (!isNaN(index)) {\r\n                if (this.list.addAtIndex(index, value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            } else {\r\n                if (this.list.addToBack(value)) {\r\n                    this.valueField.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    indexFieldCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        let value = this.valueField.value;\r\n        if (value !== \"\" && !isNaN(index)) {\r\n            if (this.list.addAtIndex(index, value)) {\r\n                this.indexField.value = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addToFrontButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToFront(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n    addToBackButtonCallback() {\r\n        let value = this.valueField.value;\r\n        if (value !== \"\") {\r\n            this.list.addToBack(value);\r\n            this.valueField.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    removeFromIndexButtonCallback() {\r\n        let index = parseInt(this.indexField.value);\r\n        if (!isNaN(index)) {\r\n            this.list.removeFromIndex(index);\r\n            this.indexField.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeFromFrontButtonCallback() {\r\n        this.list.removeFromFront();\r\n    }\r\n\r\n    removeFromBackButtonCallback() {\r\n        this.list.removeFromBack();\r\n    }\r\n\r\n\r\n    resetButtonCallback() {\r\n        this.list.reset();\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from \"react-router-dom\";\r\nimport './lists.scss';\r\n\r\nimport ArrayListVisualizer from './arraylist';\r\nimport SinglyLinkedListVisualizer from './singly-linked-list';\r\nimport DoublyLinkedListVisualizer from './doubly-linked-list';\r\nimport CircularSinglyLinkedListVisualizer from './circular-singly-linked-list';\r\n\r\nexport default function Lists(props) {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <ListView url={url} />} />\r\n                <Route path={`${path}/arraylist`} component={ArrayListVisualizer} />\r\n                <Route path={`${path}/sll`} component={SinglyLinkedListVisualizer} />\r\n                <Route path={`${path}/dll`} component={DoublyLinkedListVisualizer} />\r\n                <Route path={`${path}/c-sll`} component={CircularSinglyLinkedListVisualizer} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction ListView(props) {\r\n    let path = props.url;\r\n    return (\r\n            <div className=\"list-view\">\r\n                <Link to={`${path}/arraylist`}>ArrayList</Link>\r\n                <Link to={`${path}/sll`}>SinglyLinkedList</Link>\r\n                <Link to={`${path}/dll`}>DoublyLinkedList</Link>\r\n                <Link to={`${path}/c-sll`}>CircularSinglyLinkedList</Link>\r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport './datastructures.scss';\r\n\r\nimport Lists from 'components/lists';\r\n\r\n\r\nexport default function DataStructures() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <Switch>\r\n                <Route exact path={path} component={props => <DataStructureView url={url} />} />\r\n                <Route path={`${path}/lists`} component={Lists} />\r\n            </Switch>\r\n        );\r\n}\r\n\r\nfunction DataStructureView(props) {\r\n    return (\r\n            <div className=\"datastructure-view\">\r\n            </div>\r\n        );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainComponent from './components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<MainComponent />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport './app.scss';\r\nimport './universal.scss';\r\n\r\nimport AppHeader from './app-header';\r\nimport AppFooter from './app-footer';\r\nimport Home from 'components/home';\r\nimport About from 'components/about';\r\nimport DataStructures from 'components/datastructures';\r\n\r\nexport default function App() {\r\n    return (\r\n            <HashRouter basename='/'>\r\n                <div className=\"app\">\r\n                    <AppHeader />\r\n                    <div className=\"app-content\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/datastructures\" component={DataStructures} />\r\n                        </Switch>\r\n                    </div>\r\n                    <AppFooter />\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n}\r\n"],"sourceRoot":""}